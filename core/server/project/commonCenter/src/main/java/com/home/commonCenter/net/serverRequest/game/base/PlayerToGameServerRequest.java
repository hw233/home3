package com.home.commonCenter.net.serverRequest.game.base;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonCenter.global.CenterC;
import com.home.commonCenter.net.serverRequest.game.base.CenterToGameServerRequest;
import com.home.commonCenter.net.serverRequest.game.system.PlayerToGameTransCenterToGameServerRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;

/** 角色到逻辑服消息(只有在线角色响应)(switching时,消息阻塞)(generated by shine) */
public class PlayerToGameServerRequest extends CenterToGameServerRequest
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.PlayerToGame;
	
	public PlayerToGameServerRequest()
	{
		_dataID=ServerMessageType.PlayerToGame;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	@Override
	protected void doWriteToStream(BytesWriteStream stream)
	{
		//直接协议号和内容
		stream.natureWriteUnsignedShort(_dataID);
		doWriteBytesSimple(stream);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "PlayerToGameServerRequest";
	}
	
	/** 发送给玩家(主线程用) */
	public void sendToPlayer(long playerID)
	{
		preSend();
		
		PlayerToGameTransCenterToGameServerRequest cr=PlayerToGameTransCenterToGameServerRequest.create();
		cr.setData(playerID,this);
		cr.sendToGame(CenterC.main.getNowGameIDByLogicID(playerID));
	}
	
	/** 创建实例 */
	public static PlayerToGameServerRequest create()
	{
		PlayerToGameServerRequest re=(PlayerToGameServerRequest)BytesControl.createRequest(dataID);
		return re;
	}
	
}
