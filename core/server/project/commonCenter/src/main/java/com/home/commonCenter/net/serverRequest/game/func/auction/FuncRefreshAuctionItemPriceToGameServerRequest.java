package com.home.commonCenter.net.serverRequest.game.func.auction;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonCenter.net.serverRequest.game.func.base.FuncCenterToGameServerRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.IntIntMap;
import com.home.shine.support.pool.DataPool;

/** 刷新拍卖行物品价格消息到逻辑服(generated by shine) */
public class FuncRefreshAuctionItemPriceToGameServerRequest extends FuncCenterToGameServerRequest
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.FuncRefreshAuctionItemPriceToGame;
	
	/** 物品价格列表 */
	public IntIntMap itemPriceDic;
	
	public FuncRefreshAuctionItemPriceToGameServerRequest()
	{
		_dataID=ServerMessageType.FuncRefreshAuctionItemPriceToGame;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		IntIntMap itemPriceDicTemp=itemPriceDic;
		if(itemPriceDicTemp!=null)
		{
			this.itemPriceDic=new IntIntMap(itemPriceDicTemp.size());
			IntIntMap itemPriceDicT=this.itemPriceDic;
			if(!itemPriceDicTemp.isEmpty())
			{
				int itemPriceDicKFreeValue=itemPriceDicTemp.getFreeValue();
				long[] itemPriceDicKTable=itemPriceDicTemp.getTable();
				long itemPriceDicKEntry;
				for(int itemPriceDicKI=itemPriceDicKTable.length-1;itemPriceDicKI>=0;--itemPriceDicKI)
				{
					itemPriceDicKEntry=itemPriceDicKTable[itemPriceDicKI];
					int itemPriceDicK=(int)itemPriceDicKEntry;
					if(itemPriceDicK!=itemPriceDicKFreeValue)
					{
						int itemPriceDicV=(int)(itemPriceDicKEntry>>>32);
						int itemPriceDicW;
						int itemPriceDicU;
						itemPriceDicW=itemPriceDicK;
						
						itemPriceDicU=itemPriceDicV;
						
						itemPriceDicT.put(itemPriceDicW,itemPriceDicU);
					}
				}
			}
		}
		else
		{
			this.itemPriceDic=null;
			nullObjError("itemPriceDic");
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncRefreshAuctionItemPriceToGameServerRequest";
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		if(this.itemPriceDic!=null)
		{
			stream.writeLen(this.itemPriceDic.size());
			if(!this.itemPriceDic.isEmpty())
			{
				int itemPriceDicKFreeValue=this.itemPriceDic.getFreeValue();
				long[] itemPriceDicKTable=this.itemPriceDic.getTable();
				long itemPriceDicKEntry;
				for(int itemPriceDicKI=itemPriceDicKTable.length-1;itemPriceDicKI>=0;--itemPriceDicKI)
				{
					itemPriceDicKEntry=itemPriceDicKTable[itemPriceDicKI];
					int itemPriceDicK=(int)itemPriceDicKEntry;
					if(itemPriceDicK!=itemPriceDicKFreeValue)
					{
						int itemPriceDicV=(int)(itemPriceDicKEntry>>>32);
						stream.writeInt(itemPriceDicK);
						
						stream.writeInt(itemPriceDicV);
						
					}
				}
			}
		}
		else
		{
			nullObjError("itemPriceDic");
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("itemPriceDic");
		writer.sb.append(':');
		writer.sb.append("Map<int,int>");
		if(this.itemPriceDic!=null)
		{
			writer.sb.append('(');
			writer.sb.append(this.itemPriceDic.size());
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.itemPriceDic.isEmpty())
			{
				int itemPriceDicKFreeValue=this.itemPriceDic.getFreeValue();
				long[] itemPriceDicKTable=this.itemPriceDic.getTable();
				long itemPriceDicKEntry;
				for(int itemPriceDicKI=itemPriceDicKTable.length-1;itemPriceDicKI>=0;--itemPriceDicKI)
				{
					itemPriceDicKEntry=itemPriceDicKTable[itemPriceDicKI];
					int itemPriceDicK=(int)itemPriceDicKEntry;
					if(itemPriceDicK!=itemPriceDicKFreeValue)
					{
						int itemPriceDicV=(int)(itemPriceDicKEntry>>>32);
						writer.writeTabs();
						writer.sb.append(itemPriceDicK);
						
						writer.sb.append(':');
						writer.sb.append(itemPriceDicV);
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		if(this.itemPriceDic!=null)
		{
			this.itemPriceDic.clear();
		}
	}
	
	/** 创建实例 */
	public static FuncRefreshAuctionItemPriceToGameServerRequest create(int funcID,IntIntMap itemPriceDic)
	{
		FuncRefreshAuctionItemPriceToGameServerRequest re=(FuncRefreshAuctionItemPriceToGameServerRequest)BytesControl.createRequest(dataID);
		re.funcID=funcID;
		re.itemPriceDic=itemPriceDic;
		return re;
	}
	
}
