package com.home.commonCenter.net.serverResponse.game.func.social;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonBase.data.social.RoleSocialData;
import com.home.commonBase.data.social.RoleSocialPoolData;
import com.home.commonBase.tool.func.RoleSocialPoolTool;
import com.home.commonCenter.global.CenterC;
import com.home.commonCenter.net.serverRequest.game.func.social.FuncReGetRandomPlayerListFromRoleSocialPoolToCenterServerRequest;
import com.home.commonCenter.net.serverResponse.game.func.base.FuncPlayerToCenterServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.IntList;
import com.home.shine.support.collection.SList;
import com.home.shine.support.pool.DataPool;
import com.home.shine.utils.MathUtils;

/** 获取随机的角色列表从中心服社交数据池(generated by shine) */
public class FuncGetRandomPlayerListFromRoleSocialPoolToCenterServerResponse extends FuncPlayerToCenterServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.FuncGetRandomPlayerListFromRoleSocialPoolToCenter;
	
	/** 需要获取的长度 */
	public int len;
	
	/** 获取参数(自行定义) */
	public int arg;
	
	public FuncGetRandomPlayerListFromRoleSocialPoolToCenterServerResponse()
	{
		_dataID=ServerMessageType.FuncGetRandomPlayerListFromRoleSocialPoolToCenter;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncGetRandomPlayerListFromRoleSocialPoolToCenterServerResponse";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.len=stream.readInt();
		
		this.arg=stream.readInt();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("len");
		writer.sb.append(':');
		writer.sb.append(this.len);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("arg");
		writer.sb.append(':');
		writer.sb.append(this.arg);
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		RoleSocialPoolTool poolTool=CenterC.global.func.getRoleSocialPoolTool(funcID);
		
		SList<RoleSocialPoolData> dataList=poolTool.getDataList();
		
		SList<RoleSocialData> reList=new SList<>();
		
		if(dataList.size()<=len)
		{
			RoleSocialPoolData[] values=dataList.getValues();
			RoleSocialPoolData v;
			
			for(int i=0,len=dataList.size();i<len;++i)
			{
				v=values[i];
				reList.add(v.data);
			}
		}
		else
		{
			IntList re=new IntList();
			MathUtils.randomSomeNotReset(re,len,dataList.size());
			
			int len=re.size();
			for(int i=0;i<len;i++)
			{
				//随机结果
				reList.add(dataList.get(re.get(i)).data);
			}
		}
		
		FuncReGetRandomPlayerListFromRoleSocialPoolToCenterServerRequest.create(funcID,reList,arg).sendToPlayer(playerID);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.len=0;
		this.arg=0;
	}
	
}
