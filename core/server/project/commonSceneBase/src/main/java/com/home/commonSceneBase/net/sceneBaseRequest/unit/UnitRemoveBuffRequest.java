package com.home.commonSceneBase.net.sceneBaseRequest.unit;
import com.home.commonSceneBase.constlist.generate.SceneBaseRequestType;
import com.home.commonSceneBase.net.sceneBaseRequest.base.UnitSRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 单位移除buff(generated by shine) */
public class UnitRemoveBuffRequest extends UnitSRequest
{
	/** 数据类型ID */
	public static final int dataID=SceneBaseRequestType.UnitRemoveBuff;
	
	/** buff实例ID */
	public int buffInstanceID;
	
	public UnitRemoveBuffRequest()
	{
		_dataID=SceneBaseRequestType.UnitRemoveBuff;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "UnitRemoveBuffRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("buffInstanceID");
		writer.sb.append(':');
		writer.sb.append(this.buffInstanceID);
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.buffInstanceID);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.buffInstanceID);
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.buffInstanceID=0;
	}
	
	/** 创建实例 */
	public static UnitRemoveBuffRequest create(int instanceID,int buffInstanceID)
	{
		UnitRemoveBuffRequest re=(UnitRemoveBuffRequest)BytesControl.createRequest(dataID);
		re.instanceID=instanceID;
		re.buffInstanceID=buffInstanceID;
		return re;
	}
	
}
