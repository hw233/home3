package com.home.commonBase.data.scene.base;
import com.home.commonBase.config.game.BuffConfig;
import com.home.commonBase.config.game.BuffLevelConfig;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** buff数据(generated by shine) */
public class BuffData extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.Buff;
	
	/** 实例ID */
	public int instanceID;
	
	/** id */
	public int id;
	
	/** 等级 */
	public int level;
	
	/** 剩余时间(ms) */
	public int lastTime;
	
	/** 剩余数目(叠层数) */
	public int lastNum;
	
	/** 添加者(攻击者) */
	public int adderInstanceID;
	
	/** 配置 */
	public BuffConfig config;
	
	/** 等级配置 */
	public BuffLevelConfig levelConfig;
	
	public BuffData()
	{
		_dataID=BaseDataType.Buff;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.instanceID=stream.readInt();
		
		this.id=stream.readInt();
		
		this.level=stream.readInt();
		
		this.lastTime=stream.readInt();
		
		this.lastNum=stream.readInt();
		
		this.adderInstanceID=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeInt(this.instanceID);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.level);
		
		stream.writeInt(this.lastTime);
		
		stream.writeInt(this.lastNum);
		
		stream.writeInt(this.adderInstanceID);
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.instanceID=stream.readInt();
		
		this.id=stream.readInt();
		
		this.level=stream.readInt();
		
		this.lastTime=stream.readInt();
		
		this.lastNum=stream.readInt();
		
		this.adderInstanceID=stream.readInt();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeInt(this.instanceID);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.level);
		
		stream.writeInt(this.lastTime);
		
		stream.writeInt(this.lastNum);
		
		stream.writeInt(this.adderInstanceID);
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof BuffData))
			return;
		
		BuffData mData=(BuffData)data;
		
		this.instanceID=mData.instanceID;
		this.id=mData.id;
		this.level=mData.level;
		this.lastTime=mData.lastTime;
		this.lastNum=mData.lastNum;
		this.adderInstanceID=mData.adderInstanceID;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof BuffData))
			return;
		
		BuffData mData=(BuffData)data;
		
		this.instanceID=mData.instanceID;
		
		this.id=mData.id;
		
		this.level=mData.level;
		
		this.lastTime=mData.lastTime;
		
		this.lastNum=mData.lastNum;
		
		this.adderInstanceID=mData.adderInstanceID;
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		BuffData mData=(BuffData)data;
		if(this.instanceID!=mData.instanceID)
			return false;
		
		if(this.id!=mData.id)
			return false;
		
		if(this.level!=mData.level)
			return false;
		
		if(this.lastTime!=mData.lastTime)
			return false;
		
		if(this.lastNum!=mData.lastNum)
			return false;
		
		if(this.adderInstanceID!=mData.adderInstanceID)
			return false;
		
		return true;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "BuffData";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("instanceID");
		writer.sb.append(':');
		writer.sb.append(this.instanceID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("id");
		writer.sb.append(':');
		writer.sb.append(this.id);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("level");
		writer.sb.append(':');
		writer.sb.append(this.level);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("lastTime");
		writer.sb.append(':');
		writer.sb.append(this.lastTime);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("lastNum");
		writer.sb.append(':');
		writer.sb.append(this.lastNum);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("adderInstanceID");
		writer.sb.append(':');
		writer.sb.append(this.adderInstanceID);
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		
	}
	
	@Override
	public void clear()
	{
		config=null;
		levelConfig=null;
	}
	
	public void reloadConfig()
	{
		config=BuffConfig.get(id);
		levelConfig=BuffLevelConfig.get(id,level);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.instanceID=0;
		this.id=0;
		this.level=0;
		this.lastTime=0;
		this.lastNum=0;
		this.adderInstanceID=0;
	}
	
}
