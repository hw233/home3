package com.home.commonBase.data.login;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.data.system.ServerInfoData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.IntIntMap;
import com.home.shine.support.pool.DataPool;

/** 中心服初始化服务器数据(generated by shine) */
public class CenterInitServerData extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.CenterInitServer;
	
	/** 服务器信息 */
	public ServerInfoData info;
	
	/** 区服字典(areaID:gameID) */
	public IntIntMap areaDic;
	
	public CenterInitServerData()
	{
		_dataID=BaseDataType.CenterInitServer;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "CenterInitServerData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		BaseData infoT=stream.readDataFullNotNull();
		if(infoT!=null)
		{
			if(infoT instanceof ServerInfoData)
			{
				this.info=(ServerInfoData)infoT;
			}
			else
			{
				this.info=new ServerInfoData();
				if(!(infoT.getClass().isAssignableFrom(ServerInfoData.class)))
				{
					stream.throwTypeReadError(ServerInfoData.class,infoT.getClass());
				}
				this.info.shadowCopy(infoT);
			}
		}
		else
		{
			this.info=null;
		}
		
		int areaDicLen=stream.readLen();
		if(this.areaDic!=null)
		{
			this.areaDic.clear();
			this.areaDic.ensureCapacity(areaDicLen);
		}
		else
		{
			this.areaDic=new IntIntMap(areaDicLen);
		}
		
		IntIntMap areaDicT=this.areaDic;
		for(int areaDicI=areaDicLen-1;areaDicI>=0;--areaDicI)
		{
			int areaDicK;
			int areaDicV;
			areaDicK=stream.readInt();
			
			areaDicV=stream.readInt();
			
			areaDicT.put(areaDicK,areaDicV);
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.info!=null)
		{
			stream.writeDataFullNotNull(this.info);
		}
		else
		{
			nullObjError("info");
		}
		
		if(this.areaDic!=null)
		{
			stream.writeLen(this.areaDic.size());
			if(!this.areaDic.isEmpty())
			{
				int areaDicKFreeValue=this.areaDic.getFreeValue();
				int[] areaDicKTable=this.areaDic.getTable();
				for(int areaDicKI=areaDicKTable.length-2;areaDicKI>=0;areaDicKI-=2)
				{
					if(areaDicKTable[areaDicKI]!=areaDicKFreeValue)
					{
						int areaDicK=areaDicKTable[areaDicKI];
						int areaDicV=areaDicKTable[areaDicKI+1];
						stream.writeInt(areaDicK);
						
						stream.writeInt(areaDicV);
						
					}
				}
			}
		}
		else
		{
			nullObjError("areaDic");
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.info=(ServerInfoData)stream.readDataSimpleNotNull();
		
		int areaDicLen=stream.readLen();
		if(this.areaDic!=null)
		{
			this.areaDic.clear();
			this.areaDic.ensureCapacity(areaDicLen);
		}
		else
		{
			this.areaDic=new IntIntMap(areaDicLen);
		}
		
		IntIntMap areaDicT=this.areaDic;
		for(int areaDicI=areaDicLen-1;areaDicI>=0;--areaDicI)
		{
			int areaDicK;
			int areaDicV;
			areaDicK=stream.readInt();
			
			areaDicV=stream.readInt();
			
			areaDicT.put(areaDicK,areaDicV);
		}
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.info!=null)
		{
			stream.writeDataSimpleNotNull(this.info);
		}
		else
		{
			nullObjError("info");
		}
		
		if(this.areaDic!=null)
		{
			stream.writeLen(this.areaDic.size());
			if(!this.areaDic.isEmpty())
			{
				int areaDicKFreeValue=this.areaDic.getFreeValue();
				int[] areaDicKTable=this.areaDic.getTable();
				for(int areaDicKI=areaDicKTable.length-2;areaDicKI>=0;areaDicKI-=2)
				{
					if(areaDicKTable[areaDicKI]!=areaDicKFreeValue)
					{
						int areaDicK=areaDicKTable[areaDicKI];
						int areaDicV=areaDicKTable[areaDicKI+1];
						stream.writeInt(areaDicK);
						
						stream.writeInt(areaDicV);
						
					}
				}
			}
		}
		else
		{
			nullObjError("areaDic");
		}
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof CenterInitServerData))
			return;
		
		CenterInitServerData mData=(CenterInitServerData)data;
		
		this.info=mData.info;
		this.areaDic=mData.areaDic;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof CenterInitServerData))
			return;
		
		CenterInitServerData mData=(CenterInitServerData)data;
		
		if(mData.info!=null)
		{
			this.info=(ServerInfoData)mData.info.clone();
		}
		else
		{
			this.info=null;
			nullObjError("info");
		}
		
		if(mData.areaDic!=null)
		{
			if(this.areaDic!=null)
			{
				this.areaDic.clear();
				this.areaDic.ensureCapacity(mData.areaDic.size());
			}
			else
			{
				this.areaDic=new IntIntMap(mData.areaDic.size());
			}
			
			IntIntMap areaDicT=this.areaDic;
			if(!mData.areaDic.isEmpty())
			{
				int areaDicKFreeValue=mData.areaDic.getFreeValue();
				int[] areaDicKTable=mData.areaDic.getTable();
				for(int areaDicKI=areaDicKTable.length-2;areaDicKI>=0;areaDicKI-=2)
				{
					if(areaDicKTable[areaDicKI]!=areaDicKFreeValue)
					{
						int areaDicK=areaDicKTable[areaDicKI];
						int areaDicV=areaDicKTable[areaDicKI+1];
						int areaDicW;
						int areaDicU;
						areaDicW=areaDicK;
						
						areaDicU=areaDicV;
						
						areaDicT.put(areaDicW,areaDicU);
					}
				}
			}
		}
		else
		{
			this.areaDic=null;
			nullObjError("areaDic");
		}
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		CenterInitServerData mData=(CenterInitServerData)data;
		if(mData.info!=null)
		{
			if(this.info==null)
				return false;
			if(!this.info.dataEquals(mData.info))
				return false;
		}
		else
		{
			if(this.info!=null)
				return false;
		}
		
		if(mData.areaDic!=null)
		{
			if(this.areaDic==null)
				return false;
			if(this.areaDic.size()!=mData.areaDic.size())
				return false;
			IntIntMap areaDicR=mData.areaDic;
			if(!this.areaDic.isEmpty())
			{
				int areaDicKFreeValue=this.areaDic.getFreeValue();
				int[] areaDicKTable=this.areaDic.getTable();
				for(int areaDicKI=areaDicKTable.length-2;areaDicKI>=0;areaDicKI-=2)
				{
					if(areaDicKTable[areaDicKI]!=areaDicKFreeValue)
					{
						int areaDicK=areaDicKTable[areaDicKI];
						int areaDicV=areaDicKTable[areaDicKI+1];
						int areaDicU=areaDicR.get(areaDicK);
						if(areaDicV!=areaDicU)
							return false;
						
					}
				}
			}
		}
		else
		{
			if(this.areaDic!=null)
				return false;
		}
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("info");
		writer.sb.append(':');
		if(this.info!=null)
		{
			this.info.writeDataString(writer);
		}
		else
		{
			writer.sb.append("ServerInfoData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("areaDic");
		writer.sb.append(':');
		writer.sb.append("Map<int,int>");
		if(this.areaDic!=null)
		{
			writer.sb.append('(');
			writer.sb.append(this.areaDic.size());
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.areaDic.isEmpty())
			{
				int areaDicKFreeValue=this.areaDic.getFreeValue();
				int[] areaDicKTable=this.areaDic.getTable();
				for(int areaDicKI=areaDicKTable.length-2;areaDicKI>=0;areaDicKI-=2)
				{
					if(areaDicKTable[areaDicKI]!=areaDicKFreeValue)
					{
						int areaDicK=areaDicKTable[areaDicKI];
						int areaDicV=areaDicKTable[areaDicKI+1];
						writer.writeTabs();
						writer.sb.append(areaDicK);
						
						writer.sb.append(':');
						writer.sb.append(areaDicV);
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		this.info=new ServerInfoData();
		this.info.initDefault();
		this.areaDic=new IntIntMap();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.info=null;
		this.areaDic=null;
	}
	
}
