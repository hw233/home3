package com.home.commonBase.data.role;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.constlist.generate.RoleShowDataPartType;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.ctrl.Ctrl;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 玩家展示数据(generated by shine) */
public class RoleShowData extends BaseData
{
	/** 角色ID */
	public long playerID;
	
	/** 数据类型ID */
	public static final int dataID=BaseDataType.RoleShow;
	
	/** 创建区服 */
	public int createAreaID;
	
	/** 名字 */
	public String name="";
	
	/** 性别 */
	public int sex;
	
	/** 职业 */
	public int vocation;
	
	/** 战斗力 */
	public long fightForce;
	
	/** 工会名 */
	public String unionName="";
	
	/** 工会id */
	public long unionID;
	
	/** 玩家等级(不是角色等级) */
	public int level;
	
	public RoleShowData()
	{
		_dataID=BaseDataType.RoleShow;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.playerID=stream.readLong();
		
		this.createAreaID=stream.readInt();
		
		this.name=stream.readUTF();
		
		this.sex=stream.readInt();
		
		this.vocation=stream.readInt();
		
		this.level=stream.readInt();
		
		this.fightForce=stream.readLong();
		
		this.unionID=stream.readLong();
		
		this.unionName=stream.readUTF();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeLong(this.playerID);
		
		stream.writeInt(this.createAreaID);
		
		stream.writeUTF(this.name);
		
		stream.writeInt(this.sex);
		
		stream.writeInt(this.vocation);
		
		stream.writeInt(this.level);
		
		stream.writeLong(this.fightForce);
		
		stream.writeLong(this.unionID);
		
		stream.writeUTF(this.unionName);
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.playerID=stream.readLong();
		
		this.createAreaID=stream.readInt();
		
		this.name=stream.readUTF();
		
		this.sex=stream.readInt();
		
		this.vocation=stream.readInt();
		
		this.level=stream.readInt();
		
		this.fightForce=stream.readLong();
		
		this.unionID=stream.readLong();
		
		this.unionName=stream.readUTF();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeLong(this.playerID);
		
		stream.writeInt(this.createAreaID);
		
		stream.writeUTF(this.name);
		
		stream.writeInt(this.sex);
		
		stream.writeInt(this.vocation);
		
		stream.writeInt(this.level);
		
		stream.writeLong(this.fightForce);
		
		stream.writeLong(this.unionID);
		
		stream.writeUTF(this.unionName);
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof RoleShowData))
			return;
		
		RoleShowData mData=(RoleShowData)data;
		
		this.playerID=mData.playerID;
		this.createAreaID=mData.createAreaID;
		this.name=mData.name;
		this.sex=mData.sex;
		this.vocation=mData.vocation;
		this.level=mData.level;
		this.fightForce=mData.fightForce;
		this.unionID=mData.unionID;
		this.unionName=mData.unionName;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof RoleShowData))
			return;
		
		RoleShowData mData=(RoleShowData)data;
		
		this.playerID=mData.playerID;
		
		this.createAreaID=mData.createAreaID;
		
		this.name=mData.name;
		
		this.sex=mData.sex;
		
		this.vocation=mData.vocation;
		
		this.level=mData.level;
		
		this.fightForce=mData.fightForce;
		
		this.unionID=mData.unionID;
		
		this.unionName=mData.unionName;
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		RoleShowData mData=(RoleShowData)data;
		if(this.playerID!=mData.playerID)
			return false;
		
		if(this.createAreaID!=mData.createAreaID)
			return false;
		
		if(!this.name.equals(mData.name))
			return false;
		
		if(this.sex!=mData.sex)
			return false;
		
		if(this.vocation!=mData.vocation)
			return false;
		
		if(this.level!=mData.level)
			return false;
		
		if(this.fightForce!=mData.fightForce)
			return false;
		
		if(this.unionID!=mData.unionID)
			return false;
		
		if(!this.unionName.equals(mData.unionName))
			return false;
		
		return true;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "RoleShowData";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("createAreaID");
		writer.sb.append(':');
		writer.sb.append(this.createAreaID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("name");
		writer.sb.append(':');
		writer.sb.append(this.name);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("sex");
		writer.sb.append(':');
		writer.sb.append(this.sex);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("vocation");
		writer.sb.append(':');
		writer.sb.append(this.vocation);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("level");
		writer.sb.append(':');
		writer.sb.append(this.level);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("fightForce");
		writer.sb.append(':');
		writer.sb.append(this.fightForce);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("unionID");
		writer.sb.append(':');
		writer.sb.append(this.unionID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("unionName");
		writer.sb.append(':');
		writer.sb.append(this.unionName);
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		
	}
	
	/** 改变(成功接收数据返回true) */
	public void onChange(RoleShowChangeData data)
	{
		switch(data.type)
		{
			case RoleShowDataPartType.Name:
			{
				this.name=data.arg1;
				return;
			}
			case RoleShowDataPartType.Sex:
			{
				this.sex=data.arg0;
				return;
			}
			case RoleShowDataPartType.Vocation:
			{
				this.vocation=data.arg0;
				return;
			}
			case RoleShowDataPartType.Level:
			{
				this.level=data.arg0;
				return;
			}
			case RoleShowDataPartType.FightForce:
			{
				this.fightForce=data.arg2;
				return;
			}
			case RoleShowDataPartType.IsOnline:
			case RoleShowDataPartType.LastOnlineTime:
			{
				return;
			}
			case RoleShowDataPartType.Union:
			{
				this.unionID=data.arg2;
				this.unionName=data.arg1;
				return;
			}
			default:
			{
				Ctrl.throwError("未处理的ShowDataPartType类型:"+data.type);
			}
				break;
		}
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.playerID=0L;
		this.createAreaID=0;
		this.name="";
		this.sex=0;
		this.vocation=0;
		this.level=0;
		this.fightForce=0L;
		this.unionID=0L;
		this.unionName="";
	}
	
}
