package com.home.commonBase.data.social.roleGroup;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.data.scene.scene.CreateSceneData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 玩家群创建场景数据(generated by shine) */
public class RoleGroupCreateSceneData extends CreateSceneData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.RoleGroupCreateScene;
	
	/** 功能id */
	public int funcID;
	
	/** 玩家群名 */
	public String name="";
	
	/** 等级 */
	public int level;
	
	/** 配置id */
	public int configID;
	
	/** 玩家群id */
	public long groupID;
	
	public RoleGroupCreateSceneData()
	{
		_dataID=BaseDataType.RoleGroupCreateScene;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "RoleGroupCreateSceneData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.funcID=stream.readInt();
		
		this.groupID=stream.readLong();
		
		this.configID=stream.readInt();
		
		this.level=stream.readInt();
		
		this.name=stream.readUTF();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.funcID);
		
		stream.writeLong(this.groupID);
		
		stream.writeInt(this.configID);
		
		stream.writeInt(this.level);
		
		stream.writeUTF(this.name);
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.funcID=stream.readInt();
		
		this.groupID=stream.readLong();
		
		this.configID=stream.readInt();
		
		this.level=stream.readInt();
		
		this.name=stream.readUTF();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.funcID);
		
		stream.writeLong(this.groupID);
		
		stream.writeInt(this.configID);
		
		stream.writeInt(this.level);
		
		stream.writeUTF(this.name);
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		super.toShadowCopy(data);
		
		if(!(data instanceof RoleGroupCreateSceneData))
			return;
		
		RoleGroupCreateSceneData mData=(RoleGroupCreateSceneData)data;
		
		this.funcID=mData.funcID;
		this.groupID=mData.groupID;
		this.configID=mData.configID;
		this.level=mData.level;
		this.name=mData.name;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		super.toCopy(data);
		
		if(!(data instanceof RoleGroupCreateSceneData))
			return;
		
		RoleGroupCreateSceneData mData=(RoleGroupCreateSceneData)data;
		
		this.funcID=mData.funcID;
		
		this.groupID=mData.groupID;
		
		this.configID=mData.configID;
		
		this.level=mData.level;
		
		this.name=mData.name;
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		if(!super.toDataEquals(data))
			return false;
		
		RoleGroupCreateSceneData mData=(RoleGroupCreateSceneData)data;
		if(this.funcID!=mData.funcID)
			return false;
		
		if(this.groupID!=mData.groupID)
			return false;
		
		if(this.configID!=mData.configID)
			return false;
		
		if(this.level!=mData.level)
			return false;
		
		if(!this.name.equals(mData.name))
			return false;
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("funcID");
		writer.sb.append(':');
		writer.sb.append(this.funcID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("groupID");
		writer.sb.append(':');
		writer.sb.append(this.groupID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("configID");
		writer.sb.append(':');
		writer.sb.append(this.configID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("level");
		writer.sb.append(':');
		writer.sb.append(this.level);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("name");
		writer.sb.append(':');
		writer.sb.append(this.name);
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		super.initDefault();
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.funcID=0;
		this.groupID=0L;
		this.configID=0;
		this.level=0;
		this.name="";
	}
	
}
