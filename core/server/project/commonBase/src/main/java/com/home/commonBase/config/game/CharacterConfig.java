package com.home.commonBase.config.game;
import com.home.commonBase.config.base.BaseConfig;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.ctrl.Ctrl;
import com.home.shine.data.DIntData;
import com.home.shine.support.collection.IntObjectMap;
import com.home.shine.support.collection.SMap;

/** 角色表(generated by shine) */
public class CharacterConfig extends BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<CharacterConfig> _dic;
	
	/** 战斗单位ID */
	public int fightUnitID;
	
	/** 性别 */
	public int sex;
	
	/** 职业 */
	public int vocation;
	
	/** id */
	public int id;
	
	/** 职业性别字典 */
	private static IntObjectMap<CharacterConfig> _vsDic;
	
	/** 获取 */
	public static CharacterConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/** 设置字典 */
	public static void setDic(IntObjectMap<CharacterConfig> dic)
	{
		_dic=dic;
	}
	
	/** 获取全部 */
	public static IntObjectMap<CharacterConfig> getDic()
	{
		return _dic;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.fightUnitID=stream.readInt();
		
		this.vocation=stream.readInt();
		
		this.sex=stream.readInt();
		
	}
	
	/** 读完所有表后处理 */
	public static void afterReadConfigAll()
	{
		_vsDic=new IntObjectMap<>();
		
		if(_dic!=null)
		{
			CharacterConfig[] values;
			CharacterConfig v;
			
			for(int i=(values=_dic.getValues()).length-1;i>=0;--i)
			{
				if((v=values[i])!=null)
				{
					_vsDic.put(v.vocation<<4 | v.sex,v);
				}
			}
		}
	}
	
	/** 通过职业和性别获取职业配置 */
	public static CharacterConfig getCharacterConfigByVocationAndSex(int vocation,int sex)
	{
		return _vsDic.get(vocation<<4 | sex);
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.fightUnitID);
		
		stream.writeInt(this.vocation);
		
		stream.writeInt(this.sex);
		
	}
	
}
