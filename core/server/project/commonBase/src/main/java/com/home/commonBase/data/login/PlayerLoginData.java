package com.home.commonBase.data.login;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 角色登录数据(generated by shine) */
public class PlayerLoginData extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.PlayerLogin;
	
	/** 角色ID */
	public long playerID;
	
	/** 名字 */
	public String name="";
	
	/** 性别 */
	public int sex;
	
	/** 当前是否还在线 */
	public boolean isOnline;
	
	/** 职业 */
	public int vocation;
	
	public PlayerLoginData()
	{
		_dataID=BaseDataType.PlayerLogin;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.playerID=stream.readLong();
		
		this.name=stream.readUTF();
		
		this.sex=stream.readInt();
		
		this.vocation=stream.readInt();
		
		this.isOnline=stream.readBoolean();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeLong(this.playerID);
		
		stream.writeUTF(this.name);
		
		stream.writeInt(this.sex);
		
		stream.writeInt(this.vocation);
		
		stream.writeBoolean(this.isOnline);
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.playerID=stream.readLong();
		
		this.name=stream.readUTF();
		
		this.sex=stream.readInt();
		
		this.vocation=stream.readInt();
		
		this.isOnline=stream.readBoolean();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeLong(this.playerID);
		
		stream.writeUTF(this.name);
		
		stream.writeInt(this.sex);
		
		stream.writeInt(this.vocation);
		
		stream.writeBoolean(this.isOnline);
		
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof PlayerLoginData))
			return;
		
		PlayerLoginData mData=(PlayerLoginData)data;
		
		this.playerID=mData.playerID;
		
		this.name=mData.name;
		
		this.sex=mData.sex;
		
		this.vocation=mData.vocation;
		
		this.isOnline=mData.isOnline;
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof PlayerLoginData))
			return;
		
		PlayerLoginData mData=(PlayerLoginData)data;
		
		this.playerID=mData.playerID;
		this.name=mData.name;
		this.sex=mData.sex;
		this.vocation=mData.vocation;
		this.isOnline=mData.isOnline;
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		PlayerLoginData mData=(PlayerLoginData)data;
		if(this.playerID!=mData.playerID)
			return false;
		
		if(!this.name.equals(mData.name))
			return false;
		
		if(this.sex!=mData.sex)
			return false;
		
		if(this.vocation!=mData.vocation)
			return false;
		
		if(this.isOnline!=mData.isOnline)
			return false;
		
		return true;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "PlayerLoginData";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("name");
		writer.sb.append(':');
		writer.sb.append(this.name);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("sex");
		writer.sb.append(':');
		writer.sb.append(this.sex);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("vocation");
		writer.sb.append(':');
		writer.sb.append(this.vocation);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("isOnline");
		writer.sb.append(':');
		writer.sb.append(this.isOnline);
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.playerID=0L;
		this.name="";
		this.sex=0;
		this.vocation=0;
		this.isOnline=false;
	}
	
}
