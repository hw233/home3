package com.home.commonBase.table.table;
import com.home.commonBase.constlist.generate.BaseTableType;
import com.home.commonBase.table.result.AuctionItemDBResult;
import com.home.commonBase.table.task.AuctionItemDBTask;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.table.BaseDBResult;
import com.home.shine.table.BaseTable;
import com.home.shine.table.task.BaseDBTask;

/** 拍卖行表(generated by shine) */
public class AuctionItemTable extends BaseTable
{
	/** 增 */
	private static final String _insertStr="insert into `auctionitem` (`instanceID`,`playerID`,`data`,`sellTime`,`itemID`,`itemLevel`,`itemType`,`itemSecondType`,`itemNum`,`price` ) values (?,?,?,?,?,?,?,?,?,?)";
	
	/** 删 */
	private static final String _deleteStr="delete from `auctionitem` where `instanceID` = ?";
	
	/** 改 */
	private static final String _updateStr="update `auctionitem` set `instanceID` = ?,`playerID` = ?,`data` = ?,`sellTime` = ?,`itemID` = ?,`itemLevel` = ?,`itemType` = ?,`itemSecondType` = ?,`itemNum` = ?,`price` = ? where `instanceID` = ?";
	
	/** 查询头 */
	private static final String _selectStr="select `instanceID`,`playerID`,`data`,`sellTime`,`itemID`,`itemLevel`,`itemType`,`itemSecondType`,`itemNum`,`price` from `auctionitem`";
	
	/** 查0 */
	private static final String _selectInStr0="select `instanceID`,`playerID`,`data`,`sellTime`,`itemID`,`itemLevel`,`itemType`,`itemSecondType`,`itemNum`,`price` from `auctionitem` where `instanceID` in (";
	
	/** 查1 */
	private static final String _selectInStr1="select `instanceID`,`playerID`,`data`,`sellTime`,`itemID`,`itemLevel`,`itemType`,`itemSecondType`,`itemNum`,`price` from `auctionitem` where `playerID` in (";
	
	/** 物品第二类型 */
	public int itemSecondType;
	
	/** 物品类型 */
	public int itemType;
	
	/** 物品单价 */
	public int price;
	
	/** 物品数目 */
	public int itemNum;
	
	/** 查2 */
	private static final String _selectInStr2="select `instanceID`,`playerID`,`data`,`sellTime`,`itemID`,`itemLevel`,`itemType`,`itemSecondType`,`itemNum`,`price` from `auctionitem` where `itemID` in (";
	
	/** 查3 */
	private static final String _selectInStr3="select `instanceID`,`playerID`,`data`,`sellTime`,`itemID`,`itemLevel`,`itemType`,`itemSecondType`,`itemNum`,`price` from `auctionitem` where `itemLevel` in (";
	
	public long instanceID;
	
	/** 角色ID */
	public long playerID;
	
	/** 物品数据(其中的数目无用) */
	public byte[] data;
	
	/** 上架时间 */
	public long sellTime;
	
	/** 物品id */
	public int itemID;
	
	/** 物品等级 */
	public int itemLevel;
	
	/** 查4 */
	private static final String _selectInStr4="select `instanceID`,`playerID`,`data`,`sellTime`,`itemID`,`itemLevel`,`itemType`,`itemSecondType`,`itemNum`,`price` from `auctionitem` where `itemType` in (";
	
	/** 查5 */
	private static final String _selectInStr5="select `instanceID`,`playerID`,`data`,`sellTime`,`itemID`,`itemLevel`,`itemType`,`itemSecondType`,`itemNum`,`price` from `auctionitem` where `itemSecondType` in (";
	
	public AuctionItemTable()
	{
		_dataID=BaseTableType.AuctionItem;
	}
	
	@Override
	public String getInsertStr()
	{
		return _insertStr;
	}
	
	@Override
	public String getDeleteStr()
	{
		return _deleteStr;
	}
	
	@Override
	public String getUpdateStr()
	{
		return _updateStr;
	}
	
	@Override
	public String getSelectStr()
	{
		return _selectStr;
	}
	
	@Override
	public String getSelectInStrByIndex(int index)
	{
		switch(index)
		{
			case 0:
				return _selectInStr0;
			case 1:
				return _selectInStr1;
			case 2:
				return _selectInStr2;
			case 3:
				return _selectInStr3;
			case 4:
				return _selectInStr4;
			case 5:
				return _selectInStr5;
		}
		
		return null;
	}
	
	@Override
	protected BaseDBTask createTask()
	{
		AuctionItemDBTask task=new AuctionItemDBTask();
		task.instanceID=this.instanceID;
		task.playerID=this.playerID;
		task.data=this.data;
		task.sellTime=this.sellTime;
		task.itemID=this.itemID;
		task.itemLevel=this.itemLevel;
		task.itemType=this.itemType;
		task.itemSecondType=this.itemSecondType;
		task.itemNum=this.itemNum;
		task.price=this.price;
		return task;
	}
	
	@Override
	public void readByResult(BaseDBResult result)
	{
		AuctionItemDBResult re=(AuctionItemDBResult)result;
		this.instanceID=re.instanceID;
		this.playerID=re.playerID;
		this.data=re.data;
		this.sellTime=re.sellTime;
		this.itemID=re.itemID;
		this.itemLevel=re.itemLevel;
		this.itemType=re.itemType;
		this.itemSecondType=re.itemSecondType;
		this.itemNum=re.itemNum;
		this.price=re.price;
	}
	
	@Override
	protected void toReadValues()
	{
		instanceID=readLong();
		playerID=readLong();
		data=readBytes();
		sellTime=readLong();
		itemID=readInt();
		itemLevel=readInt();
		itemType=readInt();
		itemSecondType=readInt();
		itemNum=readInt();
		price=readInt();
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.instanceID=stream.readLong();
		
		this.playerID=stream.readLong();
		
		int dataLen=stream.readLen();
		this.data=stream.readByteArr(dataLen);
		
		this.sellTime=stream.readLong();
		
		this.itemID=stream.readInt();
		
		this.itemLevel=stream.readInt();
		
		this.itemType=stream.readInt();
		
		this.itemSecondType=stream.readInt();
		
		this.itemNum=stream.readInt();
		
		this.price=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeLong(this.instanceID);
		
		stream.writeLong(this.playerID);
		
		if(this.data!=null)
		{
			stream.writeLen(this.data.length);
			stream.writeByteArr(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
		stream.writeLong(this.sellTime);
		
		stream.writeInt(this.itemID);
		
		stream.writeInt(this.itemLevel);
		
		stream.writeInt(this.itemType);
		
		stream.writeInt(this.itemSecondType);
		
		stream.writeInt(this.itemNum);
		
		stream.writeInt(this.price);
		
		stream.endWriteObj();
	}
	
}
