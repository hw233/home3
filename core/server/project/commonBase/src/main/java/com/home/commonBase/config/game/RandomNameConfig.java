package com.home.commonBase.config.game;
import com.home.commonBase.config.base.BaseConfig;
import com.home.commonBase.config.game.LanguageConfig;
import com.home.commonBase.dataEx.system.RandomNameGroupData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.ctrl.Ctrl;
import com.home.shine.support.collection.IntObjectMap;
import com.home.shine.support.collection.SMap;

/** 随机名字表(generated by shine) */
public class RandomNameConfig extends BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<RandomNameConfig> _dic;
	
	/** 主键 */
	public int id;
	
	/** 首名(姓) */
	public String firstName="";
	
	/** 次名(名) */
	public String secondName="";
	
	/** 组 */
	public int group;
	
	/** 随机组 */
	private static IntObjectMap<RandomNameGroupData> _randomDic;
	
	/** 首名(姓)原值 */
	private String _firstName;
	
	/** 次名(名)原值 */
	private String _secondName;
	
	/** 获取 */
	public static RandomNameConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/** 设置字典 */
	public static void setDic(IntObjectMap<RandomNameConfig> dic)
	{
		_dic=dic;
	}
	
	/** 获取全部 */
	public static IntObjectMap<RandomNameConfig> getDic()
	{
		return _dic;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.firstName=stream.readUTF();
		
		this.secondName=stream.readUTF();
		
		this.group=stream.readInt();
		
	}
	
	/** 读完所有表后处理 */
	public static void afterReadConfigAll()
	{
		_randomDic=new IntObjectMap<>(RandomNameGroupData[]::new);
		
		if(_dic!=null)
		{
			RandomNameConfig[] values;
			RandomNameConfig v;
			
			RandomNameGroupData gData;
			
			for(int i=(values=_dic.getValues()).length-1;i>=0;--i)
			{
				if((v=values[i])!=null)
				{
					gData=_randomDic.computeIfAbsent(v.group,k->new RandomNameGroupData());
					
					if(!v.firstName.isEmpty())
					{
						gData.firstNames.add(v.firstName);
					}
					
					if(!v.secondName.isEmpty())
					{
						gData.secondNames.add(v.secondName);
					}
				}
			}
		}
	}
	
	/** 随机一个名字 */
	public static String randomName(int group)
	{
		RandomNameGroupData gData=_randomDic.get(group);
		
		if(gData==null)
		{
			Ctrl.throwError("没有此随机名字组");
			return "";
		}
		
		return gData.randomName();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeUTF(this.firstName);
		
		stream.writeUTF(this.secondName);
		
		stream.writeInt(this.group);
		
	}
	
	/** 生成刷新配置 */
	@Override
	protected void generateRefresh()
	{
		if(_firstName==null)
			_firstName=firstName;
		firstName=LanguageConfig.getText(_firstName);
		
		if(_secondName==null)
			_secondName=secondName;
		secondName=LanguageConfig.getText(_secondName);
		
	}
	
}
