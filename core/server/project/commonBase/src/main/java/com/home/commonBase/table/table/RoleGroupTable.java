package com.home.commonBase.table.table;
import com.home.commonBase.constlist.generate.BaseTableType;
import com.home.commonBase.table.result.RoleGroupDBResult;
import com.home.commonBase.table.task.RoleGroupDBTask;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.DateData;
import com.home.shine.table.BaseDBResult;
import com.home.shine.table.BaseTable;
import com.home.shine.table.task.BaseDBTask;

/** 玩家群表(generated by shine) */
public class RoleGroupTable extends BaseTable
{
	/** 增 */
	private static final String _insertStr="insert into `rolegroup` (`groupID`,`createAreaID`,`funcID`,`createDate`,`data` ) values (?,?,?,?,?)";
	
	/** 删 */
	private static final String _deleteStr="delete from `rolegroup` where `groupID` = ?";
	
	/** 改 */
	private static final String _updateStr="update `rolegroup` set `groupID` = ?,`createAreaID` = ?,`funcID` = ?,`createDate` = ?,`data` = ? where `groupID` = ?";
	
	/** 查询头 */
	private static final String _selectStr="select `groupID`,`createAreaID`,`funcID`,`createDate`,`data` from `rolegroup`";
	
	/** 查0 */
	private static final String _selectInStr0="select `groupID`,`createAreaID`,`funcID`,`createDate`,`data` from `rolegroup` where `groupID` in (";
	
	/** 群id */
	public long groupID;
	
	/** 原区ID */
	public int createAreaID;
	
	/** 功能id */
	public int funcID;
	
	/** 创建日期 */
	public DateData createDate;
	
	/** 数据 */
	public byte[] data;
	
	public RoleGroupTable()
	{
		_dataID=BaseTableType.RoleGroup;
	}
	
	@Override
	public String getInsertStr()
	{
		return _insertStr;
	}
	
	@Override
	public String getDeleteStr()
	{
		return _deleteStr;
	}
	
	@Override
	public String getUpdateStr()
	{
		return _updateStr;
	}
	
	@Override
	public String getSelectStr()
	{
		return _selectStr;
	}
	
	@Override
	public String getSelectInStrByIndex(int index)
	{
		switch(index)
		{
			case 0:
				return _selectInStr0;
		}
		
		return null;
	}
	
	@Override
	protected BaseDBTask createTask()
	{
		RoleGroupDBTask task=new RoleGroupDBTask();
		task.groupID=this.groupID;
		task.createAreaID=this.createAreaID;
		task.funcID=this.funcID;
		task.createDate=this.createDate;
		task.data=this.data;
		return task;
	}
	
	@Override
	public void readByResult(BaseDBResult result)
	{
		RoleGroupDBResult re=(RoleGroupDBResult)result;
		this.groupID=re.groupID;
		this.createAreaID=re.createAreaID;
		this.funcID=re.funcID;
		this.createDate=re.createDate;
		this.data=re.data;
	}
	
	@Override
	protected void toReadValues()
	{
		groupID=readLong();
		createAreaID=readInt();
		funcID=readInt();
		createDate=readDate();
		data=readBytes();
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.groupID=stream.readLong();
		
		this.createAreaID=stream.readInt();
		
		this.funcID=stream.readInt();
		
		this.createDate=new DateData();
		this.createDate.readBytesFull(stream);
		
		int dataLen=stream.readLen();
		this.data=stream.readByteArr(dataLen);
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeLong(this.groupID);
		
		stream.writeInt(this.createAreaID);
		
		stream.writeInt(this.funcID);
		
		if(this.createDate!=null)
		{
			this.createDate.writeBytesFull(stream);
		}
		else
		{
			nullObjError("createDate");
		}
		
		if(this.data!=null)
		{
			stream.writeLen(this.data.length);
			stream.writeByteArr(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
		stream.endWriteObj();
	}
	
}
