package com.home.commonBase.config.game;
import com.home.commonBase.config.base.BaseConfig;
import com.home.commonBase.constlist.generate.StatusType;
import com.home.commonBase.control.AttributeControl;
import com.home.commonBase.dataEx.role.StatusOneInfo;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.support.collection.SList;

/** 状态类型表(generated by shine) */
public class StatusConfig extends BaseConfig
{
	/** 存储集合 */
	private static StatusConfig[] _dic;
	
	/** 状态id */
	public int id;
	
	/** 其他单位是否推送 */
	public boolean needSendOther;
	
	/** 自己是否推送 */
	public boolean needSendSelf;
	
	/** 获取 */
	public static StatusConfig get(int id)
	{
		return id>=0 && id<_dic.length ? _dic[id] : null;
	}
	
	/** 设置字典 */
	public static void setDic(StatusConfig[] dic)
	{
		_dic=dic;
	}
	
	/** 获取全部 */
	public static StatusConfig[] getDic()
	{
		return _dic;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.needSendSelf=stream.readBoolean();
		
		this.needSendOther=stream.readBoolean();
		
	}
	
	/** 读完所有表后处理 */
	public static void afterReadConfigAll()
	{
		SList<StatusOneInfo> list=new SList<>(StatusOneInfo[]::new);
		
		for(StatusConfig config : _dic)
		{
			if(config!=null)
				list.add(config.createInfo());
		}
		
		AttributeControl.status.init(list,StatusType.size);
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeBoolean(this.needSendSelf);
		
		stream.writeBoolean(this.needSendOther);
		
	}
	
	public StatusOneInfo createInfo()
	{
		StatusOneInfo re=new StatusOneInfo();
		re.id=id;
		re.needSendSelf=needSendSelf;
		re.needSendOther=needSendOther;
		return re;
	}
	
}
