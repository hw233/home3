package com.home.commonBase.table.table;
import com.home.commonBase.constlist.generate.BaseTableType;
import com.home.commonBase.table.result.WhiteListDBResult;
import com.home.commonBase.table.task.WhiteListDBTask;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.table.BaseDBResult;
import com.home.shine.table.BaseTable;
import com.home.shine.table.task.BaseDBTask;

/** 白名单表(generated by shine) */
public class WhiteListTable extends BaseTable
{
	/** 增 */
	private static final String _insertStr="insert into `whitelist` (`type`,`value` ) values (?,?)";
	
	/** 删 */
	private static final String _deleteStr="delete from `whitelist` where `id` = ?";
	
	/** 改 */
	private static final String _updateStr="update `whitelist` set `id` = ?,`type` = ?,`value` = ? where `id` = ?";
	
	/** 查询头 */
	private static final String _selectStr="select `id`,`type`,`value` from `whitelist`";
	
	/** 查0 */
	private static final String _selectInStr0="select `id`,`type`,`value` from `whitelist` where `id` in (";
	
	/** 用户ID */
	public int id;
	
	/** 类型 */
	public int type;
	
	/** 值 */
	public String value="";
	
	public WhiteListTable()
	{
		_dataID=BaseTableType.WhiteList;
	}
	
	@Override
	public String getInsertStr()
	{
		return _insertStr;
	}
	
	@Override
	public String getDeleteStr()
	{
		return _deleteStr;
	}
	
	@Override
	public String getUpdateStr()
	{
		return _updateStr;
	}
	
	@Override
	public String getSelectStr()
	{
		return _selectStr;
	}
	
	@Override
	public String getSelectInStrByIndex(int index)
	{
		switch(index)
		{
			case 0:
				return _selectInStr0;
		}
		
		return null;
	}
	
	@Override
	protected BaseDBTask createTask()
	{
		WhiteListDBTask task=new WhiteListDBTask();
		task.id=this.id;
		task.type=this.type;
		task.value=this.value;
		return task;
	}
	
	@Override
	public void readByResult(BaseDBResult result)
	{
		WhiteListDBResult re=(WhiteListDBResult)result;
		this.id=re.id;
		this.type=re.type;
		this.value=re.value;
	}
	
	@Override
	protected void toReadValues()
	{
		id=readInt();
		type=readInt();
		value=readString();
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.id=stream.readInt();
		
		this.type=stream.readInt();
		
		this.value=stream.readUTF();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.type);
		
		stream.writeUTF(this.value);
		
		stream.endWriteObj();
	}
	
}
