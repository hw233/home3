package com.home.commonBase.config.game;
import com.home.commonBase.config.base.BaseConfig;
import com.home.commonBase.constlist.generate.AttributeType;
import com.home.commonBase.constlist.generate.RoleAttributeType;
import com.home.commonBase.control.AttributeControl;
import com.home.commonBase.dataEx.role.AttributeOneInfo;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.support.collection.SList;

/** 角色属性类型表(generated by shine) */
public class RoleAttributeConfig extends BaseConfig
{
	/** 存储集合 */
	private static RoleAttributeConfig[] _dic;
	
	/** 属性id */
	public int id;
	
	/** 公式类型 */
	public int[] formula;
	
	/** 是否为千分比属性 */
	public boolean isPercent;
	
	/** 自增属性对应ID */
	public int increaseID;
	
	/** 当前属性的上限值ID */
	public int currentMaxID;
	
	/** 当前属性默认空满 */
	public boolean isCurrentDefaultFull;
	
	/** 推送角色自己方式 */
	public int sendSelfType;
	
	/** 其他单位是否推送 */
	public boolean needSendOther;
	
	/** 逻辑层是否派发(服务器) */
	public boolean needDispatchChange;
	
	/** 获取 */
	public static RoleAttributeConfig get(int id)
	{
		return id>=0 && id<_dic.length ? _dic[id] : null;
	}
	
	/** 设置字典 */
	public static void setDic(RoleAttributeConfig[] dic)
	{
		_dic=dic;
	}
	
	/** 获取全部 */
	public static RoleAttributeConfig[] getDic()
	{
		return _dic;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		int formulaLen=stream.readLen();
		if(this.formula==null || this.formula.length!=formulaLen)
		{
			this.formula=new int[formulaLen];
		}
		int[] formulaT=this.formula;
		for(int formulaI=0;formulaI<formulaLen;++formulaI)
		{
			int formulaV;
			formulaV=stream.readInt();
			
			formulaT[formulaI]=formulaV;
		}
		
		this.isPercent=stream.readBoolean();
		
		this.increaseID=stream.readInt();
		
		this.currentMaxID=stream.readInt();
		
		this.isCurrentDefaultFull=stream.readBoolean();
		
		this.sendSelfType=stream.readInt();
		
		this.needSendOther=stream.readBoolean();
		
		this.needDispatchChange=stream.readBoolean();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		if(this.formula!=null)
		{
			int[] formulaT=this.formula;
			stream.writeLen(formulaT.length);
			for(int formulaVI=0,formulaVLen=formulaT.length;formulaVI<formulaVLen;++formulaVI)
			{
				int formulaV=formulaT[formulaVI];
				stream.writeInt(formulaV);
				
			}
		}
		else
		{
			nullObjError("formula");
		}
		
		stream.writeBoolean(this.isPercent);
		
		stream.writeInt(this.increaseID);
		
		stream.writeInt(this.currentMaxID);
		
		stream.writeBoolean(this.isCurrentDefaultFull);
		
		stream.writeInt(this.sendSelfType);
		
		stream.writeBoolean(this.needSendOther);
		
		stream.writeBoolean(this.needDispatchChange);
		
	}
	
	/** 读完所有表后处理 */
	public static void afterReadConfigAll()
	{
		SList<AttributeOneInfo> list=new SList<>(AttributeOneInfo[]::new);
		
		for(RoleAttributeConfig config : _dic)
		{
			if(config!=null)
				list.add(config.createInfo());
		}
		
		AttributeControl.roleAttribute.init(list,RoleAttributeType.size);
	}
	
	public AttributeOneInfo createInfo()
	{
		AttributeOneInfo re=new AttributeOneInfo();
		re.id=id;
		re.formula=formula;
		re.isPercent=isPercent;
		re.increaseID=increaseID;
		re.currentMaxID=currentMaxID;
		re.isCurrentDefaultFull=isCurrentDefaultFull;
		re.needDispatchChange=needDispatchChange;
		re.sendSelfType=sendSelfType;
		re.needSendOther=needSendOther;
		return re;
	}
	
}
