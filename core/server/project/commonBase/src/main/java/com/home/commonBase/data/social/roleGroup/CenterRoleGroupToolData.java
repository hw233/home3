package com.home.commonBase.data.social.roleGroup;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.data.func.FuncToolData;
import com.home.commonBase.data.social.roleGroup.RoleGroupSimpleData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.LongObjectMap;
import com.home.shine.support.pool.DataPool;

/** 中心服玩家群工具数据(generated by shine) */
public class CenterRoleGroupToolData extends FuncToolData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.CenterRoleGroupTool;
	
	/** 玩家群简版数据组(key：groupId>) */
	public LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDic;
	
	public CenterRoleGroupToolData()
	{
		_dataID=BaseDataType.CenterRoleGroupTool;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "CenterRoleGroupToolData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		int roleGroupSimpleDataDicLen=stream.readLen();
		if(this.roleGroupSimpleDataDic!=null)
		{
			this.roleGroupSimpleDataDic.clear();
			this.roleGroupSimpleDataDic.ensureCapacity(roleGroupSimpleDataDicLen);
		}
		else
		{
			this.roleGroupSimpleDataDic=new LongObjectMap<RoleGroupSimpleData>(RoleGroupSimpleData[]::new,roleGroupSimpleDataDicLen);
		}
		
		LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDicT=this.roleGroupSimpleDataDic;
		for(int roleGroupSimpleDataDicI=roleGroupSimpleDataDicLen-1;roleGroupSimpleDataDicI>=0;--roleGroupSimpleDataDicI)
		{
			long roleGroupSimpleDataDicK;
			RoleGroupSimpleData roleGroupSimpleDataDicV;
			roleGroupSimpleDataDicK=stream.readLong();
			
			BaseData roleGroupSimpleDataDicVT=stream.readDataFullNotNull();
			if(roleGroupSimpleDataDicVT!=null)
			{
				if(roleGroupSimpleDataDicVT instanceof RoleGroupSimpleData)
				{
					roleGroupSimpleDataDicV=(RoleGroupSimpleData)roleGroupSimpleDataDicVT;
				}
				else
				{
					roleGroupSimpleDataDicV=new RoleGroupSimpleData();
					if(!(roleGroupSimpleDataDicVT.getClass().isAssignableFrom(RoleGroupSimpleData.class)))
					{
						stream.throwTypeReadError(RoleGroupSimpleData.class,roleGroupSimpleDataDicVT.getClass());
					}
					roleGroupSimpleDataDicV.shadowCopy(roleGroupSimpleDataDicVT);
				}
			}
			else
			{
				roleGroupSimpleDataDicV=null;
			}
			
			roleGroupSimpleDataDicT.put(roleGroupSimpleDataDicK,roleGroupSimpleDataDicV);
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.roleGroupSimpleDataDic!=null)
		{
			stream.writeLen(this.roleGroupSimpleDataDic.size());
			if(!this.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=this.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=this.roleGroupSimpleDataDic.getKeys();
				Object[] roleGroupSimpleDataDicVValues=this.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=(RoleGroupSimpleData)roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						stream.writeLong(roleGroupSimpleDataDicK);
						
						if(roleGroupSimpleDataDicV!=null)
						{
							stream.writeDataFullNotNull(roleGroupSimpleDataDicV);
						}
						else
						{
							nullObjError("roleGroupSimpleDataDicV");
						}
						
					}
				}
			}
		}
		else
		{
			nullObjError("roleGroupSimpleDataDic");
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		int roleGroupSimpleDataDicLen=stream.readLen();
		if(this.roleGroupSimpleDataDic!=null)
		{
			this.roleGroupSimpleDataDic.clear();
			this.roleGroupSimpleDataDic.ensureCapacity(roleGroupSimpleDataDicLen);
		}
		else
		{
			this.roleGroupSimpleDataDic=new LongObjectMap<RoleGroupSimpleData>(RoleGroupSimpleData[]::new,roleGroupSimpleDataDicLen);
		}
		
		LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDicT=this.roleGroupSimpleDataDic;
		for(int roleGroupSimpleDataDicI=roleGroupSimpleDataDicLen-1;roleGroupSimpleDataDicI>=0;--roleGroupSimpleDataDicI)
		{
			long roleGroupSimpleDataDicK;
			RoleGroupSimpleData roleGroupSimpleDataDicV;
			roleGroupSimpleDataDicK=stream.readLong();
			
			roleGroupSimpleDataDicV=(RoleGroupSimpleData)stream.readDataSimpleNotNull();
			
			roleGroupSimpleDataDicT.put(roleGroupSimpleDataDicK,roleGroupSimpleDataDicV);
		}
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		if(this.roleGroupSimpleDataDic!=null)
		{
			stream.writeLen(this.roleGroupSimpleDataDic.size());
			if(!this.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=this.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=this.roleGroupSimpleDataDic.getKeys();
				Object[] roleGroupSimpleDataDicVValues=this.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=(RoleGroupSimpleData)roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						stream.writeLong(roleGroupSimpleDataDicK);
						
						if(roleGroupSimpleDataDicV!=null)
						{
							stream.writeDataSimpleNotNull(roleGroupSimpleDataDicV);
						}
						else
						{
							nullObjError("roleGroupSimpleDataDicV");
						}
						
					}
				}
			}
		}
		else
		{
			nullObjError("roleGroupSimpleDataDic");
		}
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		super.toShadowCopy(data);
		
		if(!(data instanceof CenterRoleGroupToolData))
			return;
		
		CenterRoleGroupToolData mData=(CenterRoleGroupToolData)data;
		
		this.roleGroupSimpleDataDic=mData.roleGroupSimpleDataDic;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		super.toCopy(data);
		
		if(!(data instanceof CenterRoleGroupToolData))
			return;
		
		CenterRoleGroupToolData mData=(CenterRoleGroupToolData)data;
		
		if(mData.roleGroupSimpleDataDic!=null)
		{
			if(this.roleGroupSimpleDataDic!=null)
			{
				this.roleGroupSimpleDataDic.clear();
				this.roleGroupSimpleDataDic.ensureCapacity(mData.roleGroupSimpleDataDic.size());
			}
			else
			{
				this.roleGroupSimpleDataDic=new LongObjectMap<RoleGroupSimpleData>(RoleGroupSimpleData[]::new,mData.roleGroupSimpleDataDic.size());
			}
			
			LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDicT=this.roleGroupSimpleDataDic;
			if(!mData.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=mData.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=mData.roleGroupSimpleDataDic.getKeys();
				Object[] roleGroupSimpleDataDicVValues=mData.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=(RoleGroupSimpleData)roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						long roleGroupSimpleDataDicW;
						RoleGroupSimpleData roleGroupSimpleDataDicU;
						roleGroupSimpleDataDicW=roleGroupSimpleDataDicK;
						
						if(roleGroupSimpleDataDicV!=null)
						{
							roleGroupSimpleDataDicU=(RoleGroupSimpleData)roleGroupSimpleDataDicV.clone();
						}
						else
						{
							roleGroupSimpleDataDicU=null;
							nullObjError("roleGroupSimpleDataDicU");
						}
						
						roleGroupSimpleDataDicT.put(roleGroupSimpleDataDicW,roleGroupSimpleDataDicU);
					}
				}
			}
		}
		else
		{
			this.roleGroupSimpleDataDic=null;
			nullObjError("roleGroupSimpleDataDic");
		}
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		if(!super.toDataEquals(data))
			return false;
		
		CenterRoleGroupToolData mData=(CenterRoleGroupToolData)data;
		if(mData.roleGroupSimpleDataDic!=null)
		{
			if(this.roleGroupSimpleDataDic==null)
				return false;
			if(this.roleGroupSimpleDataDic.size()!=mData.roleGroupSimpleDataDic.size())
				return false;
			LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDicR=mData.roleGroupSimpleDataDic;
			if(!this.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=this.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=this.roleGroupSimpleDataDic.getKeys();
				Object[] roleGroupSimpleDataDicVValues=this.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=(RoleGroupSimpleData)roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						RoleGroupSimpleData roleGroupSimpleDataDicU=roleGroupSimpleDataDicR.get(roleGroupSimpleDataDicK);
						if(roleGroupSimpleDataDicU!=null)
						{
							if(roleGroupSimpleDataDicV==null)
								return false;
							if(!roleGroupSimpleDataDicV.dataEquals(roleGroupSimpleDataDicU))
								return false;
						}
						else
						{
							if(roleGroupSimpleDataDicV!=null)
								return false;
						}
						
					}
				}
			}
		}
		else
		{
			if(this.roleGroupSimpleDataDic!=null)
				return false;
		}
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("roleGroupSimpleDataDic");
		writer.sb.append(':');
		writer.sb.append("Map<long,RoleGroupSimpleData>");
		if(this.roleGroupSimpleDataDic!=null)
		{
			writer.sb.append('(');
			writer.sb.append(this.roleGroupSimpleDataDic.size());
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=this.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=this.roleGroupSimpleDataDic.getKeys();
				Object[] roleGroupSimpleDataDicVValues=this.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=(RoleGroupSimpleData)roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						writer.writeTabs();
						writer.sb.append(roleGroupSimpleDataDicK);
						
						writer.sb.append(':');
						if(roleGroupSimpleDataDicV!=null)
						{
							roleGroupSimpleDataDicV.writeDataString(writer);
						}
						else
						{
							writer.sb.append("RoleGroupSimpleData=null");
						}
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		super.initDefault();
		
		this.roleGroupSimpleDataDic=new LongObjectMap<RoleGroupSimpleData>(RoleGroupSimpleData[]::new);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.roleGroupSimpleDataDic=null;
	}
	
}
