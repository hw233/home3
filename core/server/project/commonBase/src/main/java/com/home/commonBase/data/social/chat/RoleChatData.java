package com.home.commonBase.data.social.chat;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.data.role.RoleSimpleShowData;
import com.home.commonBase.data.social.chat.ChatData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 角色聊天数据(generated by shine) */
public class RoleChatData extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.RoleChat;
	
	/** 显示数据 */
	public RoleSimpleShowData showData;
	
	/** 聊天数据 */
	public ChatData chatData;
	
	/** 发送序号 */
	public int sendIndex;
	
	/** 时间 */
	public long time;
	
	public RoleChatData()
	{
		_dataID=BaseDataType.RoleChat;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "RoleChatData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		BaseData showDataT=stream.readDataFullNotNull();
		if(showDataT!=null)
		{
			if(showDataT instanceof RoleSimpleShowData)
			{
				this.showData=(RoleSimpleShowData)showDataT;
			}
			else
			{
				this.showData=new RoleSimpleShowData();
				if(!(showDataT.getClass().isAssignableFrom(RoleSimpleShowData.class)))
				{
					stream.throwTypeReadError(RoleSimpleShowData.class,showDataT.getClass());
				}
				this.showData.shadowCopy(showDataT);
			}
		}
		else
		{
			this.showData=null;
		}
		
		BaseData chatDataT=stream.readDataFullNotNull();
		if(chatDataT!=null)
		{
			if(chatDataT instanceof ChatData)
			{
				this.chatData=(ChatData)chatDataT;
			}
			else
			{
				this.chatData=new ChatData();
				if(!(chatDataT.getClass().isAssignableFrom(ChatData.class)))
				{
					stream.throwTypeReadError(ChatData.class,chatDataT.getClass());
				}
				this.chatData.shadowCopy(chatDataT);
			}
		}
		else
		{
			this.chatData=null;
		}
		
		this.time=stream.readLong();
		
		this.sendIndex=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.showData!=null)
		{
			stream.writeDataFullNotNull(this.showData);
		}
		else
		{
			nullObjError("showData");
		}
		
		if(this.chatData!=null)
		{
			stream.writeDataFullNotNull(this.chatData);
		}
		else
		{
			nullObjError("chatData");
		}
		
		stream.writeLong(this.time);
		
		stream.writeInt(this.sendIndex);
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.showData=(RoleSimpleShowData)stream.readDataSimpleNotNull();
		
		this.chatData=(ChatData)stream.readDataSimpleNotNull();
		
		this.time=stream.readLong();
		
		this.sendIndex=stream.readInt();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.showData!=null)
		{
			stream.writeDataSimpleNotNull(this.showData);
		}
		else
		{
			nullObjError("showData");
		}
		
		if(this.chatData!=null)
		{
			stream.writeDataSimpleNotNull(this.chatData);
		}
		else
		{
			nullObjError("chatData");
		}
		
		stream.writeLong(this.time);
		
		stream.writeInt(this.sendIndex);
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof RoleChatData))
			return;
		
		RoleChatData mData=(RoleChatData)data;
		
		this.showData=mData.showData;
		this.chatData=mData.chatData;
		this.time=mData.time;
		this.sendIndex=mData.sendIndex;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof RoleChatData))
			return;
		
		RoleChatData mData=(RoleChatData)data;
		
		if(mData.showData!=null)
		{
			this.showData=(RoleSimpleShowData)mData.showData.clone();
		}
		else
		{
			this.showData=null;
			nullObjError("showData");
		}
		
		if(mData.chatData!=null)
		{
			this.chatData=(ChatData)mData.chatData.clone();
		}
		else
		{
			this.chatData=null;
			nullObjError("chatData");
		}
		
		this.time=mData.time;
		
		this.sendIndex=mData.sendIndex;
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		RoleChatData mData=(RoleChatData)data;
		if(mData.showData!=null)
		{
			if(this.showData==null)
				return false;
			if(!this.showData.dataEquals(mData.showData))
				return false;
		}
		else
		{
			if(this.showData!=null)
				return false;
		}
		
		if(mData.chatData!=null)
		{
			if(this.chatData==null)
				return false;
			if(!this.chatData.dataEquals(mData.chatData))
				return false;
		}
		else
		{
			if(this.chatData!=null)
				return false;
		}
		
		if(this.time!=mData.time)
			return false;
		
		if(this.sendIndex!=mData.sendIndex)
			return false;
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("showData");
		writer.sb.append(':');
		if(this.showData!=null)
		{
			this.showData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("RoleSimpleShowData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("chatData");
		writer.sb.append(':');
		if(this.chatData!=null)
		{
			this.chatData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("ChatData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("time");
		writer.sb.append(':');
		writer.sb.append(this.time);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("sendIndex");
		writer.sb.append(':');
		writer.sb.append(this.sendIndex);
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		this.showData=new RoleSimpleShowData();
		this.showData.initDefault();
		this.chatData=new ChatData();
		this.chatData.initDefault();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.showData=null;
		this.chatData=null;
		this.time=0L;
		this.sendIndex=0;
	}
	
}
