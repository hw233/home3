package com.home.commonBase.part.gameGlobal.list;
import com.home.commonBase.constlist.generate.GameGlobalListDataType;
import com.home.commonBase.part.gameGlobal.data.GameActivityPartData;
import com.home.commonBase.part.gameGlobal.data.GameFuncPartData;
import com.home.commonBase.part.gameGlobal.data.GameMailPartData;
import com.home.commonBase.part.gameGlobal.data.GameSocialPartData;
import com.home.commonBase.part.gameGlobal.data.GameSystemPartData;
import com.home.commonBase.part.gameGlobal.data.GameTeamPartData;
import com.home.commonBase.part.gameGlobal.data.GameUnionPartData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 游戏服全局数据(generated by shine) */
public class GameGlobalListData extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=GameGlobalListDataType.GameGlobal;
	
	/** 社交数据 */
	public GameSocialPartData social;
	
	/** 系统数据 */
	public GameSystemPartData system;
	
	/** 活动数据 */
	public GameActivityPartData activity;
	
	/** 邮件数据 */
	public GameMailPartData mail;
	
	/** 工会数据 */
	public GameUnionPartData union;
	
	/** 队伍数据 */
	public GameTeamPartData team;
	
	/** 通用功能数据 */
	public GameFuncPartData func;
	
	public GameGlobalListData()
	{
		_dataID=GameGlobalListDataType.GameGlobal;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		BaseData systemT=stream.readDataFullNotNull();
		if(systemT!=null)
		{
			if(systemT instanceof GameSystemPartData)
			{
				this.system=(GameSystemPartData)systemT;
			}
			else
			{
				this.system=new GameSystemPartData();
				if(!(systemT.getClass().isAssignableFrom(GameSystemPartData.class)))
				{
					stream.throwTypeReadError(GameSystemPartData.class,systemT.getClass());
				}
				this.system.shadowCopy(systemT);
			}
		}
		else
		{
			this.system=null;
		}
		
		BaseData socialT=stream.readDataFullNotNull();
		if(socialT!=null)
		{
			if(socialT instanceof GameSocialPartData)
			{
				this.social=(GameSocialPartData)socialT;
			}
			else
			{
				this.social=new GameSocialPartData();
				if(!(socialT.getClass().isAssignableFrom(GameSocialPartData.class)))
				{
					stream.throwTypeReadError(GameSocialPartData.class,socialT.getClass());
				}
				this.social.shadowCopy(socialT);
			}
		}
		else
		{
			this.social=null;
		}
		
		BaseData funcT=stream.readDataFullNotNull();
		if(funcT!=null)
		{
			if(funcT instanceof GameFuncPartData)
			{
				this.func=(GameFuncPartData)funcT;
			}
			else
			{
				this.func=new GameFuncPartData();
				if(!(funcT.getClass().isAssignableFrom(GameFuncPartData.class)))
				{
					stream.throwTypeReadError(GameFuncPartData.class,funcT.getClass());
				}
				this.func.shadowCopy(funcT);
			}
		}
		else
		{
			this.func=null;
		}
		
		BaseData activityT=stream.readDataFullNotNull();
		if(activityT!=null)
		{
			if(activityT instanceof GameActivityPartData)
			{
				this.activity=(GameActivityPartData)activityT;
			}
			else
			{
				this.activity=new GameActivityPartData();
				if(!(activityT.getClass().isAssignableFrom(GameActivityPartData.class)))
				{
					stream.throwTypeReadError(GameActivityPartData.class,activityT.getClass());
				}
				this.activity.shadowCopy(activityT);
			}
		}
		else
		{
			this.activity=null;
		}
		
		BaseData mailT=stream.readDataFullNotNull();
		if(mailT!=null)
		{
			if(mailT instanceof GameMailPartData)
			{
				this.mail=(GameMailPartData)mailT;
			}
			else
			{
				this.mail=new GameMailPartData();
				if(!(mailT.getClass().isAssignableFrom(GameMailPartData.class)))
				{
					stream.throwTypeReadError(GameMailPartData.class,mailT.getClass());
				}
				this.mail.shadowCopy(mailT);
			}
		}
		else
		{
			this.mail=null;
		}
		
		BaseData unionT=stream.readDataFullNotNull();
		if(unionT!=null)
		{
			if(unionT instanceof GameUnionPartData)
			{
				this.union=(GameUnionPartData)unionT;
			}
			else
			{
				this.union=new GameUnionPartData();
				if(!(unionT.getClass().isAssignableFrom(GameUnionPartData.class)))
				{
					stream.throwTypeReadError(GameUnionPartData.class,unionT.getClass());
				}
				this.union.shadowCopy(unionT);
			}
		}
		else
		{
			this.union=null;
		}
		
		BaseData teamT=stream.readDataFullNotNull();
		if(teamT!=null)
		{
			if(teamT instanceof GameTeamPartData)
			{
				this.team=(GameTeamPartData)teamT;
			}
			else
			{
				this.team=new GameTeamPartData();
				if(!(teamT.getClass().isAssignableFrom(GameTeamPartData.class)))
				{
					stream.throwTypeReadError(GameTeamPartData.class,teamT.getClass());
				}
				this.team.shadowCopy(teamT);
			}
		}
		else
		{
			this.team=null;
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.system!=null)
		{
			stream.writeDataFullNotNull(this.system);
		}
		else
		{
			nullObjError("system");
		}
		
		if(this.social!=null)
		{
			stream.writeDataFullNotNull(this.social);
		}
		else
		{
			nullObjError("social");
		}
		
		if(this.func!=null)
		{
			stream.writeDataFullNotNull(this.func);
		}
		else
		{
			nullObjError("func");
		}
		
		if(this.activity!=null)
		{
			stream.writeDataFullNotNull(this.activity);
		}
		else
		{
			nullObjError("activity");
		}
		
		if(this.mail!=null)
		{
			stream.writeDataFullNotNull(this.mail);
		}
		else
		{
			nullObjError("mail");
		}
		
		if(this.union!=null)
		{
			stream.writeDataFullNotNull(this.union);
		}
		else
		{
			nullObjError("union");
		}
		
		if(this.team!=null)
		{
			stream.writeDataFullNotNull(this.team);
		}
		else
		{
			nullObjError("team");
		}
		
		stream.endWriteObj();
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "GameGlobalListData";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.system=(GameSystemPartData)stream.readDataSimpleNotNull();
		
		this.social=(GameSocialPartData)stream.readDataSimpleNotNull();
		
		this.func=(GameFuncPartData)stream.readDataSimpleNotNull();
		
		this.activity=(GameActivityPartData)stream.readDataSimpleNotNull();
		
		this.mail=(GameMailPartData)stream.readDataSimpleNotNull();
		
		this.union=(GameUnionPartData)stream.readDataSimpleNotNull();
		
		this.team=(GameTeamPartData)stream.readDataSimpleNotNull();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.system!=null)
		{
			stream.writeDataSimpleNotNull(this.system);
		}
		else
		{
			nullObjError("system");
		}
		
		if(this.social!=null)
		{
			stream.writeDataSimpleNotNull(this.social);
		}
		else
		{
			nullObjError("social");
		}
		
		if(this.func!=null)
		{
			stream.writeDataSimpleNotNull(this.func);
		}
		else
		{
			nullObjError("func");
		}
		
		if(this.activity!=null)
		{
			stream.writeDataSimpleNotNull(this.activity);
		}
		else
		{
			nullObjError("activity");
		}
		
		if(this.mail!=null)
		{
			stream.writeDataSimpleNotNull(this.mail);
		}
		else
		{
			nullObjError("mail");
		}
		
		if(this.union!=null)
		{
			stream.writeDataSimpleNotNull(this.union);
		}
		else
		{
			nullObjError("union");
		}
		
		if(this.team!=null)
		{
			stream.writeDataSimpleNotNull(this.team);
		}
		else
		{
			nullObjError("team");
		}
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof GameGlobalListData))
			return;
		
		GameGlobalListData mData=(GameGlobalListData)data;
		
		this.system=mData.system;
		this.social=mData.social;
		this.func=mData.func;
		this.activity=mData.activity;
		this.mail=mData.mail;
		this.union=mData.union;
		this.team=mData.team;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof GameGlobalListData))
			return;
		
		GameGlobalListData mData=(GameGlobalListData)data;
		
		if(mData.system!=null)
		{
			this.system=(GameSystemPartData)mData.system.clone();
		}
		else
		{
			this.system=null;
			nullObjError("system");
		}
		
		if(mData.social!=null)
		{
			this.social=(GameSocialPartData)mData.social.clone();
		}
		else
		{
			this.social=null;
			nullObjError("social");
		}
		
		if(mData.func!=null)
		{
			this.func=(GameFuncPartData)mData.func.clone();
		}
		else
		{
			this.func=null;
			nullObjError("func");
		}
		
		if(mData.activity!=null)
		{
			this.activity=(GameActivityPartData)mData.activity.clone();
		}
		else
		{
			this.activity=null;
			nullObjError("activity");
		}
		
		if(mData.mail!=null)
		{
			this.mail=(GameMailPartData)mData.mail.clone();
		}
		else
		{
			this.mail=null;
			nullObjError("mail");
		}
		
		if(mData.union!=null)
		{
			this.union=(GameUnionPartData)mData.union.clone();
		}
		else
		{
			this.union=null;
			nullObjError("union");
		}
		
		if(mData.team!=null)
		{
			this.team=(GameTeamPartData)mData.team.clone();
		}
		else
		{
			this.team=null;
			nullObjError("team");
		}
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		GameGlobalListData mData=(GameGlobalListData)data;
		if(mData.system!=null)
		{
			if(this.system==null)
				return false;
			if(!this.system.dataEquals(mData.system))
				return false;
		}
		else
		{
			if(this.system!=null)
				return false;
		}
		
		if(mData.social!=null)
		{
			if(this.social==null)
				return false;
			if(!this.social.dataEquals(mData.social))
				return false;
		}
		else
		{
			if(this.social!=null)
				return false;
		}
		
		if(mData.func!=null)
		{
			if(this.func==null)
				return false;
			if(!this.func.dataEquals(mData.func))
				return false;
		}
		else
		{
			if(this.func!=null)
				return false;
		}
		
		if(mData.activity!=null)
		{
			if(this.activity==null)
				return false;
			if(!this.activity.dataEquals(mData.activity))
				return false;
		}
		else
		{
			if(this.activity!=null)
				return false;
		}
		
		if(mData.mail!=null)
		{
			if(this.mail==null)
				return false;
			if(!this.mail.dataEquals(mData.mail))
				return false;
		}
		else
		{
			if(this.mail!=null)
				return false;
		}
		
		if(mData.union!=null)
		{
			if(this.union==null)
				return false;
			if(!this.union.dataEquals(mData.union))
				return false;
		}
		else
		{
			if(this.union!=null)
				return false;
		}
		
		if(mData.team!=null)
		{
			if(this.team==null)
				return false;
			if(!this.team.dataEquals(mData.team))
				return false;
		}
		else
		{
			if(this.team!=null)
				return false;
		}
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("system");
		writer.sb.append(':');
		if(this.system!=null)
		{
			this.system.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GameSystemPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("social");
		writer.sb.append(':');
		if(this.social!=null)
		{
			this.social.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GameSocialPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("func");
		writer.sb.append(':');
		if(this.func!=null)
		{
			this.func.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GameFuncPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("activity");
		writer.sb.append(':');
		if(this.activity!=null)
		{
			this.activity.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GameActivityPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("mail");
		writer.sb.append(':');
		if(this.mail!=null)
		{
			this.mail.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GameMailPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("union");
		writer.sb.append(':');
		if(this.union!=null)
		{
			this.union.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GameUnionPartData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("team");
		writer.sb.append(':');
		if(this.team!=null)
		{
			this.team.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GameTeamPartData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.system=null;
		this.social=null;
		this.func=null;
		this.activity=null;
		this.mail=null;
		this.union=null;
		this.team=null;
	}
	
}
