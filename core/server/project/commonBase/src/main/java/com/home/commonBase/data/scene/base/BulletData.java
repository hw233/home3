package com.home.commonBase.data.scene.base;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.data.scene.fight.SkillTargetData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 子弹数据(generated by shine) */
public class BulletData extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.Bullet;
	
	/** 实例ID */
	public int instanceID;
	
	/** id */
	public int id;
	
	/** 等级 */
	public int level;
	
	/** 技能目标数据 */
	public SkillTargetData targetData;
	
	/** 是否主动(临时) */
	public boolean isInitiative=false;
	
	/** 剩余时间(客户端驱动子弹用) */
	public int lastTime;
	
	public BulletData()
	{
		_dataID=BaseDataType.Bullet;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.instanceID=stream.readInt();
		
		this.id=stream.readInt();
		
		this.level=stream.readInt();
		
		BaseData targetDataT=stream.readDataFullNotNull();
		if(targetDataT!=null)
		{
			if(targetDataT instanceof SkillTargetData)
			{
				this.targetData=(SkillTargetData)targetDataT;
			}
			else
			{
				this.targetData=new SkillTargetData();
				if(!(targetDataT.getClass().isAssignableFrom(SkillTargetData.class)))
				{
					stream.throwTypeReadError(SkillTargetData.class,targetDataT.getClass());
				}
				this.targetData.shadowCopy(targetDataT);
			}
		}
		else
		{
			this.targetData=null;
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeInt(this.instanceID);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.level);
		
		if(this.targetData!=null)
		{
			stream.writeDataFullNotNull(this.targetData);
		}
		else
		{
			nullObjError("targetData");
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.instanceID=stream.readInt();
		
		this.id=stream.readInt();
		
		this.level=stream.readInt();
		
		this.targetData=(SkillTargetData)stream.readDataSimpleNotNull();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeInt(this.instanceID);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.level);
		
		if(this.targetData!=null)
		{
			stream.writeDataSimpleNotNull(this.targetData);
		}
		else
		{
			nullObjError("targetData");
		}
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof BulletData))
			return;
		
		BulletData mData=(BulletData)data;
		
		this.instanceID=mData.instanceID;
		this.id=mData.id;
		this.level=mData.level;
		this.targetData=mData.targetData;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof BulletData))
			return;
		
		BulletData mData=(BulletData)data;
		
		this.instanceID=mData.instanceID;
		
		this.id=mData.id;
		
		this.level=mData.level;
		
		if(mData.targetData!=null)
		{
			this.targetData=(SkillTargetData)mData.targetData.clone();
		}
		else
		{
			this.targetData=null;
			nullObjError("targetData");
		}
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		BulletData mData=(BulletData)data;
		if(this.instanceID!=mData.instanceID)
			return false;
		
		if(this.id!=mData.id)
			return false;
		
		if(this.level!=mData.level)
			return false;
		
		if(mData.targetData!=null)
		{
			if(this.targetData==null)
				return false;
			if(!this.targetData.dataEquals(mData.targetData))
				return false;
		}
		else
		{
			if(this.targetData!=null)
				return false;
		}
		
		return true;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "BulletData";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("instanceID");
		writer.sb.append(':');
		writer.sb.append(this.instanceID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("id");
		writer.sb.append(':');
		writer.sb.append(this.id);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("level");
		writer.sb.append(':');
		writer.sb.append(this.level);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("targetData");
		writer.sb.append(':');
		if(this.targetData!=null)
		{
			this.targetData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("SkillTargetData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		this.targetData=new SkillTargetData();
		this.targetData.initDefault();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.instanceID=0;
		this.id=0;
		this.level=0;
		this.targetData=null;
	}
	
}
