package com.home.commonBase.data.social.chat;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.data.social.chat.RoleChatData;
import com.home.commonBase.data.system.PlayerWorkData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 推送玩家聊天(generated by shine) */
public class SendPlayerChatOWData extends PlayerWorkData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.SendPlayerChatOW;
	
	/** 聊天数据 */
	public RoleChatData chatData;
	
	/** 频道 */
	public int channel;
	
	/** 二级索引 */
	public long key;
	
	public SendPlayerChatOWData()
	{
		_dataID=BaseDataType.SendPlayerChatOW;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "SendPlayerChatOWData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		BaseData chatDataT=stream.readDataFullNotNull();
		if(chatDataT!=null)
		{
			if(chatDataT instanceof RoleChatData)
			{
				this.chatData=(RoleChatData)chatDataT;
			}
			else
			{
				this.chatData=new RoleChatData();
				if(!(chatDataT.getClass().isAssignableFrom(RoleChatData.class)))
				{
					stream.throwTypeReadError(RoleChatData.class,chatDataT.getClass());
				}
				this.chatData.shadowCopy(chatDataT);
			}
		}
		else
		{
			this.chatData=null;
		}
		
		this.channel=stream.readInt();
		
		this.key=stream.readLong();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.chatData!=null)
		{
			stream.writeDataFullNotNull(this.chatData);
		}
		else
		{
			nullObjError("chatData");
		}
		
		stream.writeInt(this.channel);
		
		stream.writeLong(this.key);
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.chatData=(RoleChatData)stream.readDataSimpleNotNull();
		
		this.channel=stream.readInt();
		
		this.key=stream.readLong();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		if(this.chatData!=null)
		{
			stream.writeDataSimpleNotNull(this.chatData);
		}
		else
		{
			nullObjError("chatData");
		}
		
		stream.writeInt(this.channel);
		
		stream.writeLong(this.key);
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		super.toShadowCopy(data);
		
		if(!(data instanceof SendPlayerChatOWData))
			return;
		
		SendPlayerChatOWData mData=(SendPlayerChatOWData)data;
		
		this.chatData=mData.chatData;
		this.channel=mData.channel;
		this.key=mData.key;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		super.toCopy(data);
		
		if(!(data instanceof SendPlayerChatOWData))
			return;
		
		SendPlayerChatOWData mData=(SendPlayerChatOWData)data;
		
		if(mData.chatData!=null)
		{
			this.chatData=(RoleChatData)mData.chatData.clone();
		}
		else
		{
			this.chatData=null;
			nullObjError("chatData");
		}
		
		this.channel=mData.channel;
		
		this.key=mData.key;
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		if(!super.toDataEquals(data))
			return false;
		
		SendPlayerChatOWData mData=(SendPlayerChatOWData)data;
		if(mData.chatData!=null)
		{
			if(this.chatData==null)
				return false;
			if(!this.chatData.dataEquals(mData.chatData))
				return false;
		}
		else
		{
			if(this.chatData!=null)
				return false;
		}
		
		if(this.channel!=mData.channel)
			return false;
		
		if(this.key!=mData.key)
			return false;
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("chatData");
		writer.sb.append(':');
		if(this.chatData!=null)
		{
			this.chatData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("RoleChatData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("channel");
		writer.sb.append(':');
		writer.sb.append(this.channel);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("key");
		writer.sb.append(':');
		writer.sb.append(this.key);
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		super.initDefault();
		
		this.chatData=new RoleChatData();
		this.chatData.initDefault();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.chatData=null;
		this.channel=0;
		this.key=0L;
	}
	
}
