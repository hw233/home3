package com.home.commonBase.config.game;
import com.home.commonBase.config.base.BaseConfig;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.support.collection.IntObjectMap;

/** 拍卖行表(generated by shine) */
public class AuctionConfig extends BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<AuctionConfig> _dic;
	
	/** id */
	public int id;
	
	/** 每个玩家可上架数目 */
	public int maxSaleNum;
	
	/** 每页显示数目 */
	public int eachPageShowNum;
	
	/** 上架保留时间(天) */
	public int keepDay;
	
	/** 最近判定时间(s) */
	public int recentlyTime;
	
	/** 手续费比率(千分位) */
	public int commissionRatio;
	
	/** 实际收入比率 */
	public double commissionRatioT;
	
	/** 获取 */
	public static AuctionConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/** 设置字典 */
	public static void setDic(IntObjectMap<AuctionConfig> dic)
	{
		_dic=dic;
	}
	
	/** 获取全部 */
	public static IntObjectMap<AuctionConfig> getDic()
	{
		return _dic;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.maxSaleNum=stream.readInt();
		
		this.eachPageShowNum=stream.readInt();
		
		this.keepDay=stream.readInt();
		
		this.commissionRatio=stream.readInt();
		
		this.recentlyTime=stream.readInt();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.maxSaleNum);
		
		stream.writeInt(this.eachPageShowNum);
		
		stream.writeInt(this.keepDay);
		
		stream.writeInt(this.commissionRatio);
		
		stream.writeInt(this.recentlyTime);
		
	}
	
	@Override
	protected void afterReadConfig()
	{
		super.afterReadConfig();
		
		if(commissionRatio==0)
			commissionRatioT=1.0;
		else
			commissionRatioT=(1000.0-commissionRatio)/1000.0;
	}
	
	/** 读完所有表后处理 */
	public static void afterReadConfigAll()
	{
		
	}
	
}
