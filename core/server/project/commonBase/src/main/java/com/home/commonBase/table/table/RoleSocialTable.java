package com.home.commonBase.table.table;
import com.home.commonBase.constlist.generate.BaseTableType;
import com.home.commonBase.table.result.RoleSocialDBResult;
import com.home.commonBase.table.task.RoleSocialDBTask;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.table.BaseDBResult;
import com.home.shine.table.BaseTable;
import com.home.shine.table.task.BaseDBTask;

/** 角色社交数据表(generated by shine) */
public class RoleSocialTable extends BaseTable
{
	/** 增 */
	private static final String _insertStr="replace into `rolesocial` (`playerID`,`data` ) values (?,?)";
	
	/** 删 */
	private static final String _deleteStr="delete from `rolesocial` where `playerID` = ?";
	
	/** 改 */
	private static final String _updateStr="update `rolesocial` set `playerID` = ?,`data` = ? where `playerID` = ?";
	
	/** 查询头 */
	private static final String _selectStr="select `playerID`,`data` from `rolesocial`";
	
	/** 查0 */
	private static final String _selectInStr0="select `playerID`,`data` from `rolesocial` where `playerID` in (";
	
	/** 角色id */
	public long playerID;
	
	/** 数据 */
	public byte[] data;
	
	public RoleSocialTable()
	{
		_dataID=BaseTableType.RoleSocial;
	}
	
	@Override
	public String getInsertStr()
	{
		return _insertStr;
	}
	
	@Override
	public String getDeleteStr()
	{
		return _deleteStr;
	}
	
	@Override
	public String getUpdateStr()
	{
		return _updateStr;
	}
	
	@Override
	public String getSelectStr()
	{
		return _selectStr;
	}
	
	@Override
	public String getSelectInStrByIndex(int index)
	{
		switch(index)
		{
			case 0:
				return _selectInStr0;
		}
		
		return null;
	}
	
	@Override
	protected BaseDBTask createTask()
	{
		RoleSocialDBTask task=new RoleSocialDBTask();
		task.playerID=this.playerID;
		task.data=this.data;
		return task;
	}
	
	@Override
	public void readByResult(BaseDBResult result)
	{
		RoleSocialDBResult re=(RoleSocialDBResult)result;
		this.playerID=re.playerID;
		this.data=re.data;
	}
	
	@Override
	protected void toReadValues()
	{
		playerID=readLong();
		data=readBytes();
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.playerID=stream.readLong();
		
		int dataLen=stream.readLen();
		this.data=stream.readByteArr(dataLen);
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeLong(this.playerID);
		
		if(this.data!=null)
		{
			stream.writeLen(this.data.length);
			stream.writeByteArr(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
		stream.endWriteObj();
	}
	
}
