package com.home.commonBase.data.role;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.constlist.generate.UnitType;
import com.home.commonBase.data.role.MUnitSaveData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 宠物存库数据(generated by shine) */
public class PetSaveData extends MUnitSaveData
{
	/** 宠物经验 */
	public long exp;
	
	/** 宠物等级 */
	public int level;
	
	/** 数据类型ID */
	public static final int dataID=BaseDataType.PetSave;
	
	/** 是否出战中 */
	public boolean isWorking;
	
	public PetSaveData()
	{
		_dataID=BaseDataType.PetSave;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "PetSaveData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.level=stream.readInt();
		
		this.exp=stream.readLong();
		
		this.isWorking=stream.readBoolean();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.level);
		
		stream.writeLong(this.exp);
		
		stream.writeBoolean(this.isWorking);
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.level=stream.readInt();
		
		this.exp=stream.readLong();
		
		this.isWorking=stream.readBoolean();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.level);
		
		stream.writeLong(this.exp);
		
		stream.writeBoolean(this.isWorking);
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		super.toShadowCopy(data);
		
		if(!(data instanceof PetSaveData))
			return;
		
		PetSaveData mData=(PetSaveData)data;
		
		this.level=mData.level;
		this.exp=mData.exp;
		this.isWorking=mData.isWorking;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		super.toCopy(data);
		
		if(!(data instanceof PetSaveData))
			return;
		
		PetSaveData mData=(PetSaveData)data;
		
		this.level=mData.level;
		
		this.exp=mData.exp;
		
		this.isWorking=mData.isWorking;
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		if(!super.toDataEquals(data))
			return false;
		
		PetSaveData mData=(PetSaveData)data;
		if(this.level!=mData.level)
			return false;
		
		if(this.exp!=mData.exp)
			return false;
		
		if(this.isWorking!=mData.isWorking)
			return false;
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("level");
		writer.sb.append(':');
		writer.sb.append(this.level);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("exp");
		writer.sb.append(':');
		writer.sb.append(this.exp);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("isWorking");
		writer.sb.append(':');
		writer.sb.append(this.isWorking);
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		super.initDefault();
		
	}
	
	@Override
	public int getUnitType()
	{
		return UnitType.Pet;
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.level=0;
		this.exp=0L;
		this.isWorking=false;
	}
	
}
