package com.home.commonBase.data.scene.role;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.data.role.RoleShowData;
import com.home.commonBase.data.scene.role.RoleAttributeData;
import com.home.commonBase.data.scene.role.RoleForceData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 场景角色数据(generated by shine) */
public class SceneRoleData extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.SceneRole;
	
	/** 角色ID */
	public long playerID;
	
	/** 角色显示数据(中立角色为空) */
	public RoleShowData showData;
	
	/** 势力数据 */
	public RoleForceData force;
	
	/** 属性数据 */
	public RoleAttributeData attribute;
	
	public SceneRoleData()
	{
		_dataID=BaseDataType.SceneRole;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "SceneRoleData";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.playerID=stream.readLong();
		
		if(stream.readBoolean())
		{
			BaseData showDataT=stream.readDataFullNotNull();
			if(showDataT!=null)
			{
				if(showDataT instanceof RoleShowData)
				{
					this.showData=(RoleShowData)showDataT;
				}
				else
				{
					this.showData=new RoleShowData();
					if(!(showDataT.getClass().isAssignableFrom(RoleShowData.class)))
					{
						stream.throwTypeReadError(RoleShowData.class,showDataT.getClass());
					}
					this.showData.shadowCopy(showDataT);
				}
			}
			else
			{
				this.showData=null;
			}
		}
		else
		{
			this.showData=null;
		}
		
		if(stream.readBoolean())
		{
			BaseData attributeT=stream.readDataFullNotNull();
			if(attributeT!=null)
			{
				if(attributeT instanceof RoleAttributeData)
				{
					this.attribute=(RoleAttributeData)attributeT;
				}
				else
				{
					this.attribute=new RoleAttributeData();
					if(!(attributeT.getClass().isAssignableFrom(RoleAttributeData.class)))
					{
						stream.throwTypeReadError(RoleAttributeData.class,attributeT.getClass());
					}
					this.attribute.shadowCopy(attributeT);
				}
			}
			else
			{
				this.attribute=null;
			}
		}
		else
		{
			this.attribute=null;
		}
		
		BaseData forceT=stream.readDataFullNotNull();
		if(forceT!=null)
		{
			if(forceT instanceof RoleForceData)
			{
				this.force=(RoleForceData)forceT;
			}
			else
			{
				this.force=new RoleForceData();
				if(!(forceT.getClass().isAssignableFrom(RoleForceData.class)))
				{
					stream.throwTypeReadError(RoleForceData.class,forceT.getClass());
				}
				this.force.shadowCopy(forceT);
			}
		}
		else
		{
			this.force=null;
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeLong(this.playerID);
		
		if(this.showData!=null)
		{
			stream.writeBoolean(true);
			stream.writeDataFullNotNull(this.showData);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.attribute!=null)
		{
			stream.writeBoolean(true);
			stream.writeDataFullNotNull(this.attribute);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.force!=null)
		{
			stream.writeDataFullNotNull(this.force);
		}
		else
		{
			nullObjError("force");
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.playerID=stream.readLong();
		
		if(stream.readBoolean())
		{
			this.showData=(RoleShowData)stream.readDataSimpleNotNull();
		}
		else
		{
			this.showData=null;
		}
		
		if(stream.readBoolean())
		{
			this.attribute=(RoleAttributeData)stream.readDataSimpleNotNull();
		}
		else
		{
			this.attribute=null;
		}
		
		this.force=(RoleForceData)stream.readDataSimpleNotNull();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeLong(this.playerID);
		
		if(this.showData!=null)
		{
			stream.writeBoolean(true);
			stream.writeDataSimpleNotNull(this.showData);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.attribute!=null)
		{
			stream.writeBoolean(true);
			stream.writeDataSimpleNotNull(this.attribute);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.force!=null)
		{
			stream.writeDataSimpleNotNull(this.force);
		}
		else
		{
			nullObjError("force");
		}
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof SceneRoleData))
			return;
		
		SceneRoleData mData=(SceneRoleData)data;
		
		this.playerID=mData.playerID;
		this.showData=mData.showData;
		this.attribute=mData.attribute;
		this.force=mData.force;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof SceneRoleData))
			return;
		
		SceneRoleData mData=(SceneRoleData)data;
		
		this.playerID=mData.playerID;
		
		if(mData.showData!=null)
		{
			this.showData=(RoleShowData)mData.showData.clone();
		}
		else
		{
			this.showData=null;
		}
		
		if(mData.attribute!=null)
		{
			this.attribute=(RoleAttributeData)mData.attribute.clone();
		}
		else
		{
			this.attribute=null;
		}
		
		if(mData.force!=null)
		{
			this.force=(RoleForceData)mData.force.clone();
		}
		else
		{
			this.force=null;
			nullObjError("force");
		}
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		SceneRoleData mData=(SceneRoleData)data;
		if(this.playerID!=mData.playerID)
			return false;
		
		if(mData.showData!=null)
		{
			if(this.showData==null)
				return false;
			if(!this.showData.dataEquals(mData.showData))
				return false;
		}
		else
		{
			if(this.showData!=null)
				return false;
		}
		
		if(mData.attribute!=null)
		{
			if(this.attribute==null)
				return false;
			if(!this.attribute.dataEquals(mData.attribute))
				return false;
		}
		else
		{
			if(this.attribute!=null)
				return false;
		}
		
		if(mData.force!=null)
		{
			if(this.force==null)
				return false;
			if(!this.force.dataEquals(mData.force))
				return false;
		}
		else
		{
			if(this.force!=null)
				return false;
		}
		
		return true;
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("showData");
		writer.sb.append(':');
		if(this.showData!=null)
		{
			this.showData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("RoleShowData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("attribute");
		writer.sb.append(':');
		if(this.attribute!=null)
		{
			this.attribute.writeDataString(writer);
		}
		else
		{
			writer.sb.append("RoleAttributeData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("force");
		writer.sb.append(':');
		if(this.force!=null)
		{
			this.force.writeDataString(writer);
		}
		else
		{
			writer.sb.append("RoleForceData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		this.force=new RoleForceData();
		this.force.initDefault();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.playerID=0L;
		this.showData=null;
		this.attribute=null;
		this.force=null;
	}
	
}
