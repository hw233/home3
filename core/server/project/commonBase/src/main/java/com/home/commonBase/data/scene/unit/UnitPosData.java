package com.home.commonBase.data.scene.unit;
import com.home.commonBase.constlist.generate.BaseDataType;
import com.home.commonBase.data.scene.base.DirData;
import com.home.commonBase.data.scene.base.PosData;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.SList;
import com.home.shine.support.pool.DataPool;

/** 单位位置数据(generated by shine) */
public class UnitPosData extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=BaseDataType.UnitPos;
	
	/** 当前朝向 */
	public DirData dir;
	
	/** 当前位置 */
	public PosData pos;
	
	public UnitPosData()
	{
		_dataID=BaseDataType.UnitPos;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.pos=new PosData();
		this.pos.readBytesFull(stream);
		
		this.dir=new DirData();
		this.dir.readBytesFull(stream);
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.pos!=null)
		{
			this.pos.writeBytesFull(stream);
		}
		else
		{
			nullObjError("pos");
		}
		
		if(this.dir!=null)
		{
			this.dir.writeBytesFull(stream);
		}
		else
		{
			nullObjError("dir");
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.pos=new PosData();
		this.pos.readBytesSimple(stream);
		
		this.dir=new DirData();
		this.dir.readBytesSimple(stream);
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.pos!=null)
		{
			this.pos.writeBytesSimple(stream);
		}
		else
		{
			nullObjError("pos");
		}
		
		if(this.dir!=null)
		{
			this.dir.writeBytesSimple(stream);
		}
		else
		{
			nullObjError("dir");
		}
		
	}
	
	/** 复制(潜拷贝) */
	@Override
	protected void toShadowCopy(BaseData data)
	{
		if(!(data instanceof UnitPosData))
			return;
		
		UnitPosData mData=(UnitPosData)data;
		
		this.pos=mData.pos;
		this.dir=mData.dir;
	}
	
	/** 复制(深拷贝) */
	@Override
	protected void toCopy(BaseData data)
	{
		if(!(data instanceof UnitPosData))
			return;
		
		UnitPosData mData=(UnitPosData)data;
		
		if(mData.pos!=null)
		{
			this.pos=new PosData();
			this.pos.copy(mData.pos);
		}
		else
		{
			this.pos=null;
			nullObjError("pos");
		}
		
		if(mData.dir!=null)
		{
			this.dir=new DirData();
			this.dir.copy(mData.dir);
		}
		else
		{
			this.dir=null;
			nullObjError("dir");
		}
		
	}
	
	/** 是否数据一致 */
	@Override
	protected boolean toDataEquals(BaseData data)
	{
		UnitPosData mData=(UnitPosData)data;
		if(mData.pos!=null)
		{
			if(this.pos==null)
				return false;
			if(!this.pos.dataEquals(mData.pos))
				return false;
		}
		else
		{
			if(this.pos!=null)
				return false;
		}
		
		if(mData.dir!=null)
		{
			if(this.dir==null)
				return false;
			if(!this.dir.dataEquals(mData.dir))
				return false;
		}
		else
		{
			if(this.dir!=null)
				return false;
		}
		
		return true;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "UnitPosData";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.append("pos");
		writer.sb.append(':');
		if(this.pos!=null)
		{
			this.pos.writeDataString(writer);
		}
		else
		{
			writer.sb.append("PosData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("dir");
		writer.sb.append(':');
		if(this.dir!=null)
		{
			this.dir.writeDataString(writer);
		}
		else
		{
			writer.sb.append("DirData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 初始化初值 */
	@Override
	public void initDefault()
	{
		this.pos=new PosData();
		this.pos.initDefault();
		this.dir=new DirData();
		this.dir.initDefault();
	}
	
	/** 通过float[]设置坐标 */
	public void setByFArr(float[] arr)
	{
		if(arr.length>1)
		{
			pos.x=arr[0];
			pos.y=arr[1];
		}
		else
		{
			pos.x=0f;
			pos.y=0f;
		}
		
		pos.z=arr.length>2 ? arr[2] : 0f;
		dir.direction=arr.length>3 ? arr[3] : 0f;
		dir.directionX=arr.length>4 ? arr[4] : 0f;
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		this.pos=null;
		this.dir=null;
	}
	
}
