package com.home.commonManager.net.serverRequest.center;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonBase.data.system.ServerInfoData;
import com.home.commonManager.net.base.ManagerServerRequest;
import com.home.commonManager.net.serverRequest.center.base.ManagerToCenterServerRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.IntIntMap;
import com.home.shine.support.pool.DataPool;

/** (generated by shine) */
public class ReBeCenterToManagerServerRequest extends ManagerToCenterServerRequest
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.ReBeCenterToManager;
	
	/** 服务器信息 */
	public ServerInfoData info;
	
	/** 区服字典(areaID:gameID) */
	public IntIntMap areaDic;
	
	public ReBeCenterToManagerServerRequest()
	{
		_dataID=ServerMessageType.ReBeCenterToManager;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		ServerInfoData infoTemp=info;
		if(infoTemp!=null)
		{
			this.info=(ServerInfoData)infoTemp.clone();
		}
		else
		{
			this.info=null;
		}
		
		IntIntMap areaDicTemp=areaDic;
		if(areaDicTemp!=null)
		{
			this.areaDic=new IntIntMap(areaDicTemp.size());
			IntIntMap areaDicT=this.areaDic;
			if(!areaDicTemp.isEmpty())
			{
				int areaDicKFreeValue=areaDicTemp.getFreeValue();
				long[] areaDicKTable=areaDicTemp.getTable();
				long areaDicKEntry;
				for(int areaDicKI=areaDicKTable.length-1;areaDicKI>=0;--areaDicKI)
				{
					areaDicKEntry=areaDicKTable[areaDicKI];
					int areaDicK=(int)areaDicKEntry;
					if(areaDicK!=areaDicKFreeValue)
					{
						int areaDicV=(int)(areaDicKEntry>>>32);
						int areaDicW;
						int areaDicU;
						areaDicW=areaDicK;
						
						areaDicU=areaDicV;
						
						areaDicT.put(areaDicW,areaDicU);
					}
				}
			}
		}
		else
		{
			this.areaDic=null;
			nullObjError("areaDic");
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "ReBeCenterToManagerServerRequest";
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		if(this.info!=null)
		{
			stream.writeBoolean(true);
			stream.writeDataSimpleNotNull(this.info);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.areaDic!=null)
		{
			stream.writeLen(this.areaDic.size());
			if(!this.areaDic.isEmpty())
			{
				int areaDicKFreeValue=this.areaDic.getFreeValue();
				long[] areaDicKTable=this.areaDic.getTable();
				long areaDicKEntry;
				for(int areaDicKI=areaDicKTable.length-1;areaDicKI>=0;--areaDicKI)
				{
					areaDicKEntry=areaDicKTable[areaDicKI];
					int areaDicK=(int)areaDicKEntry;
					if(areaDicK!=areaDicKFreeValue)
					{
						int areaDicV=(int)(areaDicKEntry>>>32);
						stream.writeInt(areaDicK);
						
						stream.writeInt(areaDicV);
						
					}
				}
			}
		}
		else
		{
			nullObjError("areaDic");
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("info");
		writer.sb.append(':');
		if(this.info!=null)
		{
			this.info.writeDataString(writer);
		}
		else
		{
			writer.sb.append("ServerInfoData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("areaDic");
		writer.sb.append(':');
		writer.sb.append("Map<int,int>");
		if(this.areaDic!=null)
		{
			writer.sb.append('(');
			writer.sb.append(this.areaDic.size());
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.areaDic.isEmpty())
			{
				int areaDicKFreeValue=this.areaDic.getFreeValue();
				long[] areaDicKTable=this.areaDic.getTable();
				long areaDicKEntry;
				for(int areaDicKI=areaDicKTable.length-1;areaDicKI>=0;--areaDicKI)
				{
					areaDicKEntry=areaDicKTable[areaDicKI];
					int areaDicK=(int)areaDicKEntry;
					if(areaDicK!=areaDicKFreeValue)
					{
						int areaDicV=(int)(areaDicKEntry>>>32);
						writer.writeTabs();
						writer.sb.append(areaDicK);
						
						writer.sb.append(':');
						writer.sb.append(areaDicV);
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		if(this.info!=null)
		{
			this.info.release(pool);
			this.info=null;
		}
		if(this.areaDic!=null)
		{
			this.areaDic.clear();
		}
	}
	
	/** 创建实例 */
	public static ReBeCenterToManagerServerRequest create(ServerInfoData info,IntIntMap areaDic)
	{
		ReBeCenterToManagerServerRequest re=(ReBeCenterToManagerServerRequest)BytesControl.createRequest(dataID);
		re.info=info;
		re.areaDic=areaDic;
		return re;
	}
	
}
