package com.home.commonManager.net.httpResponse.system;
import com.home.commonManager.constlist.generate.ManagerHttpResponseType;
import com.home.commonManager.global.ManagerC;
import com.home.commonManager.net.base.ManagerHttpResponse;
import com.home.commonManager.net.httpResponseResult.system.MMakeActivationCodeResult;
import com.home.shine.bytes.BytesReadStream;

/** 生成激活码消息(generated by shine) */
public class MMakeActivationCodeHttpResponse extends ManagerHttpResponse
{
	/** 数据类型ID */
	public static final int dataID=ManagerHttpResponseType.MMakeActivationCode;
	
	/** id */
	public int id;
	
	/** 批次 */
	public int batchNum;
	
	/** 使用次数 */
	public int useNum;
	
	/** 失效时间 */
	public long disableTime;
	
	/** 数目 */
	public int num;
	
	/** 返回值 */
	protected MMakeActivationCodeResult _re=new MMakeActivationCodeResult();
	
	public MMakeActivationCodeHttpResponse()
	{
		_dataID=ManagerHttpResponseType.MMakeActivationCode;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.num=stream.readInt();
		
		this.disableTime=stream.readLong();
		
		this.useNum=stream.readInt();
		
		this.batchNum=stream.readInt();
		
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		ManagerC.logic.makeActivationCode(id,num,disableTime,useNum,batchNum,arr->
		{
			if(arr!=null)
			{
				reBack(arr);
			}
			else
			{
				result(false);//失败
			}
		});
	}
	
	/** 收到返回方法 */
	public void reBack(String[] codeArr)
	{
		_re.codeArr=codeArr;
		resultData(_re);
	}
	
}
