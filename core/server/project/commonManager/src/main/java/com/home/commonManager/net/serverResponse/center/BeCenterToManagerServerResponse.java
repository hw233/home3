package com.home.commonManager.net.serverResponse.center;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonBase.data.system.ServerInfoData;
import com.home.commonManager.global.ManagerC;
import com.home.commonManager.net.serverRequest.center.ReBeCenterToManagerServerRequest;
import com.home.commonManager.net.serverResponse.center.base.CenterToManagerServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.constlist.SocketType;
import com.home.shine.serverConfig.ServerConfig;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** (generated by shine) */
public class BeCenterToManagerServerResponse extends CenterToManagerServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.BeCenterToManager;
	
	/** 是否第一次连接 */
	public boolean isFirst;
	
	public BeCenterToManagerServerResponse()
	{
		_dataID=ServerMessageType.BeCenterToManager;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "BeCenterToManagerServerResponse";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.isFirst=stream.readBoolean();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("isFirst");
		writer.sb.append(':');
		writer.sb.append(this.isFirst);
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		ManagerC.server.getSocketInfo(SocketType.Center).registerOnlySocket(socket);
		
		ServerInfoData data=null;
		
		if(isFirst)
		{
			data=new ServerInfoData();
			data.readByConfig(ServerConfig.getCenterConfig());
		}
		
		socket.send(ReBeCenterToManagerServerRequest.create(data,ManagerC.main.getAreaDic()));
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.isFirst=false;
	}
	
}
