package com.home.commonManager.tool.generate;
import com.home.commonManager.constlist.generate.ManagerHttpResponseType;
import com.home.commonManager.net.httpResponse.base.ManagerRHttpResponse;
import com.home.commonManager.net.httpResponse.role.MAddPlayerWorkHttpResponse;
import com.home.commonManager.net.httpResponse.role.MPlayerQueryWorkHttpResponse;
import com.home.commonManager.net.httpResponse.role.MQueryPlayerHttpResponse;
import com.home.commonManager.net.httpResponse.system.GMClientLoginHttpResponse;
import com.home.commonManager.net.httpResponse.system.MMakeActivationCodeHttpResponse;
import com.home.shine.data.BaseData;
import com.home.shine.tool.CreateDataFunc;
import com.home.shine.tool.DataMaker;

/** (generated by shine) */
public class ManagerHttpResponseMaker extends DataMaker
{
	public ManagerHttpResponseMaker()
	{
		offSet=ManagerHttpResponseType.off;
		list=new CreateDataFunc[ManagerHttpResponseType.count-offSet];
		list[ManagerHttpResponseType.GMClientLogin-offSet]=this::createGMClientLoginHttpResponse;
		list[ManagerHttpResponseType.MAddPlayerWork-offSet]=this::createMAddPlayerWorkHttpResponse;
		list[ManagerHttpResponseType.MPlayerQueryWork-offSet]=this::createMPlayerQueryWorkHttpResponse;
		list[ManagerHttpResponseType.MQueryPlayer-offSet]=this::createMQueryPlayerHttpResponse;
		list[ManagerHttpResponseType.MMakeActivationCode-offSet]=this::createMMakeActivationCodeHttpResponse;
	}
	
	private BaseData createGMClientLoginHttpResponse()
	{
		return new GMClientLoginHttpResponse();
	}
	
	private BaseData createManagerRHttpResponse()
	{
		return new ManagerRHttpResponse();
	}
	
	private BaseData createMQueryPlayerHttpResponse()
	{
		return new MQueryPlayerHttpResponse();
	}
	
	private BaseData createMPlayerQueryWorkHttpResponse()
	{
		return new MPlayerQueryWorkHttpResponse();
	}
	
	private BaseData createMAddPlayerWorkHttpResponse()
	{
		return new MAddPlayerWorkHttpResponse();
	}
	
	private BaseData createMMakeActivationCodeHttpResponse()
	{
		return new MMakeActivationCodeHttpResponse();
	}
	
}
