package com.home.commonLogin.net.httpResponse;
import com.home.commonBase.constlist.generate.ClientPlatformType;
import com.home.commonBase.data.login.ClientVersionData;
import com.home.commonBase.global.BaseC;
import com.home.commonLogin.constlist.generate.LoginHttpResponseType;
import com.home.commonLogin.global.LoginC;
import com.home.commonLogin.net.base.LoginHttpResponse;
import com.home.commonLogin.net.httpResponseResult.ClientGetVersionResult;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.ctrl.Ctrl;

/** 客户端获取版本消息(generated by shine) */
public class ClientGetVersionHttpResponse extends LoginHttpResponse
{
	/** 数据类型ID */
	public static final int dataID=LoginHttpResponseType.ClientGetVersion;
	
	/** 当前资源版本号(用来做url重定向) */
	public int resourceVersion;
	
	/** 返回值 */
	protected ClientGetVersionResult _re=new ClientGetVersionResult();
	
	/** 客户端平台类型(见ClientPlatformType) */
	public int platformType;
	
	public ClientGetVersionHttpResponse()
	{
		_dataID=LoginHttpResponseType.ClientGetVersion;
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		ClientVersionData clientVersion=LoginC.main.getClientVersion(platformType);
		
		if(clientVersion==null)
		{
			Ctrl.warnLog("该设备平台的版本数据未配置",BaseC.constlist.clientPlatform_getName(platformType));
			resultData(_re);
		}
		else
		{
			reBack(LoginC.main.getClientVersion(platformType),LoginC.main.getRedirectURL(platformType,resourceVersion));
		}
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.platformType=stream.readInt();
		
		this.resourceVersion=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.platformType=stream.readInt();
		
		this.resourceVersion=stream.readInt();
		
	}
	
	/** 收到返回方法 */
	public void reBack(ClientVersionData version,String redirectURL)
	{
		_re.version=version;
		_re.redirectURL=redirectURL;
		resultData(_re);
	}
	
}
