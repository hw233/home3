package com.home.commonLogin.net.serverRequest.game.login;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonLogin.net.serverRequest.game.base.LoginToGameServerRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 角色绑定平台到game服消息(generated by shine) */
public class PlayerBindPlatformToGameServerRequest extends LoginToGameServerRequest
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.PlayerBindPlatformToGame;
	
	/** 角色ID */
	public long playerID;
	
	public String uid="";
	
	public String platform="";
	
	public PlayerBindPlatformToGameServerRequest()
	{
		_dataID=ServerMessageType.PlayerBindPlatformToGame;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "PlayerBindPlatformToGameServerRequest";
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeLong(this.playerID);
		
		stream.writeUTF(this.uid);
		
		stream.writeUTF(this.platform);
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("uid");
		writer.sb.append(':');
		writer.sb.append(this.uid);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("platform");
		writer.sb.append(':');
		writer.sb.append(this.platform);
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.playerID=0L;
		this.uid="";
		this.platform="";
	}
	
	/** 创建实例 */
	public static PlayerBindPlatformToGameServerRequest create(long playerID,String uid,String platform)
	{
		PlayerBindPlatformToGameServerRequest re=(PlayerBindPlatformToGameServerRequest)BytesControl.createRequest(dataID);
		re.playerID=playerID;
		re.uid=uid;
		re.platform=platform;
		return re;
	}
	
}
