package com.home.shine.tool.generate;
import com.home.shine.constlist.generate.ShineResponseType;
import com.home.shine.data.BaseData;
import com.home.shine.net.response.AckPingResponse;
import com.home.shine.net.response.PingResponse;
import com.home.shine.net.response.RePingResponse;
import com.home.shine.net.response.SocketCloseResponse;
import com.home.shine.net.response.SocketConnectSuccessResponse;
import com.home.shine.net.response.SocketReconnectFailedResponse;
import com.home.shine.net.response.SocketReconnectResponse;
import com.home.shine.net.response.SocketReconnectSuccessResponse;
import com.home.shine.tool.CreateDataFunc;
import com.home.shine.tool.DataMaker;

/** (generated by shine) */
public class ShineResponseMaker extends DataMaker
{
	public ShineResponseMaker()
	{
		offSet=ShineResponseType.off;
		list=new CreateDataFunc[ShineResponseType.count-offSet];
		list[ShineResponseType.Ping-offSet]=this::createPingResponse;
		list[ShineResponseType.RePing-offSet]=this::createRePingResponse;
		list[ShineResponseType.SocketConnectSuccess-offSet]=this::createSocketConnectSuccessResponse;
		list[ShineResponseType.SocketReconnect-offSet]=this::createSocketReconnectResponse;
		list[ShineResponseType.SocketReconnectSuccess-offSet]=this::createSocketReconnectSuccessResponse;
		list[ShineResponseType.AckPing-offSet]=this::createAckPingResponse;
		list[ShineResponseType.SocketReconnectFailed-offSet]=this::createSocketReconnectFailedResponse;
		list[ShineResponseType.SocketClose-offSet]=this::createSocketCloseResponse;
	}
	
	private BaseData createPingResponse()
	{
		return new PingResponse();
	}
	
	private BaseData createRePingResponse()
	{
		return new RePingResponse();
	}
	
	private BaseData createSocketConnectSuccessResponse()
	{
		return new SocketConnectSuccessResponse();
	}
	
	private BaseData createSocketReconnectResponse()
	{
		return new SocketReconnectResponse();
	}
	
	private BaseData createSocketReconnectSuccessResponse()
	{
		return new SocketReconnectSuccessResponse();
	}
	
	private BaseData createAckPingResponse()
	{
		return new AckPingResponse();
	}
	
	private BaseData createSocketReconnectFailedResponse()
	{
		return new SocketReconnectFailedResponse();
	}
	
	private BaseData createSocketCloseResponse()
	{
		return new SocketCloseResponse();
	}
	
}
