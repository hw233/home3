package com.home.commonGame.net.response.social;
import com.home.commonGame.constlist.generate.GameResponseType;
import com.home.commonGame.net.base.GameResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 客户端查询角色消息(generated by shine) */
public class QueryPlayerResponse extends GameResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.QueryPlayer;
	
	/** 目标角色ID */
	public long playerID;
	
	/** 查询类型 */
	public int type;
	
	/** 查询参数 */
	public int[] args;
	
	public QueryPlayerResponse()
	{
		_dataID=GameResponseType.QueryPlayer;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "QueryPlayerResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.playerID=stream.readLong();
		
		this.type=stream.readInt();
		
		if(stream.readBoolean())
		{
			int argsLen=stream.readLen();
			if(this.args==null || this.args.length!=argsLen)
			{
				this.args=new int[argsLen];
			}
			int[] argsT=this.args;
			for(int argsI=0;argsI<argsLen;++argsI)
			{
				int argsV;
				argsV=stream.readInt();
				
				argsT[argsI]=argsV;
			}
		}
		else
		{
			this.args=null;
		}
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.playerID=stream.readLong();
		
		this.type=stream.readInt();
		
		if(stream.readBoolean())
		{
			int argsLen=stream.readLen();
			if(this.args==null || this.args.length!=argsLen)
			{
				this.args=new int[argsLen];
			}
			int[] argsT=this.args;
			for(int argsI=0;argsI<argsLen;++argsI)
			{
				int argsV;
				argsV=stream.readInt();
				
				argsT[argsI]=argsV;
			}
		}
		else
		{
			this.args=null;
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("args");
		writer.sb.append(':');
		writer.sb.append("Array<int>");
		if(this.args!=null)
		{
			int[] argsT=this.args;
			int argsLen=argsT.length;
			writer.sb.append('(');
			writer.sb.append(argsLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int argsI=0;argsI<argsLen;++argsI)
			{
				int argsV=argsT[argsI];
				writer.writeTabs();
				writer.sb.append(argsI);
				writer.sb.append(':');
				writer.sb.append(argsV);
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		me.social.clientQueryPlayer(playerID,type,args);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.playerID=0L;
		this.type=0;
		this.args=null;
	}
	
}
