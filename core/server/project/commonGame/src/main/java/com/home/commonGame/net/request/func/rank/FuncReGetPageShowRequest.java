package com.home.commonGame.net.request.func.rank;
import com.home.commonBase.data.social.rank.RankData;
import com.home.commonBase.data.system.KeyData;
import com.home.commonGame.constlist.generate.GameRequestType;
import com.home.commonGame.net.base.GameRequest;
import com.home.commonGame.net.request.func.base.FuncSRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.IntObjectMap;
import com.home.shine.support.collection.IntSet;
import com.home.shine.support.pool.DataPool;

/** 功能-回复查询每页排行(generated by shine) */
public class FuncReGetPageShowRequest extends FuncSRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.FuncReGetPageShow;
	
	/** 参数 */
	public int arg;
	
	/** 页码 */
	public int page;
	
	/** 数据组 */
	public IntObjectMap<KeyData> dic;
	
	/** 改变页码组 */
	public IntSet changePageSet;
	
	public FuncReGetPageShowRequest()
	{
		_dataID=GameRequestType.FuncReGetPageShow;
		setDontCopy();
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		IntObjectMap<KeyData> dicTemp=dic;
		if(dicTemp!=null)
		{
			this.dic=new IntObjectMap<KeyData>(KeyData[]::new,dicTemp.size());
			IntObjectMap<KeyData> dicT=this.dic;
			if(!dicTemp.isEmpty())
			{
				int dicKFreeValue=dicTemp.getFreeValue();
				int[] dicKKeys=dicTemp.getKeys();
				Object[] dicVValues=dicTemp.getValues();
				for(int dicKI=dicKKeys.length-1;dicKI>=0;--dicKI)
				{
					int dicK=dicKKeys[dicKI];
					if(dicK!=dicKFreeValue)
					{
						KeyData dicV=(KeyData)dicVValues[dicKI];
						int dicW;
						KeyData dicU;
						dicW=dicK;
						
						if(dicV!=null)
						{
							dicU=(KeyData)dicV.clone();
						}
						else
						{
							dicU=null;
						}
						
						dicT.put(dicW,dicU);
					}
				}
			}
		}
		else
		{
			this.dic=null;
		}
		
		IntSet changePageSetTemp=changePageSet;
		if(changePageSetTemp!=null)
		{
			this.changePageSet=new IntSet(changePageSetTemp.size());
			IntSet changePageSetT=this.changePageSet;
			if(!changePageSetTemp.isEmpty())
			{
				int changePageSetVFreeValue=changePageSetTemp.getFreeValue();
				int[] changePageSetVKeys=changePageSetTemp.getKeys();
				for(int changePageSetVI=changePageSetVKeys.length-1;changePageSetVI>=0;--changePageSetVI)
				{
					int changePageSetV=changePageSetVKeys[changePageSetVI];
					if(changePageSetV!=changePageSetVFreeValue)
					{
						int changePageSetU;
						changePageSetU=changePageSetV;
						
						changePageSetT.add(changePageSetU);
					}
				}
			}
		}
		else
		{
			this.changePageSet=null;
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncReGetPageShowRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("page");
		writer.sb.append(':');
		writer.sb.append(this.page);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("arg");
		writer.sb.append(':');
		writer.sb.append(this.arg);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("dic");
		writer.sb.append(':');
		writer.sb.append("Map<int,KeyData>");
		if(this.dic!=null)
		{
			writer.sb.append('(');
			writer.sb.append(this.dic.size());
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.dic.isEmpty())
			{
				int dicKFreeValue=this.dic.getFreeValue();
				int[] dicKKeys=this.dic.getKeys();
				Object[] dicVValues=this.dic.getValues();
				for(int dicKI=dicKKeys.length-1;dicKI>=0;--dicKI)
				{
					int dicK=dicKKeys[dicKI];
					if(dicK!=dicKFreeValue)
					{
						KeyData dicV=(KeyData)dicVValues[dicKI];
						writer.writeTabs();
						writer.sb.append(dicK);
						
						writer.sb.append(':');
						if(dicV!=null)
						{
							dicV.writeDataString(writer);
						}
						else
						{
							writer.sb.append("KeyData=null");
						}
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("changePageSet");
		writer.sb.append(':');
		writer.sb.append("Set<int>");
		if(this.changePageSet!=null)
		{
			writer.sb.append('(');
			writer.sb.append(this.changePageSet.size());
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.changePageSet.isEmpty())
			{
				int changePageSetVFreeValue=this.changePageSet.getFreeValue();
				int[] changePageSetVKeys=this.changePageSet.getKeys();
				for(int changePageSetVI=changePageSetVKeys.length-1;changePageSetVI>=0;--changePageSetVI)
				{
					int changePageSetV=changePageSetVKeys[changePageSetVI];
					if(changePageSetV!=changePageSetVFreeValue)
					{
						writer.writeTabs();
						writer.sb.append(changePageSetV);
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.page);
		
		stream.writeInt(this.arg);
		
		if(this.dic!=null)
		{
			stream.writeBoolean(true);
			stream.writeLen(this.dic.size());
			if(!this.dic.isEmpty())
			{
				int dicKFreeValue=this.dic.getFreeValue();
				int[] dicKKeys=this.dic.getKeys();
				Object[] dicVValues=this.dic.getValues();
				for(int dicKI=dicKKeys.length-1;dicKI>=0;--dicKI)
				{
					int dicK=dicKKeys[dicKI];
					if(dicK!=dicKFreeValue)
					{
						KeyData dicV=(KeyData)dicVValues[dicKI];
						stream.writeInt(dicK);
						
						if(dicV!=null)
						{
							stream.writeBoolean(true);
							stream.writeDataFullNotNull(dicV);
						}
						else
						{
							stream.writeBoolean(false);
						}
						
					}
				}
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.changePageSet!=null)
		{
			stream.writeBoolean(true);
			stream.writeLen(this.changePageSet.size());
			if(!this.changePageSet.isEmpty())
			{
				int changePageSetVFreeValue=this.changePageSet.getFreeValue();
				int[] changePageSetVKeys=this.changePageSet.getKeys();
				for(int changePageSetVI=changePageSetVKeys.length-1;changePageSetVI>=0;--changePageSetVI)
				{
					int changePageSetV=changePageSetVKeys[changePageSetVI];
					if(changePageSetV!=changePageSetVFreeValue)
					{
						stream.writeInt(changePageSetV);
						
					}
				}
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.page);
		
		stream.writeInt(this.arg);
		
		if(this.dic!=null)
		{
			stream.writeBoolean(true);
			stream.writeLen(this.dic.size());
			if(!this.dic.isEmpty())
			{
				int dicKFreeValue=this.dic.getFreeValue();
				int[] dicKKeys=this.dic.getKeys();
				Object[] dicVValues=this.dic.getValues();
				for(int dicKI=dicKKeys.length-1;dicKI>=0;--dicKI)
				{
					int dicK=dicKKeys[dicKI];
					if(dicK!=dicKFreeValue)
					{
						KeyData dicV=(KeyData)dicVValues[dicKI];
						stream.writeInt(dicK);
						
						if(dicV!=null)
						{
							stream.writeBoolean(true);
							stream.writeDataSimpleNotNull(dicV);
						}
						else
						{
							stream.writeBoolean(false);
						}
						
					}
				}
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.changePageSet!=null)
		{
			stream.writeBoolean(true);
			stream.writeLen(this.changePageSet.size());
			if(!this.changePageSet.isEmpty())
			{
				int changePageSetVFreeValue=this.changePageSet.getFreeValue();
				int[] changePageSetVKeys=this.changePageSet.getKeys();
				for(int changePageSetVI=changePageSetVKeys.length-1;changePageSetVI>=0;--changePageSetVI)
				{
					int changePageSetV=changePageSetVKeys[changePageSetVI];
					if(changePageSetV!=changePageSetVFreeValue)
					{
						stream.writeInt(changePageSetV);
						
					}
				}
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.page=0;
		this.arg=0;
		this.dic=null;
		this.changePageSet=null;
	}
	
	/** 创建实例 */
	public static FuncReGetPageShowRequest create(int funcID,int page,int arg,IntObjectMap<KeyData> dic,IntSet changePageSet)
	{
		FuncReGetPageShowRequest re=(FuncReGetPageShowRequest)BytesControl.createRequest(dataID);
		re.funcID=funcID;
		re.page=page;
		re.arg=arg;
		re.dic=dic;
		re.changePageSet=changePageSet;
		return re;
	}
	
}
