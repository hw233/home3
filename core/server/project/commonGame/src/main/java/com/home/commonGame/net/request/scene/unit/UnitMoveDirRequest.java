package com.home.commonGame.net.request.scene.unit;
import com.home.commonBase.data.scene.base.DirData;
import com.home.commonGame.constlist.generate.GameRequestType;
import com.home.commonGame.net.request.scene.base.SceneSRequest;
import com.home.commonGame.net.request.scene.base.UnitSRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 单位移动朝向消息(generated by shine) */
public class UnitMoveDirRequest extends UnitSRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.UnitMoveDir;
	
	/** 移动类型 */
	public int type;
	
	/** 实际移动朝向 */
	public DirData realMoveDir;
	
	/** 实际移动速度比率 */
	public int realMoveSpeedRatio;
	
	/** 目标朝向 */
	public DirData dir;
	
	public UnitMoveDirRequest()
	{
		_dataID=GameRequestType.UnitMoveDir;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		DirData dirTemp=dir;
		if(dirTemp!=null)
		{
			this.dir=new DirData();
			this.dir.copy(dirTemp);
		}
		else
		{
			this.dir=null;
			nullObjError("dir");
		}
		
		DirData realMoveDirTemp=realMoveDir;
		if(realMoveDirTemp!=null)
		{
			this.realMoveDir=new DirData();
			this.realMoveDir.copy(realMoveDirTemp);
		}
		else
		{
			this.realMoveDir=null;
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "UnitMoveDirRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("dir");
		writer.sb.append(':');
		if(this.dir!=null)
		{
			this.dir.writeDataString(writer);
		}
		else
		{
			writer.sb.append("DirData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("realMoveDir");
		writer.sb.append(':');
		if(this.realMoveDir!=null)
		{
			this.realMoveDir.writeDataString(writer);
		}
		else
		{
			writer.sb.append("DirData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("realMoveSpeedRatio");
		writer.sb.append(':');
		writer.sb.append(this.realMoveSpeedRatio);
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.type);
		
		if(this.dir!=null)
		{
			this.dir.writeBytesFull(stream);
		}
		else
		{
			nullObjError("dir");
		}
		
		if(this.realMoveDir!=null)
		{
			stream.writeBoolean(true);
			this.realMoveDir.writeBytesFull(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.writeInt(this.realMoveSpeedRatio);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.type);
		
		if(this.dir!=null)
		{
			this.dir.writeBytesSimple(stream);
		}
		else
		{
			nullObjError("dir");
		}
		
		if(this.realMoveDir!=null)
		{
			stream.writeBoolean(true);
			this.realMoveDir.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.writeInt(this.realMoveSpeedRatio);
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.type=0;
		this.dir.release(pool);
		this.dir=null;
		if(this.realMoveDir!=null)
		{
			this.realMoveDir.release(pool);
			this.realMoveDir=null;
		}
		this.realMoveSpeedRatio=0;
	}
	
	/** 创建实例 */
	public static UnitMoveDirRequest create(int instanceID,int type,DirData dir,DirData realMoveDir,int realMoveSpeedRatio)
	{
		UnitMoveDirRequest re=(UnitMoveDirRequest)BytesControl.createRequest(dataID);
		re.instanceID=instanceID;
		re.type=type;
		re.dir=dir;
		re.realMoveDir=realMoveDir;
		re.realMoveSpeedRatio=realMoveSpeedRatio;
		return re;
	}
	
}
