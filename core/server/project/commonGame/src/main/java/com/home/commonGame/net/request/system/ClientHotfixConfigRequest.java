package com.home.commonGame.net.request.system;
import com.home.commonGame.constlist.generate.GameRequestType;
import com.home.commonGame.net.base.GameRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 客户端热更配置消息(generated by shine) */
public class ClientHotfixConfigRequest extends GameRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.ClientHotfixConfig;
	
	/** 热更数据 */
	public byte[] bytes;
	
	public ClientHotfixConfigRequest()
	{
		_dataID=GameRequestType.ClientHotfixConfig;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		byte[] bytesTemp=bytes;
		if(bytesTemp!=null)
		{
			this.bytes=BytesControl.byteArrCopy(bytesTemp);
		}
		else
		{
			this.bytes=null;
			nullObjError("bytes");
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "ClientHotfixConfigRequest";
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.bytes!=null)
		{
			stream.writeLen(this.bytes.length);
			stream.writeByteArr(this.bytes);
		}
		else
		{
			nullObjError("bytes");
		}
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		if(this.bytes!=null)
		{
			stream.writeLen(this.bytes.length);
			stream.writeByteArr(this.bytes);
		}
		else
		{
			nullObjError("bytes");
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("bytes");
		writer.sb.append(':');
		writer.sb.append("Array<byte>");
		if(this.bytes!=null)
		{
			byte[] bytesT=this.bytes;
			int bytesLen=bytesT.length;
			writer.sb.append('(');
			writer.sb.append(bytesLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int bytesI=0;bytesI<bytesLen;++bytesI)
			{
				byte bytesV=bytesT[bytesI];
				writer.writeTabs();
				writer.sb.append(bytesI);
				writer.sb.append(':');
				writer.sb.append(bytesV);
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
	}
	
	/** 创建实例 */
	public static ClientHotfixConfigRequest create(byte[] bytes)
	{
		ClientHotfixConfigRequest re=(ClientHotfixConfigRequest)BytesControl.createRequest(dataID);
		re.bytes=bytes;
		return re;
	}
	
}
