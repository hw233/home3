package com.home.commonGame.net.serverRequest.game.system;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonGame.net.serverRequest.game.base.PlayerGameToGameServerRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** (generated by shine) */
public class SendGameRequestToPlayerServerRequest extends PlayerGameToGameServerRequest
{
	/** 消息ID */
	public int requestID;
	
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.SendGameRequestToPlayer;
	
	/** 数据 */
	public byte[] data;
	
	public SendGameRequestToPlayerServerRequest()
	{
		_dataID=ServerMessageType.SendGameRequestToPlayer;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		byte[] dataTemp=data;
		if(dataTemp!=null)
		{
			this.data=BytesControl.byteArrCopy(dataTemp);
		}
		else
		{
			this.data=null;
			nullObjError("data");
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "SendGameRequestToPlayerServerRequest";
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.requestID);
		
		if(this.data!=null)
		{
			stream.writeLen(this.data.length);
			stream.writeByteArr(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("requestID");
		writer.sb.append(':');
		writer.sb.append(this.requestID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("data");
		writer.sb.append(':');
		writer.sb.append("Array<byte>");
		if(this.data!=null)
		{
			byte[] dataT=this.data;
			int dataLen=dataT.length;
			writer.sb.append('(');
			writer.sb.append(dataLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int dataI=0;dataI<dataLen;++dataI)
			{
				byte dataV=dataT[dataI];
				writer.writeTabs();
				writer.sb.append(dataI);
				writer.sb.append(':');
				writer.sb.append(dataV);
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.requestID=0;
	}
	
	/** 创建实例 */
	public static SendGameRequestToPlayerServerRequest create(int requestID,byte[] data)
	{
		SendGameRequestToPlayerServerRequest re=(SendGameRequestToPlayerServerRequest)BytesControl.createRequest(dataID);
		re.requestID=requestID;
		re.data=data;
		return re;
	}
	
}
