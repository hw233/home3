package com.home.commonGame.net.response.system;
import com.home.commonGame.constlist.generate.GameResponseType;
import com.home.commonGame.net.base.GameResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.constlist.SLogType;
import com.home.shine.control.LogControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 发送客户端日志消息(generated by shine) */
public class SendClientLogResponse extends GameResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.SendClientLog;
	
	/** 类型 */
	public int type;
	
	/** 内容 */
	public String content="";
	
	public SendClientLogResponse()
	{
		_dataID=GameResponseType.SendClientLog;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "SendClientLogResponse";
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		me.system.onClientLog(type,content);
	}
	
	@Override
	protected void doPlayerNull()
	{
		LogControl.clientLog(SLogType.getClientMark(type)+"socketID:"+socket.id+' '+content);
		
		if(type==SLogType.Error)
		{
			LogControl.clientErrorLog("socketID:"+socket.id+' '+content);
		}
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.type=stream.readInt();
		
		this.content=stream.readUTF();
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.type=stream.readInt();
		
		this.content=stream.readUTF();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("content");
		writer.sb.append(':');
		writer.sb.append(this.content);
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.type=0;
		this.content="";
	}
	
}
