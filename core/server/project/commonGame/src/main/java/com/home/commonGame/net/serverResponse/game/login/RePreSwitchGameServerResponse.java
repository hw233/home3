package com.home.commonGame.net.serverResponse.game.login;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonGame.global.GameC;
import com.home.commonGame.net.serverResponse.game.base.GameToGameServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 回复游戏服角色切换回消息(generated by shine) */
public class RePreSwitchGameServerResponse extends GameToGameServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.RePreSwitchGame;
	
	/** 角色ID */
	public long playerID;
	
	/** 令牌 */
	public int token;
	
	/** 游戏服地址(因在每个game存储所有game服的地址端口成本更高,所以用每次推送实现) */
	public String host="";
	
	/** 游戏服端口 */
	public int port;
	
	public RePreSwitchGameServerResponse()
	{
		_dataID=ServerMessageType.RePreSwitchGame;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.playerID=stream.readLong();
		
		this.token=stream.readInt();
		
		this.host=stream.readUTF();
		
		this.port=stream.readInt();
		
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		GameC.gameSwitch.rePreSwitchToGame(playerID,token,host,port);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "RePreSwitchGameServerResponse";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("token");
		writer.sb.append(':');
		writer.sb.append(this.token);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("host");
		writer.sb.append(':');
		writer.sb.append(this.host);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("port");
		writer.sb.append(':');
		writer.sb.append(this.port);
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.playerID=0L;
		this.token=0;
		this.host="";
		this.port=0;
	}
	
}
