package com.home.commonGame.net.response.func.aution;
import com.home.commonBase.data.item.auction.AuctionQueryConditionData;
import com.home.commonGame.constlist.generate.GameResponseType;
import com.home.commonGame.net.response.func.base.FuncRResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 拍卖行查询(generated by shine) */
public class FuncAuctionQueryResponse extends FuncRResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.FuncAuctionQuery;
	
	/** 查询条件组(如为空则取上次条件组) */
	public AuctionQueryConditionData[] conditions;
	
	/** 结果页码 */
	public int page;
	
	public FuncAuctionQueryResponse()
	{
		_dataID=GameResponseType.FuncAuctionQuery;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncAuctionQueryResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		if(stream.readBoolean())
		{
			int conditionsLen=stream.readLen();
			if(this.conditions==null || this.conditions.length!=conditionsLen)
			{
				this.conditions=new AuctionQueryConditionData[conditionsLen];
			}
			AuctionQueryConditionData[] conditionsT=this.conditions;
			for(int conditionsI=0;conditionsI<conditionsLen;++conditionsI)
			{
				AuctionQueryConditionData conditionsV;
				if(stream.readBoolean())
				{
					BaseData conditionsVT=stream.readDataFullNotNull();
					if(conditionsVT!=null)
					{
						if(conditionsVT instanceof AuctionQueryConditionData)
						{
							conditionsV=(AuctionQueryConditionData)conditionsVT;
						}
						else
						{
							conditionsV=new AuctionQueryConditionData();
							if(!(conditionsVT.getClass().isAssignableFrom(AuctionQueryConditionData.class)))
							{
								stream.throwTypeReadError(AuctionQueryConditionData.class,conditionsVT.getClass());
							}
							conditionsV.shadowCopy(conditionsVT);
						}
					}
					else
					{
						conditionsV=null;
					}
				}
				else
				{
					conditionsV=null;
				}
				
				conditionsT[conditionsI]=conditionsV;
			}
		}
		else
		{
			this.conditions=null;
		}
		
		this.page=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		if(stream.readBoolean())
		{
			int conditionsLen=stream.readLen();
			if(this.conditions==null || this.conditions.length!=conditionsLen)
			{
				this.conditions=new AuctionQueryConditionData[conditionsLen];
			}
			AuctionQueryConditionData[] conditionsT=this.conditions;
			for(int conditionsI=0;conditionsI<conditionsLen;++conditionsI)
			{
				AuctionQueryConditionData conditionsV;
				if(stream.readBoolean())
				{
					conditionsV=(AuctionQueryConditionData)stream.readDataSimpleNotNull();
				}
				else
				{
					conditionsV=null;
				}
				
				conditionsT[conditionsI]=conditionsV;
			}
		}
		else
		{
			this.conditions=null;
		}
		
		this.page=stream.readInt();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("conditions");
		writer.sb.append(':');
		writer.sb.append("Array<AuctionQueryConditionData>");
		if(this.conditions!=null)
		{
			AuctionQueryConditionData[] conditionsT=this.conditions;
			int conditionsLen=conditionsT.length;
			writer.sb.append('(');
			writer.sb.append(conditionsLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int conditionsI=0;conditionsI<conditionsLen;++conditionsI)
			{
				AuctionQueryConditionData conditionsV=conditionsT[conditionsI];
				writer.writeTabs();
				writer.sb.append(conditionsI);
				writer.sb.append(':');
				if(conditionsV!=null)
				{
					conditionsV.writeDataString(writer);
				}
				else
				{
					writer.sb.append("AuctionQueryConditionData=null");
				}
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("page");
		writer.sb.append(':');
		writer.sb.append(this.page);
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		me.func.getAuctionTool(funcID).query(conditions,page);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.conditions=null;
		this.page=0;
	}
	
}
