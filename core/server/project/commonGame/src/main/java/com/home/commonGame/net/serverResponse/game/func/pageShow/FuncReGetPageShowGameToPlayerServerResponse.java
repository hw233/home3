package com.home.commonGame.net.serverResponse.game.func.pageShow;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonBase.data.social.rank.RankData;
import com.home.commonBase.data.system.KeyData;
import com.home.commonGame.net.serverResponse.game.func.base.FuncPlayerGameToGameServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.SList;
import com.home.shine.support.pool.DataPool;

/** (generated by shine) */
public class FuncReGetPageShowGameToPlayerServerResponse extends FuncPlayerGameToGameServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.FuncReGetPageShowGameToPlayer;
	
	public int arg;
	
	/** 页数 */
	public int page;
	
	/** 翻页列表 */
	public SList<KeyData> list;
	
	/** 可能有的排行数据 */
	public RankData rankData;
	
	public FuncReGetPageShowGameToPlayerServerResponse()
	{
		_dataID=ServerMessageType.FuncReGetPageShowGameToPlayer;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncReGetPageShowGameToPlayerServerResponse";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.page=stream.readInt();
		
		this.arg=stream.readInt();
		
		int listLen=stream.readLen();
		if(this.list!=null)
		{
			this.list.clear();
			this.list.ensureCapacity(listLen);
		}
		else
		{
			this.list=new SList<KeyData>(KeyData[]::new,listLen);
		}
		
		SList<KeyData> listT=this.list;
		for(int listI=listLen-1;listI>=0;--listI)
		{
			KeyData listV;
			listV=(KeyData)stream.readDataSimpleNotNull();
			
			listT.add(listV);
		}
		
		if(stream.readBoolean())
		{
			this.rankData=(RankData)stream.readDataSimpleNotNull();
		}
		else
		{
			this.rankData=null;
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("page");
		writer.sb.append(':');
		writer.sb.append(this.page);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("arg");
		writer.sb.append(':');
		writer.sb.append(this.arg);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("list");
		writer.sb.append(':');
		writer.sb.append("List<KeyData>");
		if(this.list!=null)
		{
			SList<KeyData> listT=this.list;
			int listLen=listT.size();
			writer.sb.append('(');
			writer.sb.append(listLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int listI=0;listI<listLen;++listI)
			{
				KeyData listV=listT.get(listI);
				writer.writeTabs();
				writer.sb.append(listI);
				writer.sb.append(':');
				if(listV!=null)
				{
					listV.writeDataString(writer);
				}
				else
				{
					writer.sb.append("KeyData=null");
				}
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("rankData");
		writer.sb.append(':');
		if(this.rankData!=null)
		{
			this.rankData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("RankData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		me.func.getPageShowTool(funcID).onReceive(page,arg,list,rankData);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.page=0;
		this.arg=0;
		this.list=null;
		this.rankData=null;
	}
	
}
