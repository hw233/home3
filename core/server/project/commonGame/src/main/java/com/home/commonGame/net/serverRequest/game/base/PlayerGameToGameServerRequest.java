package com.home.commonGame.net.serverRequest.game.base;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonGame.net.serverRequest.game.base.GameToGameServerRequest;
import com.home.commonGame.net.serverRequest.game.system.PlayerToGameTransGameToGameServerRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;

/** 角色的game2game传输消息(switching时,消息阻塞)(generated by shine) */
public class PlayerGameToGameServerRequest extends GameToGameServerRequest
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.PlayerGameToGame;
	
	public PlayerGameToGameServerRequest()
	{
		_dataID=ServerMessageType.PlayerGameToGame;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	@Override
	protected void doWriteToStream(BytesWriteStream stream)
	{
		//直接协议号和内容
		stream.natureWriteUnsignedShort(_dataID);
		doWriteBytesSimple(stream);
	}
	
	/** 发送给玩家(主线程用) */
	public void sendToPlayer(long playerID)
	{
		preSend();
		
		PlayerToGameTransGameToGameServerRequest cr=PlayerToGameTransGameToGameServerRequest.create();
		cr.setData(playerID,this);
		cr.sendToSourceGameByLogicID(playerID);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "PlayerGameToGameServerRequest";
	}
	
	/** 创建实例 */
	public static PlayerGameToGameServerRequest create()
	{
		PlayerGameToGameServerRequest re=(PlayerGameToGameServerRequest)BytesControl.createRequest(dataID);
		return re;
	}
	
}
