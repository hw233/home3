package com.home.commonGame.net.response.scene.unit;
import com.home.commonBase.data.scene.fight.SkillTargetData;
import com.home.commonBase.scene.base.Unit;
import com.home.commonGame.constlist.generate.GameResponseType;
import com.home.commonGame.net.response.scene.base.CUnitRResponse;
import com.home.commonGame.net.response.scene.base.SceneRResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 客户端控制单位子弹命中(generated by shine) */
public class CUnitBulletHitResponse extends CUnitRResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.CUnitBulletHit;
	
	/** 子弹ID */
	public int bulletID;
	
	/** 子弹等级 */
	public int bulletLevel;
	
	/** 目标 */
	public SkillTargetData target;
	
	public CUnitBulletHitResponse()
	{
		_dataID=GameResponseType.CUnitBulletHit;
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		unit.fight.clientBulletHit(bulletID,bulletLevel,target);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "CUnitBulletHitResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.bulletID=stream.readInt();
		
		this.bulletLevel=stream.readInt();
		
		BaseData targetT=stream.readDataFullNotNull();
		if(targetT!=null)
		{
			if(targetT instanceof SkillTargetData)
			{
				this.target=(SkillTargetData)targetT;
			}
			else
			{
				this.target=new SkillTargetData();
				if(!(targetT.getClass().isAssignableFrom(SkillTargetData.class)))
				{
					stream.throwTypeReadError(SkillTargetData.class,targetT.getClass());
				}
				this.target.shadowCopy(targetT);
			}
		}
		else
		{
			this.target=null;
		}
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.bulletID=stream.readInt();
		
		this.bulletLevel=stream.readInt();
		
		this.target=(SkillTargetData)stream.readDataSimpleNotNull();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("bulletID");
		writer.sb.append(':');
		writer.sb.append(this.bulletID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("bulletLevel");
		writer.sb.append(':');
		writer.sb.append(this.bulletLevel);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("target");
		writer.sb.append(':');
		if(this.target!=null)
		{
			this.target.writeDataString(writer);
		}
		else
		{
			writer.sb.append("SkillTargetData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.bulletID=0;
		this.bulletLevel=0;
		this.target=null;
	}
	
}
