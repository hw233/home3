package com.home.commonGame.net.serverResponse.game.login;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonBase.data.login.PlayerSwitchGameData;
import com.home.commonBase.data.system.PlayerPrimaryKeyData;
import com.home.commonBase.part.player.list.PlayerListData;
import com.home.commonGame.global.GameC;
import com.home.commonGame.net.serverResponse.game.base.GameToGameServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 准备切换游戏服消息(generated by shine) */
public class PreSwitchGameServerResponse extends GameToGameServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.PreSwitchGame;
	
	/** 角色主键数据 */
	public PlayerPrimaryKeyData keyData;
	
	/** 角色列表数据 */
	public BaseData listData;
	
	/** 切换数据 */
	public PlayerSwitchGameData switchData;
	
	public PreSwitchGameServerResponse()
	{
		_dataID=ServerMessageType.PreSwitchGame;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.keyData=new PlayerPrimaryKeyData();
		this.keyData.readBytesSimple(stream);
		
		this.listData=(BaseData)stream.readDataSimpleNotNull();
		
		this.switchData=(PlayerSwitchGameData)stream.readDataSimpleNotNull();
		
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		GameC.gameSwitch.preSwitchGameReceive(fromGameID,keyData,(PlayerListData)listData,switchData);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "PreSwitchGameServerResponse";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("keyData");
		writer.sb.append(':');
		if(this.keyData!=null)
		{
			this.keyData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("PlayerPrimaryKeyData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("listData");
		writer.sb.append(':');
		if(this.listData!=null)
		{
			this.listData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("BaseData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("switchData");
		writer.sb.append(':');
		if(this.switchData!=null)
		{
			this.switchData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("PlayerSwitchGameData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.keyData=null;
		this.listData=null;
		this.switchData=null;
	}
	
}
