package com.home.commonGame.net.response.login;
import com.home.commonGame.constlist.generate.GameResponseType;
import com.home.commonGame.net.response.base.LoginResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 角色重连消息(generated by shine) */
public class PlayerReconnectLoginResponse extends LoginResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.PlayerReconnectLogin;
	
	/** 角色ID */
	public long playerID;
	
	/** 令牌 */
	public int token;
	
	/** c层msg版本号 */
	public int cMsgVersion;
	
	/** g层msg版本号 */
	public int gMsgVersion;
	
	/** 资源版本号 */
	public int resourceVersion;
	
	public PlayerReconnectLoginResponse()
	{
		_dataID=GameResponseType.PlayerReconnectLogin;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "PlayerReconnectLoginResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.playerID=stream.readLong();
		
		this.token=stream.readInt();
		
		this.cMsgVersion=stream.readInt();
		
		this.gMsgVersion=stream.readInt();
		
		this.resourceVersion=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.playerID=stream.readLong();
		
		this.token=stream.readInt();
		
		this.cMsgVersion=stream.readInt();
		
		this.gMsgVersion=stream.readInt();
		
		this.resourceVersion=stream.readInt();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("token");
		writer.sb.append(':');
		writer.sb.append(this.token);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("cMsgVersion");
		writer.sb.append(':');
		writer.sb.append(this.cMsgVersion);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gMsgVersion");
		writer.sb.append(':');
		writer.sb.append(this.gMsgVersion);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("resourceVersion");
		writer.sb.append(':');
		writer.sb.append(this.resourceVersion);
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.playerID=0L;
		this.token=0;
		this.cMsgVersion=0;
		this.gMsgVersion=0;
		this.resourceVersion=0;
	}
	
}
