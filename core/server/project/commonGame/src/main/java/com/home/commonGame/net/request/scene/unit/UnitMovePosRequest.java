package com.home.commonGame.net.request.scene.unit;
import com.home.commonBase.data.scene.base.PosData;
import com.home.commonGame.constlist.generate.GameRequestType;
import com.home.commonGame.net.request.scene.base.SceneSRequest;
import com.home.commonGame.net.request.scene.base.UnitSRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 单位移动位置(generated by shine) */
public class UnitMovePosRequest extends UnitSRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.UnitMovePos;
	
	/** 移动类型 */
	public int type;
	
	/** 服务器首点移动时间(同步用) */
	public int moveTime;
	
	/** 目标位置 */
	public PosData targetPos;
	
	public UnitMovePosRequest()
	{
		_dataID=GameRequestType.UnitMovePos;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		PosData targetPosTemp=targetPos;
		if(targetPosTemp!=null)
		{
			this.targetPos=new PosData();
			this.targetPos.copy(targetPosTemp);
		}
		else
		{
			this.targetPos=null;
			nullObjError("targetPos");
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "UnitMovePosRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("targetPos");
		writer.sb.append(':');
		if(this.targetPos!=null)
		{
			this.targetPos.writeDataString(writer);
		}
		else
		{
			writer.sb.append("PosData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("moveTime");
		writer.sb.append(':');
		writer.sb.append(this.moveTime);
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.type);
		
		if(this.targetPos!=null)
		{
			this.targetPos.writeBytesFull(stream);
		}
		else
		{
			nullObjError("targetPos");
		}
		
		stream.writeInt(this.moveTime);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.type);
		
		if(this.targetPos!=null)
		{
			this.targetPos.writeBytesSimple(stream);
		}
		else
		{
			nullObjError("targetPos");
		}
		
		stream.writeInt(this.moveTime);
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.type=0;
		this.targetPos.release(pool);
		this.targetPos=null;
		this.moveTime=0;
	}
	
	/** 创建实例 */
	public static UnitMovePosRequest create(int instanceID,int type,PosData targetPos,int moveTime)
	{
		UnitMovePosRequest re=(UnitMovePosRequest)BytesControl.createRequest(dataID);
		re.instanceID=instanceID;
		re.type=type;
		re.targetPos=targetPos;
		re.moveTime=moveTime;
		return re;
	}
	
}
