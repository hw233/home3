package com.home.commonGame.net.request.func.item;
import com.home.commonBase.data.item.ItemData;
import com.home.commonGame.constlist.generate.GameRequestType;
import com.home.commonGame.net.request.func.base.FuncSRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 推送添加单个物品(generated by shine) */
public class FuncAddOneItemRequest extends FuncSRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.FuncAddOneItem;
	
	/** 途径 */
	public int way;
	
	/** 序号 */
	public int index;
	
	/** 物品数据 */
	public ItemData item;
	
	public FuncAddOneItemRequest()
	{
		_dataID=GameRequestType.FuncAddOneItem;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		ItemData itemTemp=item;
		if(itemTemp!=null)
		{
			this.item=(ItemData)itemTemp.clone();
		}
		else
		{
			this.item=null;
			nullObjError("item");
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncAddOneItemRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("way");
		writer.sb.append(':');
		writer.sb.append(this.way);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("index");
		writer.sb.append(':');
		writer.sb.append(this.index);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("item");
		writer.sb.append(':');
		if(this.item!=null)
		{
			this.item.writeDataString(writer);
		}
		else
		{
			writer.sb.append("ItemData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.way);
		
		stream.writeInt(this.index);
		
		if(this.item!=null)
		{
			stream.writeDataFullNotNull(this.item);
		}
		else
		{
			nullObjError("item");
		}
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.way);
		
		stream.writeInt(this.index);
		
		if(this.item!=null)
		{
			stream.writeDataSimpleNotNull(this.item);
		}
		else
		{
			nullObjError("item");
		}
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.way=0;
		this.index=0;
		this.item.release(pool);
		this.item=null;
	}
	
	/** 创建实例 */
	public static FuncAddOneItemRequest create(int funcID,int way,int index,ItemData item)
	{
		FuncAddOneItemRequest re=(FuncAddOneItemRequest)BytesControl.createRequest(dataID);
		re.funcID=funcID;
		re.way=way;
		re.index=index;
		re.item=item;
		return re;
	}
	
}
