package com.home.commonGame.net.response.func.roleGroup;
import com.home.commonGame.constlist.generate.GameResponseType;
import com.home.commonGame.net.response.func.base.FuncRResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 处理邀请玩家群消息(generated by shine) */
public class FuncHandleInviteRoleGroupResponse extends FuncRResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.FuncHandleInviteRoleGroup;
	
	/** 群id */
	public long groupID;
	
	/** 邀请者 */
	public long invitor;
	
	/** 结果 */
	public int result;
	
	public FuncHandleInviteRoleGroupResponse()
	{
		_dataID=GameResponseType.FuncHandleInviteRoleGroup;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncHandleInviteRoleGroupResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.invitor=stream.readLong();
		
		this.groupID=stream.readLong();
		
		this.result=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.invitor=stream.readLong();
		
		this.groupID=stream.readLong();
		
		this.result=stream.readInt();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("invitor");
		writer.sb.append(':');
		writer.sb.append(this.invitor);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("groupID");
		writer.sb.append(':');
		writer.sb.append(this.groupID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("result");
		writer.sb.append(':');
		writer.sb.append(this.result);
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		me.func.getRoleGroupTool(funcID).handleInvite(invitor,groupID,result);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.invitor=0L;
		this.groupID=0L;
		this.result=0;
	}
	
}
