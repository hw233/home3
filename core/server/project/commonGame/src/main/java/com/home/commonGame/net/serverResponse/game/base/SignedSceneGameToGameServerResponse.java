package com.home.commonGame.net.serverResponse.game.base;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonGame.control.LogicExecutor;
import com.home.commonGame.global.GameC;
import com.home.commonGame.net.serverResponse.game.base.GameToGameServerResponse;
import com.home.commonGame.scene.base.GameScene;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 指定场景消息(generated by shine) */
public class SignedSceneGameToGameServerResponse extends GameToGameServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.SignedSceneGameToGame;
	
	/** 执行器号 */
	public int executorIndex=-1;
	
	/** 实例ID */
	public int instanceID=-1;
	
	/** 场景 */
	protected GameScene scene;
	
	public SignedSceneGameToGameServerResponse()
	{
		_dataID=ServerMessageType.SignedSceneGameToGame;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "SignedSceneGameToGameServerResponse";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.executorIndex=stream.readInt();
		
		this.instanceID=stream.readInt();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("executorIndex");
		writer.sb.append(':');
		writer.sb.append(this.executorIndex);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("instanceID");
		writer.sb.append(':');
		writer.sb.append(this.instanceID);
		
		writer.writeEnter();
	}
	
	@Override
	protected void preExecute()
	{
		LogicExecutor executor=GameC.main.getExecutor(executorIndex);
		
		executor.addFunc(()->
		{
			if((scene=executor.getScene(instanceID))!=null)
			{
				doExecute();
			}
		});
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.executorIndex=0;
		this.instanceID=0;
	}
	
}
