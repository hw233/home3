package com.home.commonGame.net.serverResponse.game.func.auction;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonBase.data.item.auction.AuctionBuyItemData;
import com.home.commonBase.data.role.RoleSimpleShowData;
import com.home.commonGame.global.GameC;
import com.home.commonGame.net.serverResponse.game.func.base.FuncToGameServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.constlist.ThreadType;
import com.home.shine.control.ThreadControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 拍卖行购买物品到源服(generated by shine) */
public class FuncSendAuctionBuyItemToSourceGameServerResponse extends FuncToGameServerResponse
{
	/** 玩家数据 */
	public RoleSimpleShowData roleData;
	
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.FuncSendAuctionBuyItemToSourceGame;
	
	public AuctionBuyItemData data;
	
	public FuncSendAuctionBuyItemToSourceGameServerResponse()
	{
		_dataID=ServerMessageType.FuncSendAuctionBuyItemToSourceGame;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncSendAuctionBuyItemToSourceGameServerResponse";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.roleData=(RoleSimpleShowData)stream.readDataSimpleNotNull();
		
		this.data=(AuctionBuyItemData)stream.readDataSimpleNotNull();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("roleData");
		writer.sb.append(':');
		if(this.roleData!=null)
		{
			this.roleData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("RoleSimpleShowData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("data");
		writer.sb.append(':');
		if(this.data!=null)
		{
			this.data.writeDataString(writer);
		}
		else
		{
			writer.sb.append("AuctionBuyItemData=null");
		}
		
		writer.writeEnter();
	}
	
	@Override
	public void dispatch()
	{
		_threadType=ThreadType.Pool;
		_poolIndex=(int)data.instanceID & ThreadControl.poolThreadNumMark;
		doDispatch();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		GameC.global.func.getAuctionTool(funcID).getExecutor(_poolIndex).buyItem(roleData,data);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.roleData=null;
		this.data=null;
	}
	
}
