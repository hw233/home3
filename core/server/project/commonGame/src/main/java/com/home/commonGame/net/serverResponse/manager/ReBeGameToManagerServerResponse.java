package com.home.commonGame.net.serverResponse.manager;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonBase.data.login.GameInitServerData;
import com.home.commonGame.global.GameC;
import com.home.commonGame.net.serverResponse.manager.base.ManagerToGameServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.constlist.SocketType;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** (generated by shine) */
public class ReBeGameToManagerServerResponse extends ManagerToGameServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.ReBeGameToManager;
	
	/** 初始化数据 */
	public GameInitServerData initData;
	
	public ReBeGameToManagerServerResponse()
	{
		_dataID=ServerMessageType.ReBeGameToManager;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "ReBeGameToManagerServerResponse";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		if(stream.readBoolean())
		{
			this.initData=(GameInitServerData)stream.readDataSimpleNotNull();
		}
		else
		{
			this.initData=null;
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("initData");
		writer.sb.append(':');
		if(this.initData!=null)
		{
			this.initData.writeDataString(writer);
		}
		else
		{
			writer.sb.append("GameInitServerData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		GameC.server.reBack(SocketType.Manager);
		
		if(initData!=null)
		{
			GameC.main.setInitData(initData);
			GameC.server.onConnectManagerOver();
		}
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.initData=null;
	}
	
}
