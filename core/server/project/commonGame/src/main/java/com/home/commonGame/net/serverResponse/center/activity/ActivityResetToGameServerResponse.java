package com.home.commonGame.net.serverResponse.center.activity;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonGame.global.GameC;
import com.home.commonGame.net.serverResponse.center.base.CenterToGameServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 活动重置(generated by shine) */
public class ActivityResetToGameServerResponse extends CenterToGameServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.ActivityResetToGame;
	
	public int id;
	
	/** 是否到时间自然触发 */
	public boolean atTime;
	
	/** 下个重置时间 */
	public long nextTime;
	
	public ActivityResetToGameServerResponse()
	{
		_dataID=ServerMessageType.ActivityResetToGame;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.nextTime=stream.readLong();
		
		this.atTime=stream.readBoolean();
		
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		GameC.global.activity.onActivityResetFromCenter(id,nextTime,atTime);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "ActivityResetToGameServerResponse";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("id");
		writer.sb.append(':');
		writer.sb.append(this.id);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("nextTime");
		writer.sb.append(':');
		writer.sb.append(this.nextTime);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("atTime");
		writer.sb.append(':');
		writer.sb.append(this.atTime);
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.id=0;
		this.nextTime=0L;
		this.atTime=false;
	}
	
}
