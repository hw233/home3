package com.home.commonGame.net.request.item;
import com.home.commonBase.data.item.ItemData;
import com.home.commonGame.constlist.generate.GameRequestType;
import com.home.commonGame.net.base.GameRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.SList;
import com.home.shine.support.pool.DataPool;

/** 添加奖励消息(generated by shine) */
public class AddRewardRequest extends GameRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.AddReward;
	
	/** 调用方式 */
	public int way;
	
	/** 等级 */
	public int level;
	
	/** 奖励次数 */
	public int num;
	
	/** 奖励ID */
	public int rewardID;
	
	/** 随机物品组结果 */
	public SList<ItemData> randomItemList;
	
	public AddRewardRequest()
	{
		_dataID=GameRequestType.AddReward;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		SList<ItemData> randomItemListTemp=randomItemList;
		if(randomItemListTemp!=null)
		{
			this.randomItemList=new SList<ItemData>(ItemData[]::new,randomItemListTemp.size());
			SList<ItemData> randomItemListT=this.randomItemList;
			if(!randomItemListTemp.isEmpty())
			{
				Object[] randomItemListVValues=randomItemListTemp.getValues();
				for(int randomItemListVI=0,randomItemListVLen=randomItemListTemp.length();randomItemListVI<randomItemListVLen;++randomItemListVI)
				{
					ItemData randomItemListV=(ItemData)randomItemListVValues[randomItemListVI];
					ItemData randomItemListU;
					if(randomItemListV!=null)
					{
						randomItemListU=(ItemData)randomItemListV.clone();
					}
					else
					{
						randomItemListU=null;
					}
					
					randomItemListT.add(randomItemListU);
				}
			}
		}
		else
		{
			this.randomItemList=null;
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "AddRewardRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("way");
		writer.sb.append(':');
		writer.sb.append(this.way);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("rewardID");
		writer.sb.append(':');
		writer.sb.append(this.rewardID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("level");
		writer.sb.append(':');
		writer.sb.append(this.level);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("num");
		writer.sb.append(':');
		writer.sb.append(this.num);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("randomItemList");
		writer.sb.append(':');
		writer.sb.append("List<ItemData>");
		if(this.randomItemList!=null)
		{
			SList<ItemData> randomItemListT=this.randomItemList;
			int randomItemListLen=randomItemListT.size();
			writer.sb.append('(');
			writer.sb.append(randomItemListLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int randomItemListI=0;randomItemListI<randomItemListLen;++randomItemListI)
			{
				ItemData randomItemListV=randomItemListT.get(randomItemListI);
				writer.writeTabs();
				writer.sb.append(randomItemListI);
				writer.sb.append(':');
				if(randomItemListV!=null)
				{
					randomItemListV.writeDataString(writer);
				}
				else
				{
					writer.sb.append("ItemData=null");
				}
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.way);
		
		stream.writeInt(this.rewardID);
		
		stream.writeInt(this.level);
		
		stream.writeInt(this.num);
		
		if(this.randomItemList!=null)
		{
			stream.writeBoolean(true);
			stream.writeLen(this.randomItemList.size());
			if(!this.randomItemList.isEmpty())
			{
				Object[] randomItemListVValues=this.randomItemList.getValues();
				for(int randomItemListVI=0,randomItemListVLen=this.randomItemList.length();randomItemListVI<randomItemListVLen;++randomItemListVI)
				{
					ItemData randomItemListV=(ItemData)randomItemListVValues[randomItemListVI];
					if(randomItemListV!=null)
					{
						stream.writeBoolean(true);
						stream.writeDataFullNotNull(randomItemListV);
					}
					else
					{
						stream.writeBoolean(false);
					}
					
				}
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.way);
		
		stream.writeInt(this.rewardID);
		
		stream.writeInt(this.level);
		
		stream.writeInt(this.num);
		
		if(this.randomItemList!=null)
		{
			stream.writeBoolean(true);
			stream.writeLen(this.randomItemList.size());
			if(!this.randomItemList.isEmpty())
			{
				Object[] randomItemListVValues=this.randomItemList.getValues();
				for(int randomItemListVI=0,randomItemListVLen=this.randomItemList.length();randomItemListVI<randomItemListVLen;++randomItemListVI)
				{
					ItemData randomItemListV=(ItemData)randomItemListVValues[randomItemListVI];
					if(randomItemListV!=null)
					{
						stream.writeBoolean(true);
						stream.writeDataSimpleNotNull(randomItemListV);
					}
					else
					{
						stream.writeBoolean(false);
					}
					
				}
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.way=0;
		this.rewardID=0;
		this.level=0;
		this.num=0;
		if(this.randomItemList!=null)
		{
			if(!this.randomItemList.isEmpty())
			{
				Object[] randomItemListVValues=this.randomItemList.getValues();
				for(int randomItemListVI=0,randomItemListVLen=this.randomItemList.length();randomItemListVI<randomItemListVLen;++randomItemListVI)
				{
					ItemData randomItemListV=(ItemData)randomItemListVValues[randomItemListVI];
					if(randomItemListV!=null)
					{
						randomItemListV.release(pool);
						randomItemListV=null;
					}
					randomItemListVValues[randomItemListVI]=null;
				}
			}
			this.randomItemList.justClearSize();
		}
	}
	
	/** 创建实例 */
	public static AddRewardRequest create(int way,int rewardID,int level,int num,SList<ItemData> randomItemList)
	{
		AddRewardRequest re=(AddRewardRequest)BytesControl.createRequest(dataID);
		re.way=way;
		re.rewardID=rewardID;
		re.level=level;
		re.num=num;
		re.randomItemList=randomItemList;
		return re;
	}
	
}
