package com.home.commonGame.net.response.func.rank.subsection;
import com.home.commonGame.constlist.generate.GameResponseType;
import com.home.commonGame.global.GameC;
import com.home.commonGame.net.response.func.base.FuncRResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 获取每页数据(主线程)(generated by shine) */
public class FuncGetSubsectionPageShowResponse extends FuncRResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.FuncGetSubsectionPageShow;
	
	/** 大组index */
	public int subsectionIndex;
	
	/** 小组index */
	public int subsectionSubIndex;
	
	/** 页码 */
	public int page;
	
	/** 参数(默认0) */
	public int arg;
	
	public FuncGetSubsectionPageShowResponse()
	{
		_dataID=GameResponseType.FuncGetSubsectionPageShow;
		setUseMainThread();
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncGetSubsectionPageShowResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.subsectionIndex=stream.readInt();
		
		this.subsectionSubIndex=stream.readInt();
		
		this.page=stream.readInt();
		
		this.arg=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.subsectionIndex=stream.readInt();
		
		this.subsectionSubIndex=stream.readInt();
		
		this.page=stream.readInt();
		
		this.arg=stream.readInt();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("subsectionIndex");
		writer.sb.append(':');
		writer.sb.append(this.subsectionIndex);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("subsectionSubIndex");
		writer.sb.append(':');
		writer.sb.append(this.subsectionSubIndex);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("page");
		writer.sb.append(':');
		writer.sb.append(this.page);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("arg");
		writer.sb.append(':');
		writer.sb.append(this.arg);
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		GameC.global.func.getGameSubsectionPageShowTool(funcID).getPageShow(me,subsectionIndex,subsectionSubIndex,page,arg);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.subsectionIndex=0;
		this.subsectionSubIndex=0;
		this.page=0;
		this.arg=0;
	}
	
}
