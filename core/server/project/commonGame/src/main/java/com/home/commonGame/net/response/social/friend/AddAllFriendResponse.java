package com.home.commonGame.net.response.social.friend;
import com.home.commonBase.constlist.generate.FunctionType;
import com.home.commonGame.constlist.generate.GameResponseType;
import com.home.commonGame.net.base.GameResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.LongList;
import com.home.shine.support.pool.DataPool;

/** 添加所有好友消息(generated by shine) */
public class AddAllFriendResponse extends GameResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.AddAllFriend;
	
	/** 角色ID */
	public LongList playerIDList;
	
	/** 添加方式(g层定义) */
	public int type;
	
	public AddAllFriendResponse()
	{
		_dataID=GameResponseType.AddAllFriend;
		setNeedFunctionID(FunctionType.Friend);
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		for(int i=0;i<playerIDList.length();++i)
		{
			me.friend.addFriend(playerIDList.get(i),type);
		}
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "AddAllFriendResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		int playerIDListLen=stream.readLen();
		if(this.playerIDList!=null)
		{
			this.playerIDList.clear();
			this.playerIDList.ensureCapacity(playerIDListLen);
		}
		else
		{
			this.playerIDList=new LongList(playerIDListLen);
		}
		
		LongList playerIDListT=this.playerIDList;
		for(int playerIDListI=playerIDListLen-1;playerIDListI>=0;--playerIDListI)
		{
			long playerIDListV;
			playerIDListV=stream.readLong();
			
			playerIDListT.add(playerIDListV);
		}
		
		this.type=stream.readInt();
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		int playerIDListLen=stream.readLen();
		if(this.playerIDList!=null)
		{
			this.playerIDList.clear();
			this.playerIDList.ensureCapacity(playerIDListLen);
		}
		else
		{
			this.playerIDList=new LongList(playerIDListLen);
		}
		
		LongList playerIDListT=this.playerIDList;
		for(int playerIDListI=playerIDListLen-1;playerIDListI>=0;--playerIDListI)
		{
			long playerIDListV;
			playerIDListV=stream.readLong();
			
			playerIDListT.add(playerIDListV);
		}
		
		this.type=stream.readInt();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("playerIDList");
		writer.sb.append(':');
		writer.sb.append("List<long>");
		if(this.playerIDList!=null)
		{
			LongList playerIDListT=this.playerIDList;
			int playerIDListLen=playerIDListT.size();
			writer.sb.append('(');
			writer.sb.append(playerIDListLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int playerIDListI=0;playerIDListI<playerIDListLen;++playerIDListI)
			{
				long playerIDListV=playerIDListT.get(playerIDListI);
				writer.writeTabs();
				writer.sb.append(playerIDListI);
				writer.sb.append(':');
				writer.sb.append(playerIDListV);
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.playerIDList=null;
		this.type=0;
	}
	
}
