package com.home.commonGame.net.serverResponse.center.func.rank.subsection;
import com.home.commonBase.constlist.generate.ServerMessageType;
import com.home.commonBase.data.social.rank.RankData;
import com.home.commonGame.global.GameC;
import com.home.commonGame.net.serverResponse.center.base.CenterToGameServerResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 推送增加排行榜数据消息(generated by shine) */
public class FuncAddSubsectionRankToGameServerResponse extends CenterToGameServerResponse
{
	/** 数据类型ID */
	public static final int dataID=ServerMessageType.FuncAddSubsectionRankToGame;
	
	/** 小组index */
	public int subsectionSubIndex;
	
	/** 大组index */
	public int subsectionIndex;
	
	/** 功能ID */
	public int funcID;
	
	/** 排行数据 */
	public RankData data;
	
	public FuncAddSubsectionRankToGameServerResponse()
	{
		_dataID=ServerMessageType.FuncAddSubsectionRankToGame;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncAddSubsectionRankToGameServerResponse";
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.funcID=stream.readInt();
		
		this.subsectionIndex=stream.readInt();
		
		this.subsectionSubIndex=stream.readInt();
		
		this.data=(RankData)stream.readDataSimpleNotNull();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("funcID");
		writer.sb.append(':');
		writer.sb.append(this.funcID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("subsectionIndex");
		writer.sb.append(':');
		writer.sb.append(this.subsectionIndex);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("subsectionSubIndex");
		writer.sb.append(':');
		writer.sb.append(this.subsectionSubIndex);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("data");
		writer.sb.append(':');
		if(this.data!=null)
		{
			this.data.writeDataString(writer);
		}
		else
		{
			writer.sb.append("RankData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		GameC.global.func.getSubsectionRankToolForCenter(funcID).onAddRankFromCenter(subsectionIndex,subsectionSubIndex,data);
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.funcID=0;
		this.subsectionIndex=0;
		this.subsectionSubIndex=0;
		this.data=null;
	}
	
}
