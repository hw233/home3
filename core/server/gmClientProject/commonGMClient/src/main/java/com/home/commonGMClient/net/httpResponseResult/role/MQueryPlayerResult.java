package com.home.commonGMClient.net.httpResponseResult.role;
import com.home.commonBase.data.system.PlayerPrimaryKeyData;
import com.home.commonBase.data.system.PlayerWorkListData;
import com.home.commonGMClient.constlist.generate.ManagerHttpResponseResultType;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;

/** (generated by shine) */
public class MQueryPlayerResult extends BaseData
{
	/** 数据类型ID */
	public static final int dataID=ManagerHttpResponseResultType.MQueryPlayer;
	
	/** key数据 */
	public PlayerPrimaryKeyData key;
	
	/** 主数据 */
	public BaseData data;
	
	/** 离线事务数据 */
	public PlayerWorkListData workList;
	
	public MQueryPlayerResult()
	{
		_dataID=ManagerHttpResponseResultType.MQueryPlayer;
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		if(stream.readBoolean())
		{
			this.key=new PlayerPrimaryKeyData();
			this.key.readBytesSimple(stream);
		}
		else
		{
			this.key=null;
		}
		
		if(stream.readBoolean())
		{
			this.data=(BaseData)stream.readDataSimpleNotNull();
		}
		else
		{
			this.data=null;
		}
		
		if(stream.readBoolean())
		{
			this.workList=new PlayerWorkListData();
			this.workList.readBytesSimple(stream);
		}
		else
		{
			this.workList=null;
		}
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.key!=null)
		{
			stream.writeBoolean(true);
			this.key.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.data!=null)
		{
			stream.writeBoolean(true);
			stream.writeDataSimpleNotNull(this.data);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.workList!=null)
		{
			stream.writeBoolean(true);
			this.workList.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
	}
	
}
