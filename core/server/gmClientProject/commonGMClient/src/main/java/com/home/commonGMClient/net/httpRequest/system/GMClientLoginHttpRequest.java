package com.home.commonGMClient.net.httpRequest.system;
import com.home.commonGMClient.constlist.generate.ManagerHttpRequestType;
import com.home.commonGMClient.global.GMClientC;
import com.home.commonGMClient.net.base.ManagerHttpRequest;
import com.home.commonGMClient.net.httpResponseResult.system.GMClientLoginResult;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;

/** gm客户端登陆消息(generated by shine) */
public class GMClientLoginHttpRequest extends ManagerHttpRequest
{
	/** 数据类型ID */
	public static final int dataID=ManagerHttpRequestType.GMClientLogin;
	
	/** 返回值 */
	protected GMClientLoginResult _re;
	
	/** user */
	public String user="";
	
	/** 密码 */
	public String password="";
	
	public GMClientLoginHttpRequest()
	{
		_dataID=ManagerHttpRequestType.GMClientLogin;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	/** 执行 */
	@Override
	protected void onComplete()
	{
		if(_re!=null)
		{
			GMClientC.main.loginSuccess(_re.token);
		}
	}
	
	/** 执行 */
	@Override
	protected void toRead()
	{
		_re=new GMClientLoginResult();
		readResult(_re,_resultStream);
	}
	
	/** 获取结果 */
	public GMClientLoginResult getResult()
	{
		return _re;
	}
	
	/** 同步执行 */
	public GMClientLoginResult sendMSync()
	{
		doSendSync();
		return _re;
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeUTF(this.user);
		
		stream.writeUTF(this.password);
		
	}
	
	/** 创建实例 */
	public static GMClientLoginHttpRequest create(String user,String password)
	{
		GMClientLoginHttpRequest re=new GMClientLoginHttpRequest();
		re.user=user;
		re.password=password;
		return re;
	}
	
}
