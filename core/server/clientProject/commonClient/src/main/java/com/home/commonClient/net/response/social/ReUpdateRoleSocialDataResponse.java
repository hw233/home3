package com.home.commonClient.net.response.social;
import com.home.commonBase.data.social.RoleSocialData;
import com.home.commonClient.constlist.generate.GameResponseType;
import com.home.commonClient.net.base.GameResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.LongObjectMap;
import com.home.shine.support.pool.DataPool;

/** 回复更新社交数据消息(generated by shine) */
public class ReUpdateRoleSocialDataResponse extends GameResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.ReUpdateRoleSocialData;
	
	/** 变化的社交数据字典 */
	public LongObjectMap<RoleSocialData> dic;
	
	public ReUpdateRoleSocialDataResponse()
	{
		_dataID=GameResponseType.ReUpdateRoleSocialData;
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		me.social.onUpdateRoleSocialDatas(dic);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "ReUpdateRoleSocialDataResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		int dicLen=stream.readLen();
		if(this.dic!=null)
		{
			this.dic.clear();
			this.dic.ensureCapacity(dicLen);
		}
		else
		{
			this.dic=new LongObjectMap<RoleSocialData>(RoleSocialData[]::new,dicLen);
		}
		
		LongObjectMap<RoleSocialData> dicT=this.dic;
		for(int dicI=dicLen-1;dicI>=0;--dicI)
		{
			RoleSocialData dicV;
			BaseData dicVT=stream.readDataFullNotNull();
			if(dicVT!=null)
			{
				if(dicVT instanceof RoleSocialData)
				{
					dicV=(RoleSocialData)dicVT;
				}
				else
				{
					dicV=new RoleSocialData();
					if(!(dicVT.getClass().isAssignableFrom(RoleSocialData.class)))
					{
						stream.throwTypeReadError(RoleSocialData.class,dicVT.getClass());
					}
					dicV.shadowCopy(dicVT);
				}
			}
			else
			{
				dicV=null;
			}
			
			dicT.put(dicV.showData.playerID,dicV);
		}
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		int dicLen=stream.readLen();
		if(this.dic!=null)
		{
			this.dic.clear();
			this.dic.ensureCapacity(dicLen);
		}
		else
		{
			this.dic=new LongObjectMap<RoleSocialData>(RoleSocialData[]::new,dicLen);
		}
		
		LongObjectMap<RoleSocialData> dicT=this.dic;
		for(int dicI=dicLen-1;dicI>=0;--dicI)
		{
			RoleSocialData dicV;
			dicV=(RoleSocialData)stream.readDataSimpleNotNull();
			
			dicT.put(dicV.showData.playerID,dicV);
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("dic");
		writer.sb.append(':');
		writer.sb.append("Map<long,RoleSocialData>");
		if(this.dic!=null)
		{
			writer.sb.append('(');
			writer.sb.append(this.dic.size());
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.dic.isEmpty())
			{
				long dicKFreeValue=this.dic.getFreeValue();
				long[] dicKKeys=this.dic.getKeys();
				Object[] dicVValues=this.dic.getValues();
				for(int dicKI=dicKKeys.length-1;dicKI>=0;--dicKI)
				{
					long dicK=dicKKeys[dicKI];
					if(dicK!=dicKFreeValue)
					{
						RoleSocialData dicV=(RoleSocialData)dicVValues[dicKI];
						writer.writeTabs();
						writer.sb.append(dicK);
						
						writer.sb.append(':');
						if(dicV!=null)
						{
							dicV.writeDataString(writer);
						}
						else
						{
							writer.sb.append("RoleSocialData=null");
						}
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.dic=null;
	}
	
}
