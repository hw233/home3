package com.home.commonClient.net.response.func.item;
import com.home.commonClient.constlist.generate.GameResponseType;
import com.home.commonClient.net.base.GameResponse;
import com.home.commonClient.net.response.func.base.FuncSResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 使用物品结果消息(generated by shine) */
public class FuncUseItemResultResponse extends FuncSResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.FuncUseItemResult;
	
	/** 道具ID(使用的) */
	public int itemID;
	
	/** 数目 */
	public int num;
	
	/** 结果 */
	public boolean result;
	
	public FuncUseItemResultResponse()
	{
		_dataID=GameResponseType.FuncUseItemResult;
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		me.func.getBaseItemContainerTool(funcID).onUseItemResult(itemID,num,result);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncUseItemResultResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.itemID=stream.readInt();
		
		this.num=stream.readInt();
		
		this.result=stream.readBoolean();
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.itemID=stream.readInt();
		
		this.num=stream.readInt();
		
		this.result=stream.readBoolean();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("itemID");
		writer.sb.append(':');
		writer.sb.append(this.itemID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("num");
		writer.sb.append(':');
		writer.sb.append(this.num);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("result");
		writer.sb.append(':');
		writer.sb.append(this.result);
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.itemID=0;
		this.num=0;
		this.result=false;
	}
	
}
