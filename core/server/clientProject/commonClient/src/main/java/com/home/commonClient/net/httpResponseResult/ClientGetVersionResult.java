package com.home.commonClient.net.httpResponseResult;
import com.home.commonBase.data.login.ClientVersionData;
import com.home.commonClient.constlist.generate.LoginHttpResponseResultType;
import com.home.commonClient.constlist.generate.MLoginHttpResponseResultType;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;

/** (generated by shine) */
public class ClientGetVersionResult extends BaseData
{
	/** 版本数据(空为服务器并无此版本) */
	public ClientVersionData version;
	
	/** 重定向的url */
	public String redirectURL="";
	
	/** 数据类型ID */
	public static final int dataID=LoginHttpResponseResultType.ClientGetVersion;
	
	public ClientGetVersionResult()
	{
		_dataID=LoginHttpResponseResultType.ClientGetVersion;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		if(stream.readBoolean())
		{
			this.version=new ClientVersionData();
			this.version.readBytesFull(stream);
		}
		else
		{
			this.version=null;
		}
		
		this.redirectURL=stream.readUTF();
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.version!=null)
		{
			stream.writeBoolean(true);
			this.version.writeBytesFull(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.writeUTF(this.redirectURL);
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		if(stream.readBoolean())
		{
			this.version=new ClientVersionData();
			this.version.readBytesSimple(stream);
		}
		else
		{
			this.version=null;
		}
		
		this.redirectURL=stream.readUTF();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.version!=null)
		{
			stream.writeBoolean(true);
			this.version.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.writeUTF(this.redirectURL);
		
	}
	
}
