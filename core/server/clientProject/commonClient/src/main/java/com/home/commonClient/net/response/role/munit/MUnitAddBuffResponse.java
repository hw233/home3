package com.home.commonClient.net.response.role.munit;
import com.home.commonBase.data.scene.base.BuffData;
import com.home.commonClient.constlist.generate.GameResponseType;
import com.home.commonClient.net.base.GameResponse;
import com.home.commonClient.net.response.role.munit.MUnitSResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 主角加buff(generated by shine) */
public class MUnitAddBuffResponse extends MUnitSResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.MUnitAddBuff;
	
	/** buff数据 */
	public BuffData buff;
	
	public MUnitAddBuffResponse()
	{
		_dataID=GameResponseType.MUnitAddBuff;
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		mLogic.getFightLogic().buff.addBuffByServer(buff);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "MUnitAddBuffResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		BaseData buffT=stream.readDataFullNotNull();
		if(buffT!=null)
		{
			if(buffT instanceof BuffData)
			{
				this.buff=(BuffData)buffT;
			}
			else
			{
				this.buff=new BuffData();
				if(!(buffT.getClass().isAssignableFrom(BuffData.class)))
				{
					stream.throwTypeReadError(BuffData.class,buffT.getClass());
				}
				this.buff.shadowCopy(buffT);
			}
		}
		else
		{
			this.buff=null;
		}
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.buff=(BuffData)stream.readDataSimpleNotNull();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("buff");
		writer.sb.append(':');
		if(this.buff!=null)
		{
			this.buff.writeDataString(writer);
		}
		else
		{
			writer.sb.append("BuffData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.buff=null;
	}
	
}
