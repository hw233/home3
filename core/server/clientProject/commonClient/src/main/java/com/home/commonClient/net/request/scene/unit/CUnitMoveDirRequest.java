package com.home.commonClient.net.request.scene.unit;
import com.home.commonBase.data.scene.base.DirData;
import com.home.commonBase.data.scene.base.PosData;
import com.home.commonClient.constlist.generate.GameRequestType;
import com.home.commonClient.net.request.scene.base.CUnitRRequest;
import com.home.commonClient.net.request.scene.base.SceneRRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 客户端单位朝向移动消息(generated by shine) */
public class CUnitMoveDirRequest extends CUnitRRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.CUnitMoveDir;
	
	/** 移动类型 */
	public int type;
	
	/** 当前位置 */
	public PosData pos;
	
	/** 实际移动方向 */
	public DirData realDir;
	
	/** 实际速度比率 */
	public int realSpeedRatio=-1;
	
	/** 目标朝向 */
	public DirData dir;
	
	public CUnitMoveDirRequest()
	{
		_dataID=GameRequestType.CUnitMoveDir;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		PosData posTemp=pos;
		if(posTemp!=null)
		{
			this.pos=new PosData();
			this.pos.copy(posTemp);
		}
		else
		{
			this.pos=null;
		}
		
		DirData dirTemp=dir;
		if(dirTemp!=null)
		{
			this.dir=new DirData();
			this.dir.copy(dirTemp);
		}
		else
		{
			this.dir=null;
			nullObjError("dir");
		}
		
		DirData realDirTemp=realDir;
		if(realDirTemp!=null)
		{
			this.realDir=new DirData();
			this.realDir.copy(realDirTemp);
		}
		else
		{
			this.realDir=null;
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "CUnitMoveDirRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("pos");
		writer.sb.append(':');
		if(this.pos!=null)
		{
			this.pos.writeDataString(writer);
		}
		else
		{
			writer.sb.append("PosData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("dir");
		writer.sb.append(':');
		if(this.dir!=null)
		{
			this.dir.writeDataString(writer);
		}
		else
		{
			writer.sb.append("DirData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("realDir");
		writer.sb.append(':');
		if(this.realDir!=null)
		{
			this.realDir.writeDataString(writer);
		}
		else
		{
			writer.sb.append("DirData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("realSpeedRatio");
		writer.sb.append(':');
		writer.sb.append(this.realSpeedRatio);
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.type);
		
		if(this.pos!=null)
		{
			stream.writeBoolean(true);
			this.pos.writeBytesFull(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.dir!=null)
		{
			this.dir.writeBytesFull(stream);
		}
		else
		{
			nullObjError("dir");
		}
		
		if(this.realDir!=null)
		{
			stream.writeBoolean(true);
			this.realDir.writeBytesFull(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.writeInt(this.realSpeedRatio);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.type);
		
		if(this.pos!=null)
		{
			stream.writeBoolean(true);
			this.pos.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.dir!=null)
		{
			this.dir.writeBytesSimple(stream);
		}
		else
		{
			nullObjError("dir");
		}
		
		if(this.realDir!=null)
		{
			stream.writeBoolean(true);
			this.realDir.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.writeInt(this.realSpeedRatio);
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.type=0;
		if(this.pos!=null)
		{
			this.pos.release(pool);
			this.pos=null;
		}
		this.dir.release(pool);
		this.dir=null;
		if(this.realDir!=null)
		{
			this.realDir.release(pool);
			this.realDir=null;
		}
		this.realSpeedRatio=0;
	}
	
	/** 创建实例 */
	public static CUnitMoveDirRequest create(int instanceID,int type,PosData pos,DirData dir,DirData realDir,int realSpeedRatio)
	{
		CUnitMoveDirRequest re=(CUnitMoveDirRequest)BytesControl.createRequest(dataID);
		re.instanceID=instanceID;
		re.type=type;
		re.pos=pos;
		re.dir=dir;
		re.realDir=realDir;
		re.realSpeedRatio=realSpeedRatio;
		return re;
	}
	
}
