package com.home.commonClient.net.httpRequest;
import com.home.commonClient.constlist.generate.LoginHttpRequestType;
import com.home.commonClient.net.base.LoginHttpRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;

/** 发送客户端流程步消息(generated by shine) */
public class SendHttpClientFlowStepHttpRequest extends LoginHttpRequest
{
	/** 数据类型ID */
	public static final int dataID=LoginHttpRequestType.SendHttpClientFlowStep;
	
	/** uid */
	public String uid="";
	
	/** 步骤 */
	public int step;
	
	public SendHttpClientFlowStepHttpRequest()
	{
		_dataID=LoginHttpRequestType.SendHttpClientFlowStep;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeUTF(this.uid);
		
		stream.writeInt(this.step);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeUTF(this.uid);
		
		stream.writeInt(this.step);
		
	}
	
	/** 执行 */
	@Override
	protected void onComplete()
	{
		
	}
	
	/** 同步执行 */
	public void sendMSync()
	{
		doSendSync();
		return;
	}
	
	/** 创建实例 */
	public static SendHttpClientFlowStepHttpRequest create(String uid,int step)
	{
		SendHttpClientFlowStepHttpRequest re=new SendHttpClientFlowStepHttpRequest();
		re.uid=uid;
		re.step=step;
		return re;
	}
	
}
