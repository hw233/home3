package com.home.commonClient.net.response.scene.unit;
import com.home.commonBase.data.scene.fight.DamageOneData;
import com.home.commonBase.data.scene.fight.SkillTargetData;
import com.home.commonClient.constlist.generate.GameResponseType;
import com.home.commonClient.net.response.scene.base.SceneSResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 攻击伤害单个数据()(generated by shine) */
public class AttackDamageOneResponse extends SceneSResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.AttackDamageOne;
	
	/** 来源单位 */
	public int fromInstanceID;
	
	/** 目标数据 */
	public SkillTargetData target;
	
	/** 攻击ID */
	public int id;
	
	/** 攻击等级 */
	public int level;
	
	/** 伤害数据 */
	public DamageOneData data;
	
	public AttackDamageOneResponse()
	{
		_dataID=GameResponseType.AttackDamageOne;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "AttackDamageOneResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.fromInstanceID=stream.readInt();
		
		BaseData targetT=stream.readDataFullNotNull();
		if(targetT!=null)
		{
			if(targetT instanceof SkillTargetData)
			{
				this.target=(SkillTargetData)targetT;
			}
			else
			{
				this.target=new SkillTargetData();
				if(!(targetT.getClass().isAssignableFrom(SkillTargetData.class)))
				{
					stream.throwTypeReadError(SkillTargetData.class,targetT.getClass());
				}
				this.target.shadowCopy(targetT);
			}
		}
		else
		{
			this.target=null;
		}
		
		this.id=stream.readInt();
		
		this.level=stream.readInt();
		
		BaseData dataT=stream.readDataFullNotNull();
		if(dataT!=null)
		{
			if(dataT instanceof DamageOneData)
			{
				this.data=(DamageOneData)dataT;
			}
			else
			{
				this.data=new DamageOneData();
				if(!(dataT.getClass().isAssignableFrom(DamageOneData.class)))
				{
					stream.throwTypeReadError(DamageOneData.class,dataT.getClass());
				}
				this.data.shadowCopy(dataT);
			}
		}
		else
		{
			this.data=null;
		}
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.fromInstanceID=stream.readInt();
		
		this.target=(SkillTargetData)stream.readDataSimpleNotNull();
		
		this.id=stream.readInt();
		
		this.level=stream.readInt();
		
		this.data=(DamageOneData)stream.readDataSimpleNotNull();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("fromInstanceID");
		writer.sb.append(':');
		writer.sb.append(this.fromInstanceID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("target");
		writer.sb.append(':');
		if(this.target!=null)
		{
			this.target.writeDataString(writer);
		}
		else
		{
			writer.sb.append("SkillTargetData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("id");
		writer.sb.append(':');
		writer.sb.append(this.id);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("level");
		writer.sb.append(':');
		writer.sb.append(this.level);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("data");
		writer.sb.append(':');
		if(this.data!=null)
		{
			this.data.writeDataString(writer);
		}
		else
		{
			writer.sb.append("DamageOneData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.fromInstanceID=0;
		this.target=null;
		this.id=0;
		this.level=0;
		this.data=null;
	}
	
}
