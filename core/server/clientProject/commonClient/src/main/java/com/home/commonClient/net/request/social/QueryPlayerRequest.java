package com.home.commonClient.net.request.social;
import com.home.commonClient.constlist.generate.GameRequestType;
import com.home.commonClient.net.base.GameRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 客户端查询角色消息(generated by shine) */
public class QueryPlayerRequest extends GameRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.QueryPlayer;
	
	/** 目标角色ID */
	public long playerID;
	
	/** 查询类型 */
	public int type;
	
	/** 查询参数 */
	public int[] args;
	
	public QueryPlayerRequest()
	{
		_dataID=GameRequestType.QueryPlayer;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		int[] argsTemp=args;
		if(argsTemp!=null)
		{
			int[] argsR=argsTemp;
			int argsLen=argsR.length;
			this.args=new int[argsLen];
			BytesControl.arrayCopy(argsTemp,this.args,argsLen);
		}
		else
		{
			this.args=null;
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "QueryPlayerRequest";
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeLong(this.playerID);
		
		stream.writeInt(this.type);
		
		if(this.args!=null)
		{
			stream.writeBoolean(true);
			int[] argsT=this.args;
			stream.writeLen(argsT.length);
			for(int argsVI=0,argsVLen=argsT.length;argsVI<argsVLen;++argsVI)
			{
				int argsV=argsT[argsVI];
				stream.writeInt(argsV);
				
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeLong(this.playerID);
		
		stream.writeInt(this.type);
		
		if(this.args!=null)
		{
			stream.writeBoolean(true);
			int[] argsT=this.args;
			stream.writeLen(argsT.length);
			for(int argsVI=0,argsVLen=argsT.length;argsVI<argsVLen;++argsVI)
			{
				int argsV=argsT[argsVI];
				stream.writeInt(argsV);
				
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("args");
		writer.sb.append(':');
		writer.sb.append("Array<int>");
		if(this.args!=null)
		{
			int[] argsT=this.args;
			int argsLen=argsT.length;
			writer.sb.append('(');
			writer.sb.append(argsLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int argsI=0;argsI<argsLen;++argsI)
			{
				int argsV=argsT[argsI];
				writer.writeTabs();
				writer.sb.append(argsI);
				writer.sb.append(':');
				writer.sb.append(argsV);
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.playerID=0L;
		this.type=0;
	}
	
	/** 创建实例 */
	public static QueryPlayerRequest create(long playerID,int type,int[] args)
	{
		QueryPlayerRequest re=(QueryPlayerRequest)BytesControl.createRequest(dataID);
		re.playerID=playerID;
		re.type=type;
		re.args=args;
		return re;
	}
	
}
