package com.home.commonClient.net.request.func.aution;
import com.home.commonBase.data.item.auction.AuctionQueryConditionData;
import com.home.commonClient.constlist.generate.GameRequestType;
import com.home.commonClient.net.request.func.base.FuncRRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 拍卖行查询(generated by shine) */
public class FuncAuctionQueryRequest extends FuncRRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.FuncAuctionQuery;
	
	/** 查询条件组(如为空则取上次条件组) */
	public AuctionQueryConditionData[] conditions;
	
	/** 结果页码 */
	public int page;
	
	public FuncAuctionQueryRequest()
	{
		_dataID=GameRequestType.FuncAuctionQuery;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		AuctionQueryConditionData[] conditionsTemp=conditions;
		if(conditionsTemp!=null)
		{
			AuctionQueryConditionData[] conditionsR=conditionsTemp;
			int conditionsLen=conditionsR.length;
			this.conditions=new AuctionQueryConditionData[conditionsLen];
			AuctionQueryConditionData[] conditionsT=this.conditions;
			for(int conditionsI=0;conditionsI<conditionsLen;++conditionsI)
			{
				AuctionQueryConditionData conditionsV=conditionsR[conditionsI];
				AuctionQueryConditionData conditionsU;
				if(conditionsV!=null)
				{
					conditionsU=(AuctionQueryConditionData)conditionsV.clone();
				}
				else
				{
					conditionsU=null;
				}
				
				conditionsT[conditionsI]=conditionsU;
			}
		}
		else
		{
			this.conditions=null;
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncAuctionQueryRequest";
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.conditions!=null)
		{
			stream.writeBoolean(true);
			AuctionQueryConditionData[] conditionsT=this.conditions;
			stream.writeLen(conditionsT.length);
			for(int conditionsVI=0,conditionsVLen=conditionsT.length;conditionsVI<conditionsVLen;++conditionsVI)
			{
				AuctionQueryConditionData conditionsV=conditionsT[conditionsVI];
				if(conditionsV!=null)
				{
					stream.writeBoolean(true);
					stream.writeDataFullNotNull(conditionsV);
				}
				else
				{
					stream.writeBoolean(false);
				}
				
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.writeInt(this.page);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		if(this.conditions!=null)
		{
			stream.writeBoolean(true);
			AuctionQueryConditionData[] conditionsT=this.conditions;
			stream.writeLen(conditionsT.length);
			for(int conditionsVI=0,conditionsVLen=conditionsT.length;conditionsVI<conditionsVLen;++conditionsVI)
			{
				AuctionQueryConditionData conditionsV=conditionsT[conditionsVI];
				if(conditionsV!=null)
				{
					stream.writeBoolean(true);
					stream.writeDataSimpleNotNull(conditionsV);
				}
				else
				{
					stream.writeBoolean(false);
				}
				
			}
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.writeInt(this.page);
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("conditions");
		writer.sb.append(':');
		writer.sb.append("Array<AuctionQueryConditionData>");
		if(this.conditions!=null)
		{
			AuctionQueryConditionData[] conditionsT=this.conditions;
			int conditionsLen=conditionsT.length;
			writer.sb.append('(');
			writer.sb.append(conditionsLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int conditionsI=0;conditionsI<conditionsLen;++conditionsI)
			{
				AuctionQueryConditionData conditionsV=conditionsT[conditionsI];
				writer.writeTabs();
				writer.sb.append(conditionsI);
				writer.sb.append(':');
				if(conditionsV!=null)
				{
					conditionsV.writeDataString(writer);
				}
				else
				{
					writer.sb.append("AuctionQueryConditionData=null");
				}
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("page");
		writer.sb.append(':');
		writer.sb.append(this.page);
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		if(this.conditions!=null)
		{
			AuctionQueryConditionData[] conditionsT=this.conditions;
			for(int conditionsVI=0,conditionsVLen=conditionsT.length;conditionsVI<conditionsVLen;++conditionsVI)
			{
				AuctionQueryConditionData conditionsV=conditionsT[conditionsVI];
				if(conditionsV!=null)
				{
					conditionsV.release(pool);
					conditionsV=null;
				}
				conditionsT[conditionsVI]=null;
			}
		}
		this.page=0;
	}
	
	/** 创建实例 */
	public static FuncAuctionQueryRequest create(int funcID,AuctionQueryConditionData[] conditions,int page)
	{
		FuncAuctionQueryRequest re=(FuncAuctionQueryRequest)BytesControl.createRequest(dataID);
		re.funcID=funcID;
		re.conditions=conditions;
		re.page=page;
		return re;
	}
	
}
