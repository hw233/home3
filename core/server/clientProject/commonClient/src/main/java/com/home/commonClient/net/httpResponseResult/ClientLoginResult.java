package com.home.commonClient.net.httpResponseResult;
import com.home.commonBase.data.login.ClientLoginResultData;
import com.home.commonBase.data.system.AreaClientData;
import com.home.commonClient.constlist.generate.LoginHttpResponseResultType;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.collection.IntObjectMap;
import com.home.shine.support.collection.SList;

/** (generated by shine) */
public class ClientLoginResult extends BaseData
{
	/** 结果数据 */
	public ClientLoginResultData data;
	
	/** 数据类型ID */
	public static final int dataID=LoginHttpResponseResultType.ClientLogin;
	
	public ClientLoginResult()
	{
		_dataID=LoginHttpResponseResultType.ClientLogin;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		BaseData dataT=stream.readDataFullNotNull();
		if(dataT!=null)
		{
			if(dataT instanceof ClientLoginResultData)
			{
				this.data=(ClientLoginResultData)dataT;
			}
			else
			{
				this.data=new ClientLoginResultData();
				if(!(dataT.getClass().isAssignableFrom(ClientLoginResultData.class)))
				{
					stream.throwTypeReadError(ClientLoginResultData.class,dataT.getClass());
				}
				this.data.shadowCopy(dataT);
			}
		}
		else
		{
			this.data=null;
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.data!=null)
		{
			stream.writeDataFullNotNull(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.data=(ClientLoginResultData)stream.readDataSimpleNotNull();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.data!=null)
		{
			stream.writeDataSimpleNotNull(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
	}
	
}
