package com.home.commonClient.net.response.role.pet;
import com.home.commonBase.data.role.PetUseData;
import com.home.commonClient.constlist.generate.GameResponseType;
import com.home.commonClient.net.base.GameResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 添加宠物(generated by shine) */
public class AddPetResponse extends GameResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.AddPet;
	
	public PetUseData data;
	
	public AddPetResponse()
	{
		_dataID=GameResponseType.AddPet;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "AddPetResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		BaseData dataT=stream.readDataFullNotNull();
		if(dataT!=null)
		{
			if(dataT instanceof PetUseData)
			{
				this.data=(PetUseData)dataT;
			}
			else
			{
				this.data=new PetUseData();
				if(!(dataT.getClass().isAssignableFrom(PetUseData.class)))
				{
					stream.throwTypeReadError(PetUseData.class,dataT.getClass());
				}
				this.data.shadowCopy(dataT);
			}
		}
		else
		{
			this.data=null;
		}
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.data=(PetUseData)stream.readDataSimpleNotNull();
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("data");
		writer.sb.append(':');
		if(this.data!=null)
		{
			this.data.writeDataString(writer);
		}
		else
		{
			writer.sb.append("PetUseData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.data=null;
	}
	
}
