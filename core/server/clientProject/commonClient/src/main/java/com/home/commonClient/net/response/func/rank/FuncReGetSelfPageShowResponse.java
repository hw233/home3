package com.home.commonClient.net.response.func.rank;
import com.home.commonClient.constlist.generate.GameResponseType;
import com.home.commonClient.net.response.func.base.FuncSResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.SList;
import com.home.shine.support.pool.DataPool;

/** (generated by shine) */
public class FuncReGetSelfPageShowResponse extends FuncSResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.FuncReGetSelfPageShow;
	
	/** 页码 */
	public int page;
	
	/** 数据组 */
	public SList<BaseData> list;
	
	public FuncReGetSelfPageShowResponse()
	{
		_dataID=GameResponseType.FuncReGetSelfPageShow;
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "FuncReGetSelfPageShowResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.page=stream.readInt();
		
		if(stream.readBoolean())
		{
			int listLen=stream.readLen();
			if(this.list!=null)
			{
				this.list.clear();
				this.list.ensureCapacity(listLen);
			}
			else
			{
				this.list=new SList<BaseData>(BaseData[]::new,listLen);
			}
			
			SList<BaseData> listT=this.list;
			for(int listI=listLen-1;listI>=0;--listI)
			{
				BaseData listV;
				if(stream.readBoolean())
				{
					BaseData listVT=stream.readDataFullNotNull();
					if(listVT!=null)
					{
						if(listVT instanceof BaseData)
						{
							listV=(BaseData)listVT;
						}
						else
						{
							listV=new BaseData();
							if(!(listVT.getClass().isAssignableFrom(BaseData.class)))
							{
								stream.throwTypeReadError(BaseData.class,listVT.getClass());
							}
							listV.shadowCopy(listVT);
						}
					}
					else
					{
						listV=null;
					}
				}
				else
				{
					listV=null;
				}
				
				listT.add(listV);
			}
		}
		else
		{
			this.list=null;
		}
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.page=stream.readInt();
		
		if(stream.readBoolean())
		{
			int listLen=stream.readLen();
			if(this.list!=null)
			{
				this.list.clear();
				this.list.ensureCapacity(listLen);
			}
			else
			{
				this.list=new SList<BaseData>(BaseData[]::new,listLen);
			}
			
			SList<BaseData> listT=this.list;
			for(int listI=listLen-1;listI>=0;--listI)
			{
				BaseData listV;
				if(stream.readBoolean())
				{
					listV=(BaseData)stream.readDataSimpleNotNull();
				}
				else
				{
					listV=null;
				}
				
				listT.add(listV);
			}
		}
		else
		{
			this.list=null;
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("page");
		writer.sb.append(':');
		writer.sb.append(this.page);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("list");
		writer.sb.append(':');
		writer.sb.append("List<BaseData>");
		if(this.list!=null)
		{
			SList<BaseData> listT=this.list;
			int listLen=listT.size();
			writer.sb.append('(');
			writer.sb.append(listLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int listI=0;listI<listLen;++listI)
			{
				BaseData listV=listT.get(listI);
				writer.writeTabs();
				writer.sb.append(listI);
				writer.sb.append(':');
				if(listV!=null)
				{
					listV.writeDataString(writer);
				}
				else
				{
					writer.sb.append("BaseData=null");
				}
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.page=0;
		this.list=null;
	}
	
}
