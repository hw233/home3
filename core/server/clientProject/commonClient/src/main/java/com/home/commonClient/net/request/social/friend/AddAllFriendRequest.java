package com.home.commonClient.net.request.social.friend;
import com.home.commonClient.constlist.generate.GameRequestType;
import com.home.commonClient.net.base.GameRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.collection.LongList;
import com.home.shine.support.pool.DataPool;

/** 添加所有好友消息(generated by shine) */
public class AddAllFriendRequest extends GameRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.AddAllFriend;
	
	/** 角色ID */
	public LongList playerIDList;
	
	/** 添加方式(g层定义) */
	public int type;
	
	public AddAllFriendRequest()
	{
		_dataID=GameRequestType.AddAllFriend;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		LongList playerIDListTemp=playerIDList;
		if(playerIDListTemp!=null)
		{
			this.playerIDList=new LongList(playerIDListTemp.size());
			LongList playerIDListT=this.playerIDList;
			if(!playerIDListTemp.isEmpty())
			{
				long[] playerIDListVValues=playerIDListTemp.getValues();
				for(int playerIDListVI=0,playerIDListVLen=playerIDListTemp.length();playerIDListVI<playerIDListVLen;++playerIDListVI)
				{
					long playerIDListV=playerIDListVValues[playerIDListVI];
					long playerIDListU;
					playerIDListU=playerIDListV;
					
					playerIDListT.add(playerIDListU);
				}
			}
		}
		else
		{
			this.playerIDList=null;
			nullObjError("playerIDList");
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "AddAllFriendRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("playerIDList");
		writer.sb.append(':');
		writer.sb.append("List<long>");
		if(this.playerIDList!=null)
		{
			LongList playerIDListT=this.playerIDList;
			int playerIDListLen=playerIDListT.size();
			writer.sb.append('(');
			writer.sb.append(playerIDListLen);
			writer.sb.append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int playerIDListI=0;playerIDListI<playerIDListLen;++playerIDListI)
			{
				long playerIDListV=playerIDListT.get(playerIDListI);
				writer.writeTabs();
				writer.sb.append(playerIDListI);
				writer.sb.append(':');
				writer.sb.append(playerIDListV);
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.append("=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.playerIDList!=null)
		{
			stream.writeLen(this.playerIDList.size());
			if(!this.playerIDList.isEmpty())
			{
				long[] playerIDListVValues=this.playerIDList.getValues();
				for(int playerIDListVI=0,playerIDListVLen=this.playerIDList.length();playerIDListVI<playerIDListVLen;++playerIDListVI)
				{
					long playerIDListV=playerIDListVValues[playerIDListVI];
					stream.writeLong(playerIDListV);
					
				}
			}
		}
		else
		{
			nullObjError("playerIDList");
		}
		
		stream.writeInt(this.type);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		if(this.playerIDList!=null)
		{
			stream.writeLen(this.playerIDList.size());
			if(!this.playerIDList.isEmpty())
			{
				long[] playerIDListVValues=this.playerIDList.getValues();
				for(int playerIDListVI=0,playerIDListVLen=this.playerIDList.length();playerIDListVI<playerIDListVLen;++playerIDListVI)
				{
					long playerIDListV=playerIDListVValues[playerIDListVI];
					stream.writeLong(playerIDListV);
					
				}
			}
		}
		else
		{
			nullObjError("playerIDList");
		}
		
		stream.writeInt(this.type);
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		if(this.playerIDList!=null)
		{
			this.playerIDList.clear();
		}
		this.type=0;
	}
	
	/** 创建实例 */
	public static AddAllFriendRequest create(LongList playerIDList,int type)
	{
		AddAllFriendRequest re=(AddAllFriendRequest)BytesControl.createRequest(dataID);
		re.playerIDList=playerIDList;
		re.type=type;
		return re;
	}
	
}
