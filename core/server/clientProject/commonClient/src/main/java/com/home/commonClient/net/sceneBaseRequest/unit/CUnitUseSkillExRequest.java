package com.home.commonClient.net.sceneBaseRequest.unit;
import com.home.commonBase.data.scene.base.PosDirData;
import com.home.commonBase.data.scene.fight.SkillTargetData;
import com.home.commonClient.constlist.generate.GameRequestType;
import com.home.commonClient.constlist.generate.SceneBaseRequestType;
import com.home.commonClient.net.sceneBaseRequest.unit.CUnitUseSkillRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 玩家单位使用技能拓展(generated by shine) */
public class CUnitUseSkillExRequest extends CUnitUseSkillRequest
{
	/** 数据类型ID */
	public static final int dataID=SceneBaseRequestType.CUnitUseSkillEx;
	
	/** 使用技能ID */
	public int useSkillID;
	
	/** 随机种子序号 */
	public int seedIndex;
	
	public CUnitUseSkillExRequest()
	{
		_dataID=SceneBaseRequestType.CUnitUseSkillEx;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "CUnitUseSkillExRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("useSkillID");
		writer.sb.append(':');
		writer.sb.append(this.useSkillID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("seedIndex");
		writer.sb.append(':');
		writer.sb.append(this.seedIndex);
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.useSkillID);
		
		stream.writeInt(this.seedIndex);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.useSkillID);
		
		stream.writeInt(this.seedIndex);
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.useSkillID=0;
		this.seedIndex=0;
	}
	
	/** 创建实例 */
	public static CUnitUseSkillExRequest create(int instanceID,int skillID,SkillTargetData targetData,PosDirData posDir,boolean isSuspend,int useSkillID,int seedIndex)
	{
		CUnitUseSkillExRequest re=(CUnitUseSkillExRequest)BytesControl.createRequest(dataID);
		re.instanceID=instanceID;
		re.skillID=skillID;
		re.targetData=targetData;
		re.posDir=posDir;
		re.isSuspend=isSuspend;
		re.useSkillID=useSkillID;
		re.seedIndex=seedIndex;
		return re;
	}
	
}
