package com.home.commonClient.net.httpResponseResult;
import com.home.commonBase.data.login.ClientLoginServerInfoData;
import com.home.commonClient.constlist.generate.LoginHttpResponseResultType;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.data.BaseData;

/** (generated by shine) */
public class ClientLoginSelectResult extends BaseData
{
	public ClientLoginServerInfoData info;
	
	/** 数据类型ID */
	public static final int dataID=LoginHttpResponseResultType.ClientLoginSelect;
	
	public ClientLoginSelectResult()
	{
		_dataID=LoginHttpResponseResultType.ClientLoginSelect;
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		BaseData infoT=stream.readDataFullNotNull();
		if(infoT!=null)
		{
			if(infoT instanceof ClientLoginServerInfoData)
			{
				this.info=(ClientLoginServerInfoData)infoT;
			}
			else
			{
				this.info=new ClientLoginServerInfoData();
				if(!(infoT.getClass().isAssignableFrom(ClientLoginServerInfoData.class)))
				{
					stream.throwTypeReadError(ClientLoginServerInfoData.class,infoT.getClass());
				}
				this.info.shadowCopy(infoT);
			}
		}
		else
		{
			this.info=null;
		}
		
		stream.endReadObj();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.info!=null)
		{
			stream.writeDataFullNotNull(this.info);
		}
		else
		{
			nullObjError("info");
		}
		
		stream.endWriteObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		this.info=(ClientLoginServerInfoData)stream.readDataSimpleNotNull();
		
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.info!=null)
		{
			stream.writeDataSimpleNotNull(this.info);
		}
		else
		{
			nullObjError("info");
		}
		
	}
	
}
