package com.home.commonClient.net.request.system;
import com.home.commonClient.constlist.generate.GameRequestType;
import com.home.commonClient.net.base.GameRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 发送客户端日志消息(generated by shine) */
public class SendClientLogRequest extends GameRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.SendClientLog;
	
	/** 类型 */
	public int type;
	
	/** 内容 */
	public String content="";
	
	public SendClientLogRequest()
	{
		_dataID=GameRequestType.SendClientLog;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "SendClientLogRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("content");
		writer.sb.append(':');
		writer.sb.append(this.content);
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.type);
		
		stream.writeUTF(this.content);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.type);
		
		stream.writeUTF(this.content);
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.type=0;
		this.content="";
	}
	
	/** 创建实例 */
	public static SendClientLogRequest create(int type,String content)
	{
		SendClientLogRequest re=(SendClientLogRequest)BytesControl.createRequest(dataID);
		re.type=type;
		re.content=content;
		return re;
	}
	
}
