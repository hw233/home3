package com.home.commonClient.net.sceneBaseResponse.scene;
import com.home.commonBase.data.scene.unit.UnitSimpleData;
import com.home.commonClient.constlist.generate.GameResponseType;
import com.home.commonClient.constlist.generate.SceneBaseResponseType;
import com.home.commonClient.net.sceneBaseResponse.base.SceneSResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.data.BaseData;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 添加绑定视野单位(generated by shine) */
public class AddBindVisionUnitResponse extends SceneSResponse
{
	/** 数据类型ID */
	public static final int dataID=SceneBaseResponseType.AddBindVisionUnit;
	
	/** 实例ID */
	public int instanceID;
	
	/** 单位数据(如为空则为在视野中) */
	public UnitSimpleData data;
	
	public AddBindVisionUnitResponse()
	{
		_dataID=SceneBaseResponseType.AddBindVisionUnit;
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "AddBindVisionUnitResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.instanceID=stream.readInt();
		
		if(stream.readBoolean())
		{
			BaseData dataT=stream.readDataFullNotNull();
			if(dataT!=null)
			{
				if(dataT instanceof UnitSimpleData)
				{
					this.data=(UnitSimpleData)dataT;
				}
				else
				{
					this.data=new UnitSimpleData();
					if(!(dataT.getClass().isAssignableFrom(UnitSimpleData.class)))
					{
						stream.throwTypeReadError(UnitSimpleData.class,dataT.getClass());
					}
					this.data.shadowCopy(dataT);
				}
			}
			else
			{
				this.data=null;
			}
		}
		else
		{
			this.data=null;
		}
		
		stream.endReadObj();
	}
	
	/** 读取字节流(简版) */
	@Override
	protected void toReadBytesSimple(BytesReadStream stream)
	{
		super.toReadBytesSimple(stream);
		
		this.instanceID=stream.readInt();
		
		if(stream.readBoolean())
		{
			this.data=(UnitSimpleData)stream.readDataSimpleNotNull();
		}
		else
		{
			this.data=null;
		}
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("instanceID");
		writer.sb.append(':');
		writer.sb.append(this.instanceID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("data");
		writer.sb.append(':');
		if(this.data!=null)
		{
			this.data.writeDataString(writer);
		}
		else
		{
			writer.sb.append("UnitSimpleData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.instanceID=0;
		this.data=null;
	}
	
}
