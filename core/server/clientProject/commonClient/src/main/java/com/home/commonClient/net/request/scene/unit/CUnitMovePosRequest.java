package com.home.commonClient.net.request.scene.unit;
import com.home.commonBase.data.scene.base.PosData;
import com.home.commonClient.constlist.generate.GameRequestType;
import com.home.commonClient.net.request.scene.base.CUnitRRequest;
import com.home.commonClient.net.request.scene.base.SceneRRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 客户端单位移动到点消息(generated by shine) */
public class CUnitMovePosRequest extends CUnitRRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.CUnitMovePos;
	
	/** 移动类型 */
	public int type;
	
	/** 当前位置 */
	public PosData nowPos;
	
	/** 目标位置 */
	public PosData targetPos;
	
	public CUnitMovePosRequest()
	{
		_dataID=GameRequestType.CUnitMovePos;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
		PosData nowPosTemp=nowPos;
		if(nowPosTemp!=null)
		{
			this.nowPos=new PosData();
			this.nowPos.copy(nowPosTemp);
		}
		else
		{
			this.nowPos=null;
		}
		
		PosData targetPosTemp=targetPos;
		if(targetPosTemp!=null)
		{
			this.targetPos=new PosData();
			this.targetPos.copy(targetPosTemp);
		}
		else
		{
			this.targetPos=null;
			nullObjError("targetPos");
		}
		
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "CUnitMovePosRequest";
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("type");
		writer.sb.append(':');
		writer.sb.append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("nowPos");
		writer.sb.append(':');
		if(this.nowPos!=null)
		{
			this.nowPos.writeDataString(writer);
		}
		else
		{
			writer.sb.append("PosData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("targetPos");
		writer.sb.append(':');
		if(this.targetPos!=null)
		{
			this.targetPos.writeDataString(writer);
		}
		else
		{
			writer.sb.append("PosData=null");
		}
		
		writer.writeEnter();
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.type);
		
		if(this.nowPos!=null)
		{
			stream.writeBoolean(true);
			this.nowPos.writeBytesFull(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.targetPos!=null)
		{
			this.targetPos.writeBytesFull(stream);
		}
		else
		{
			nullObjError("targetPos");
		}
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeInt(this.type);
		
		if(this.nowPos!=null)
		{
			stream.writeBoolean(true);
			this.nowPos.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.targetPos!=null)
		{
			this.targetPos.writeBytesSimple(stream);
		}
		else
		{
			nullObjError("targetPos");
		}
		
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.type=0;
		if(this.nowPos!=null)
		{
			this.nowPos.release(pool);
			this.nowPos=null;
		}
		this.targetPos.release(pool);
		this.targetPos=null;
	}
	
	/** 创建实例 */
	public static CUnitMovePosRequest create(int instanceID,int type,PosData nowPos,PosData targetPos)
	{
		CUnitMovePosRequest re=(CUnitMovePosRequest)BytesControl.createRequest(dataID);
		re.instanceID=instanceID;
		re.type=type;
		re.nowPos=nowPos;
		re.targetPos=targetPos;
		return re;
	}
	
}
