package com.home.commonClient.net.response.system;
import com.home.commonClient.constlist.generate.GameResponseType;
import com.home.commonClient.net.base.GameResponse;
import com.home.shine.bytes.BytesReadStream;
import com.home.shine.ctrl.Ctrl;
import com.home.shine.global.ShineSetting;
import com.home.shine.net.base.BaseResponse;
import com.home.shine.server.BaseServer;

/** 中心服转发消息(generated by shine) */
public class CenterTransGameToClientResponse extends GameResponse
{
	/** 数据类型ID */
	public static final int dataID=GameResponseType.CenterTransGameToClient;
	
	public CenterTransGameToClientResponse()
	{
		_dataID=GameResponseType.CenterTransGameToClient;
	}
	
	/** 执行 */
	@Override
	protected void execute()
	{
		
	}
	
	@Override
	public BaseResponse readFromStream(BytesReadStream stream,BaseServer server)
	{
		int mid=stream.natureReadUnsignedShort();
		
		BaseResponse response=server.createClientResponse(mid);
		
		if(response==null)
		{
			if(ShineSetting.needMessageExistCheck)
			{
				Ctrl.throwError("未解析mid为" + mid + "的协议");
			}
			
			return null;
		}
		
		response.setSocket(socket);
		
		//从流读取
		return response.readFromStream(stream,server);
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "CenterTransGameToClientResponse";
	}
	
	/** 读取字节流(完整版) */
	@Override
	protected void toReadBytesFull(BytesReadStream stream)
	{
		super.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		stream.endReadObj();
	}
	
}
