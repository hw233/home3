package com.home.commonClient.net.request.login;
import com.home.commonClient.constlist.generate.GameRequestType;
import com.home.commonClient.net.request.base.LoginRequest;
import com.home.shine.bytes.BytesWriteStream;
import com.home.shine.control.BytesControl;
import com.home.shine.support.DataWriter;
import com.home.shine.support.pool.DataPool;

/** 角色重连消息(generated by shine) */
public class PlayerReconnectLoginRequest extends LoginRequest
{
	/** 数据类型ID */
	public static final int dataID=GameRequestType.PlayerReconnectLogin;
	
	/** 角色ID */
	public long playerID;
	
	/** 令牌 */
	public int token;
	
	/** c层msg版本号 */
	public int cMsgVersion;
	
	/** g层msg版本号 */
	public int gMsgVersion;
	
	/** 资源版本号 */
	public int resourceVersion;
	
	public PlayerReconnectLoginRequest()
	{
		_dataID=GameRequestType.PlayerReconnectLogin;
	}
	
	@Override
	protected void copyData()
	{
		super.copyData();
	}
	
	/** 获取数据类名 */
	@Override
	public String getDataClassName()
	{
		return "PlayerReconnectLoginRequest";
	}
	
	/** 写入字节流(完整版) */
	@Override
	protected void toWriteBytesFull(BytesWriteStream stream)
	{
		super.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeLong(this.playerID);
		
		stream.writeInt(this.token);
		
		stream.writeInt(this.cMsgVersion);
		
		stream.writeInt(this.gMsgVersion);
		
		stream.writeInt(this.resourceVersion);
		
		stream.endWriteObj();
	}
	
	/** 写入字节流(简版) */
	@Override
	protected void toWriteBytesSimple(BytesWriteStream stream)
	{
		super.toWriteBytesSimple(stream);
		
		stream.writeLong(this.playerID);
		
		stream.writeInt(this.token);
		
		stream.writeInt(this.cMsgVersion);
		
		stream.writeInt(this.gMsgVersion);
		
		stream.writeInt(this.resourceVersion);
		
	}
	
	/** 转文本输出 */
	@Override
	protected void toWriteDataString(DataWriter writer)
	{
		super.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.append("playerID");
		writer.sb.append(':');
		writer.sb.append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("token");
		writer.sb.append(':');
		writer.sb.append(this.token);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("cMsgVersion");
		writer.sb.append(':');
		writer.sb.append(this.cMsgVersion);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("gMsgVersion");
		writer.sb.append(':');
		writer.sb.append(this.gMsgVersion);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.append("resourceVersion");
		writer.sb.append(':');
		writer.sb.append(this.resourceVersion);
		
		writer.writeEnter();
	}
	
	/** 回池 */
	@Override
	protected void toRelease(DataPool pool)
	{
		super.toRelease(pool);
		
		this.playerID=0L;
		this.token=0;
		this.cMsgVersion=0;
		this.gMsgVersion=0;
		this.resourceVersion=0;
	}
	
	/** 创建实例 */
	public static PlayerReconnectLoginRequest create(long playerID,int token,int cMsgVersion,int gMsgVersion,int resourceVersion)
	{
		PlayerReconnectLoginRequest re=(PlayerReconnectLoginRequest)BytesControl.createRequest(dataID);
		re.playerID=playerID;
		re.token=token;
		re.cMsgVersion=cMsgVersion;
		re.gMsgVersion=gMsgVersion;
		re.resourceVersion=resourceVersion;
		return re;
	}
	
}
