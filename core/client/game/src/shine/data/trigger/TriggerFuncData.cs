using ShineEngine;

/// <summary>
/// (generated by shine)
/// </summary>
public class TriggerFuncData:TriggerObjData
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=ShineDataType.TriggerFunc;
	
	/// <summary>
	/// 方法id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 参数组
	/// </summary>
	public TriggerObjData[] args;
	
	public TriggerFuncData()
	{
		_dataID=ShineDataType.TriggerFunc;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "TriggerFuncData";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.id=stream.readInt();
		
		int argsLen=stream.readLen();
		if(this.args==null || this.args.Length!=argsLen)
		{
			this.args=new TriggerObjData[argsLen];
		}
		TriggerObjData[] argsT=this.args;
		for(int argsI=0;argsI<argsLen;++argsI)
		{
			TriggerObjData argsV;
			BaseData argsVT=stream.readDataFullNotNull();
			if(argsVT!=null)
			{
				if(argsVT is TriggerObjData)
				{
					argsV=(TriggerObjData)argsVT;
				}
				else
				{
					argsV=new TriggerObjData();
					if(!(argsVT.GetType().IsAssignableFrom(typeof(TriggerObjData))))
					{
						stream.throwTypeReadError(typeof(TriggerObjData),argsVT.GetType());
					}
					argsV.shadowCopy(argsVT);
				}
			}
			else
			{
				argsV=null;
			}
			
			argsT[argsI]=argsV;
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		base.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.id);
		
		if(this.args!=null)
		{
			TriggerObjData[] argsT=this.args;
			stream.writeLen(argsT.Length);
			for(int argsVI=0,argsVLen=argsT.Length;argsVI<argsVLen;++argsVI)
			{
				TriggerObjData argsV=argsT[argsVI];
				if(argsV!=null)
				{
					stream.writeDataFullNotNull(argsV);
				}
				else
				{
					nullObjError("argsV");
				}
				
			}
		}
		else
		{
			nullObjError("args");
		}
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		int argsLen=stream.readLen();
		if(this.args==null || this.args.Length!=argsLen)
		{
			this.args=new TriggerObjData[argsLen];
		}
		TriggerObjData[] argsT=this.args;
		for(int argsI=0;argsI<argsLen;++argsI)
		{
			TriggerObjData argsV;
			argsV=(TriggerObjData)stream.readDataSimpleNotNull();
			
			argsT[argsI]=argsV;
		}
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		if(this.args!=null)
		{
			TriggerObjData[] argsT=this.args;
			stream.writeLen(argsT.Length);
			for(int argsVI=0,argsVLen=argsT.Length;argsVI<argsVLen;++argsVI)
			{
				TriggerObjData argsV=argsT[argsVI];
				if(argsV!=null)
				{
					stream.writeDataSimpleNotNull(argsV);
				}
				else
				{
					nullObjError("argsV");
				}
				
			}
		}
		else
		{
			nullObjError("args");
		}
		
	}
	
	/// <summary>
	/// 复制(潜拷贝)
	/// </summary>
	protected override void toShadowCopy(BaseData data)
	{
		base.toShadowCopy(data);
		
		if(!(data is TriggerFuncData))
			return;
		
		TriggerFuncData mData=(TriggerFuncData)data;
		
		this.id=mData.id;
		this.args=mData.args;
	}
	
	/// <summary>
	/// 复制(深拷贝)
	/// </summary>
	protected override void toCopy(BaseData data)
	{
		base.toCopy(data);
		
		if(!(data is TriggerFuncData))
			return;
		
		TriggerFuncData mData=(TriggerFuncData)data;
		
		this.id=mData.id;
		
		if(mData.args!=null)
		{
			TriggerObjData[] argsR=mData.args;
			int argsLen=argsR.Length;
			if(this.args==null || this.args.Length!=argsLen)
			{
				this.args=new TriggerObjData[argsLen];
			}
			TriggerObjData[] argsT=this.args;
			for(int argsI=0;argsI<argsLen;++argsI)
			{
				TriggerObjData argsV=argsR[argsI];
				TriggerObjData argsU;
				if(argsV!=null)
				{
					argsU=(TriggerObjData)argsV.clone();
				}
				else
				{
					argsU=null;
					nullObjError("argsU");
				}
				
				argsT[argsI]=argsU;
			}
		}
		else
		{
			this.args=null;
			nullObjError("args");
		}
		
	}
	
	/// <summary>
	/// 是否数据一致
	/// </summary>
	protected override bool toDataEquals(BaseData data)
	{
		if(!base.toDataEquals(data))
			return false;
		
		TriggerFuncData mData=(TriggerFuncData)data;
		if(this.id!=mData.id)
			return false;
		
		if(mData.args!=null)
		{
			if(this.args==null)
				return false;
			if(this.args.Length!=mData.args.Length)
				return false;
			TriggerObjData[] argsT=this.args;
			TriggerObjData[] argsR=mData.args;
			int argsLen=argsT.Length;
			for(int argsI=0;argsI<argsLen;++argsI)
			{
				TriggerObjData argsU=argsT[argsI];
				TriggerObjData argsV=argsR[argsI];
				if(argsV!=null)
				{
					if(argsU==null)
						return false;
					if(!argsU.dataEquals(argsV))
						return false;
				}
				else
				{
					if(argsU!=null)
						return false;
				}
				
			}
		}
		else
		{
			if(this.args!=null)
				return false;
		}
		
		return true;
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("id");
		writer.sb.Append(':');
		writer.sb.Append(this.id);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("args");
		writer.sb.Append(':');
		writer.sb.Append("Array<TriggerObjData>");
		if(this.args!=null)
		{
			TriggerObjData[] argsT=this.args;
			int argsLen=argsT.Length;
			writer.sb.Append('(');
			writer.sb.Append(argsLen);
			writer.sb.Append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int argsI=0;argsI<argsLen;++argsI)
			{
				TriggerObjData argsV=argsT[argsI];
				writer.writeTabs();
				writer.sb.Append(argsI);
				writer.sb.Append(':');
				if(argsV!=null)
				{
					argsV.writeDataString(writer);
				}
				else
				{
					writer.sb.Append("TriggerObjData=null");
				}
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.Append("=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 初始化初值
	/// </summary>
	public override void initDefault()
	{
		base.initDefault();
		
		this.args=new TriggerObjData[0];
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.id=0;
		this.args=null;
	}
	
}
