using ShineEngine;

namespace ShineEngine
{
	/// <summary>
	/// (generated by shine)
	/// </summary>
	public class SecondPassData:TimePassData
	{
		/// <summary>
		/// 数据类型ID
		/// </summary>
		public const int dataID=ShineDataType.SecondPass;
		
		/** 剩余毫秒数 */
		private int _lastMilli=0;
		
		public SecondPassData()
		{
			_dataID=ShineDataType.SecondPass;
		}
		
		public override void reStart()
		{
			base.reStart();

			_lastMilli=0;
		}
		
		protected override void toAddTime(int delay)
		{
			_lastMilli+=delay;

			if(_lastMilli>=1000)
			{
				int s=_lastMilli / 1000;

				timePass+=s;

				_lastMilli-=s * 1000;
			}
		}
		
		/// <summary>
		/// 获取数据类名
		/// </summary>
		public override string getDataClassName()
		{
			return "SecondPassData";
		}
		
		/// <summary>
		/// 读取字节流(完整版)
		/// </summary>
		protected override void toReadBytesFull(BytesReadStream stream)
		{
			base.toReadBytesFull(stream);
			
			stream.startReadObj();
			
			stream.endReadObj();
		}
		
		/// <summary>
		/// 写入字节流(完整版)
		/// </summary>
		protected override void toWriteBytesFull(BytesWriteStream stream)
		{
			base.toWriteBytesFull(stream);
			
			stream.startWriteObj();
			
			stream.endWriteObj();
		}
		
	}
}
