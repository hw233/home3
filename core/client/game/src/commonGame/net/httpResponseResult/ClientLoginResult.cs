using ShineEngine;

/// <summary>
/// (generated by shine)
/// </summary>
public class ClientLoginResult:BaseData
{
	/// <summary>
	/// 结果数据
	/// </summary>
	public ClientLoginResultData data;
	
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=LoginHttpResponseResultType.ClientLogin;
	
	public ClientLoginResult()
	{
		_dataID=LoginHttpResponseResultType.ClientLogin;
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		BaseData dataT=stream.readDataFullNotNull();
		if(dataT!=null)
		{
			if(dataT is ClientLoginResultData)
			{
				this.data=(ClientLoginResultData)dataT;
			}
			else
			{
				this.data=new ClientLoginResultData();
				if(!(dataT.GetType().IsAssignableFrom(typeof(ClientLoginResultData))))
				{
					stream.throwTypeReadError(typeof(ClientLoginResultData),dataT.GetType());
				}
				this.data.shadowCopy(dataT);
			}
		}
		else
		{
			this.data=null;
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.data!=null)
		{
			stream.writeDataFullNotNull(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		this.data=(ClientLoginResultData)stream.readDataSimpleNotNull();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.data!=null)
		{
			stream.writeDataSimpleNotNull(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
	}
	
}
