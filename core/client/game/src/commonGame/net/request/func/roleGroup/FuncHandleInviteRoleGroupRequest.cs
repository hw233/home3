using ShineEngine;

/// <summary>
/// 处理邀请玩家群消息(generated by shine)
/// </summary>
public class FuncHandleInviteRoleGroupRequest:FuncRRequest
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameRequestType.FuncHandleInviteRoleGroup;
	
	/// <summary>
	/// 群id
	/// </summary>
	public long groupID;
	
	/// <summary>
	/// 邀请者
	/// </summary>
	public long invitor;
	
	/// <summary>
	/// 结果
	/// </summary>
	public int result;
	
	public FuncHandleInviteRoleGroupRequest()
	{
		_dataID=GameRequestType.FuncHandleInviteRoleGroup;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "FuncHandleInviteRoleGroupRequest";
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		base.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeLong(this.invitor);
		
		stream.writeLong(this.groupID);
		
		stream.writeInt(this.result);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeLong(this.invitor);
		
		stream.writeLong(this.groupID);
		
		stream.writeInt(this.result);
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("invitor");
		writer.sb.Append(':');
		writer.sb.Append(this.invitor);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("groupID");
		writer.sb.Append(':');
		writer.sb.Append(this.groupID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("result");
		writer.sb.Append(':');
		writer.sb.Append(this.result);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.invitor=0L;
		this.groupID=0L;
		this.result=0;
	}
	
	protected override void copyData()
	{
		base.copyData();
	}
	
	/// <summary>
	/// 创建实例
	/// </summary>
	public static FuncHandleInviteRoleGroupRequest create(int funcID,long invitor,long groupID,int result)
	{
		FuncHandleInviteRoleGroupRequest re=(FuncHandleInviteRoleGroupRequest)BytesControl.createRequest(dataID);
		re.funcID=funcID;
		re.invitor=invitor;
		re.groupID=groupID;
		re.result=result;
		return re;
	}
	
}
