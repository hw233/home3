using ShineEngine;

/// <summary>
/// 玩家聊天消息(generated by shine)
/// </summary>
public class PlayerChatRequest:GameRequest
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameRequestType.PlayerChat;
	
	/// <summary>
	/// 聊天数据
	/// </summary>
	public ChatData data;
	
	/// <summary>
	/// 频道
	/// </summary>
	public int channel;
	
	/// <summary>
	/// 二级索引
	/// </summary>
	public long key;
	
	public PlayerChatRequest()
	{
		_dataID=GameRequestType.PlayerChat;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "PlayerChatRequest";
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		base.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.data!=null)
		{
			stream.writeDataFullNotNull(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
		stream.writeInt(this.channel);
		
		stream.writeLong(this.key);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		if(this.data!=null)
		{
			stream.writeDataSimpleNotNull(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
		stream.writeInt(this.channel);
		
		stream.writeLong(this.key);
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("data");
		writer.sb.Append(':');
		if(this.data!=null)
		{
			this.data.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("ChatData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("channel");
		writer.sb.Append(':');
		writer.sb.Append(this.channel);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("key");
		writer.sb.Append(':');
		writer.sb.Append(this.key);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.data.release(pool);
		this.data=null;
		this.channel=0;
		this.key=0L;
	}
	
	protected override void copyData()
	{
		base.copyData();
		ChatData dataTemp=data;
		if(dataTemp!=null)
		{
			this.data=(ChatData)dataTemp.clone();
		}
		else
		{
			this.data=null;
			nullObjError("data");
		}
		
	}
	
	/// <summary>
	/// 创建实例
	/// </summary>
	public static PlayerChatRequest create(ChatData data,int channel,long key)
	{
		PlayerChatRequest re=(PlayerChatRequest)BytesControl.createRequest(dataID);
		re.data=data;
		re.channel=channel;
		re.key=key;
		return re;
	}
	
}
