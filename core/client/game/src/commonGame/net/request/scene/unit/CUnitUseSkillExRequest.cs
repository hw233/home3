using ShineEngine;

/// <summary>
/// 玩家单位使用技能拓展(generated by shine)
/// </summary>
public class CUnitUseSkillExRequest:CUnitUseSkillRequest
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameRequestType.CUnitUseSkillEx;
	
	/// <summary>
	/// 使用技能ID
	/// </summary>
	public int useSkillID;
	
	/// <summary>
	/// 随机种子序号
	/// </summary>
	public int seedIndex;
	
	public CUnitUseSkillExRequest()
	{
		_dataID=GameRequestType.CUnitUseSkillEx;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "CUnitUseSkillExRequest";
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("useSkillID");
		writer.sb.Append(':');
		writer.sb.Append(this.useSkillID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("seedIndex");
		writer.sb.Append(':');
		writer.sb.Append(this.seedIndex);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		base.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeInt(this.useSkillID);
		
		stream.writeInt(this.seedIndex);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.useSkillID);
		
		stream.writeInt(this.seedIndex);
		
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.useSkillID=0;
		this.seedIndex=0;
	}
	
	protected override void copyData()
	{
		base.copyData();
	}
	
	/// <summary>
	/// 创建实例
	/// </summary>
	public static CUnitUseSkillExRequest create(int instanceID,int skillID,SkillTargetData targetData,PosDirData posDir,bool isSuspend,int useSkillID,int seedIndex)
	{
		CUnitUseSkillExRequest re=(CUnitUseSkillExRequest)BytesControl.createRequest(dataID);
		re.instanceID=instanceID;
		re.skillID=skillID;
		re.targetData=targetData;
		re.posDir=posDir;
		re.isSuspend=isSuspend;
		re.useSkillID=useSkillID;
		re.seedIndex=seedIndex;
		return re;
	}
	
}
