using ShineEngine;

/// <summary>
/// 帧同步每帧消息(generated by shine)
/// </summary>
public class FrameSyncFrameResponse:SceneSResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.FrameSyncFrame;
	
	/// <summary>
	/// 帧数据
	/// </summary>
	public FrameSyncData frame;
	
	public FrameSyncFrameResponse()
	{
		_dataID=GameResponseType.FrameSyncFrame;
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		((BattleSceneSyncPlayLogic)scene.play).receiveFrame(frame);
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "FrameSyncFrameResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		BaseData frameT=stream.readDataFullNotNull();
		if(frameT!=null)
		{
			if(frameT is FrameSyncData)
			{
				this.frame=(FrameSyncData)frameT;
			}
			else
			{
				this.frame=new FrameSyncData();
				if(!(frameT.GetType().IsAssignableFrom(typeof(FrameSyncData))))
				{
					stream.throwTypeReadError(typeof(FrameSyncData),frameT.GetType());
				}
				this.frame.shadowCopy(frameT);
			}
		}
		else
		{
			this.frame=null;
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.frame=(FrameSyncData)stream.readDataSimpleNotNull();
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("frame");
		writer.sb.Append(':');
		if(this.frame!=null)
		{
			this.frame.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("FrameSyncData=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.frame=null;
	}
	
}
