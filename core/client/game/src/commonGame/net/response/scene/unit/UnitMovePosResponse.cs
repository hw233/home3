using ShineEngine;

/// <summary>
/// 单位移动位置(generated by shine)
/// </summary>
public class UnitMovePosResponse:UnitSResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.UnitMovePos;
	
	/// <summary>
	/// 移动类型
	/// </summary>
	public int type;
	
	/// <summary>
	/// 服务器首点移动时间(同步用)
	/// </summary>
	public int moveTime;
	
	/// <summary>
	/// 目标位置
	/// </summary>
	public PosData targetPos;
	
	public UnitMovePosResponse()
	{
		_dataID=GameResponseType.UnitMovePos;
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		unit.move.onServerMovePos(type,targetPos,moveTime);
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "UnitMovePosResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.type=stream.readInt();
		
		this.targetPos=(PosData)stream.createData(PosData.dataID);
		this.targetPos.readBytesFull(stream);
		
		this.moveTime=stream.readInt();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.type=stream.readInt();
		
		this.targetPos=(PosData)stream.createData(PosData.dataID);
		this.targetPos.readBytesSimple(stream);
		
		this.moveTime=stream.readInt();
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("type");
		writer.sb.Append(':');
		writer.sb.Append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("targetPos");
		writer.sb.Append(':');
		if(this.targetPos!=null)
		{
			this.targetPos.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("PosData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("moveTime");
		writer.sb.Append(':');
		writer.sb.Append(this.moveTime);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.type=0;
		this.targetPos=null;
		this.moveTime=0;
	}
	
}
