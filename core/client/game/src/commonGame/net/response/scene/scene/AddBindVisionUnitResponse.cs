using ShineEngine;

/// <summary>
/// 添加绑定视野单位(generated by shine)
/// </summary>
public class AddBindVisionUnitResponse:SceneSResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.AddBindVisionUnit;
	
	/// <summary>
	/// 实例ID
	/// </summary>
	public int instanceID;
	
	/// <summary>
	/// 单位数据(如为空则为在视野中)
	/// </summary>
	public UnitSimpleData data;
	
	public AddBindVisionUnitResponse()
	{
		_dataID=GameResponseType.AddBindVisionUnit;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "AddBindVisionUnitResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.instanceID=stream.readInt();
		
		if(stream.readBoolean())
		{
			BaseData dataT=stream.readDataFullNotNull();
			if(dataT!=null)
			{
				if(dataT is UnitSimpleData)
				{
					this.data=(UnitSimpleData)dataT;
				}
				else
				{
					this.data=new UnitSimpleData();
					if(!(dataT.GetType().IsAssignableFrom(typeof(UnitSimpleData))))
					{
						stream.throwTypeReadError(typeof(UnitSimpleData),dataT.GetType());
					}
					this.data.shadowCopy(dataT);
				}
			}
			else
			{
				this.data=null;
			}
		}
		else
		{
			this.data=null;
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.instanceID=stream.readInt();
		
		if(stream.readBoolean())
		{
			this.data=(UnitSimpleData)stream.readDataSimpleNotNull();
		}
		else
		{
			this.data=null;
		}
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("instanceID");
		writer.sb.Append(':');
		writer.sb.Append(this.instanceID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("data");
		writer.sb.Append(':');
		if(this.data!=null)
		{
			this.data.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("UnitSimpleData=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		if(data==null)
		{
			Unit unit=scene.getUnit(instanceID);

			if(unit==null)
			{
				me.warnLog("不该找不到单位");
				return;
			}

			scene.addBindVision(unit.createSimpleUnitData());
		}
		else
		{
			scene.addBindVision(data);
		}
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.instanceID=0;
		this.data=null;
	}
	
}
