using ShineEngine;

/// <summary>
/// 客户端热更配置消息(generated by shine)
/// </summary>
public class ClientHotfixConfigResponse:GameResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.ClientHotfixConfig;
	
	/// <summary>
	/// 热更数据
	/// </summary>
	public byte[] bytes;
	
	public ClientHotfixConfigResponse()
	{
		_dataID=GameResponseType.ClientHotfixConfig;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "ClientHotfixConfigResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		int bytesLen=stream.readLen();
		this.bytes=stream.readByteArr(bytesLen);
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		int bytesLen=stream.readLen();
		this.bytes=stream.readByteArr(bytesLen);
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("bytes");
		writer.sb.Append(':');
		writer.sb.Append("Array<byte>");
		if(this.bytes!=null)
		{
			byte[] bytesT=this.bytes;
			int bytesLen=bytesT.Length;
			writer.sb.Append('(');
			writer.sb.Append(bytesLen);
			writer.sb.Append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			for(int bytesI=0;bytesI<bytesLen;++bytesI)
			{
				byte bytesV=bytesT[bytesI];
				writer.writeTabs();
				writer.sb.Append(bytesI);
				writer.sb.Append(':');
				writer.sb.Append(bytesV);
				
				writer.writeEnter();
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.Append("=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		BaseC.config.loadHotfix(bytes);
		GameC.main.onReloadConfig();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.bytes=null;
	}
	
}
