using ShineEngine;

/// <summary>
/// 创建角色成功消息(generated by shine)
/// </summary>
public class CreatePlayerSuccessResponse:GameResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.CreatePlayerSuccess;
	
	public PlayerLoginData role;
	
	public CreatePlayerSuccessResponse()
	{
		_dataID=GameResponseType.CreatePlayerSuccess;
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		GameC.main.onCreatePlayerSuccess(role);
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "CreatePlayerSuccessResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		BaseData roleT=stream.readDataFullNotNull();
		if(roleT!=null)
		{
			if(roleT is PlayerLoginData)
			{
				this.role=(PlayerLoginData)roleT;
			}
			else
			{
				this.role=new PlayerLoginData();
				if(!(roleT.GetType().IsAssignableFrom(typeof(PlayerLoginData))))
				{
					stream.throwTypeReadError(typeof(PlayerLoginData),roleT.GetType());
				}
				this.role.shadowCopy(roleT);
			}
		}
		else
		{
			this.role=null;
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.role=(PlayerLoginData)stream.readDataSimpleNotNull();
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("role");
		writer.sb.Append(':');
		if(this.role!=null)
		{
			this.role.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("PlayerLoginData=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.role=null;
	}
	
}
