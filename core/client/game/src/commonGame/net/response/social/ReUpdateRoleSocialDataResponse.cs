using ShineEngine;

/// <summary>
/// 回复更新社交数据消息(generated by shine)
/// </summary>
public class ReUpdateRoleSocialDataResponse:GameResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.ReUpdateRoleSocialData;
	
	/// <summary>
	/// 变化的社交数据字典
	/// </summary>
	public LongObjectMap<RoleSocialData> dic;
	
	public ReUpdateRoleSocialDataResponse()
	{
		_dataID=GameResponseType.ReUpdateRoleSocialData;
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		me.social.onUpdateRoleSocialDatas(dic);
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "ReUpdateRoleSocialDataResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		int dicLen=stream.readLen();
		if(this.dic!=null)
		{
			this.dic.clear();
			this.dic.ensureCapacity(dicLen);
		}
		else
		{
			this.dic=new LongObjectMap<RoleSocialData>(dicLen);
		}
		
		LongObjectMap<RoleSocialData> dicT=this.dic;
		for(int dicI=dicLen-1;dicI>=0;--dicI)
		{
			RoleSocialData dicV;
			BaseData dicVT=stream.readDataFullNotNull();
			if(dicVT!=null)
			{
				if(dicVT is RoleSocialData)
				{
					dicV=(RoleSocialData)dicVT;
				}
				else
				{
					dicV=new RoleSocialData();
					if(!(dicVT.GetType().IsAssignableFrom(typeof(RoleSocialData))))
					{
						stream.throwTypeReadError(typeof(RoleSocialData),dicVT.GetType());
					}
					dicV.shadowCopy(dicVT);
				}
			}
			else
			{
				dicV=null;
			}
			
			dicT.put(dicV.showData.playerID,dicV);
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		int dicLen=stream.readLen();
		if(this.dic!=null)
		{
			this.dic.clear();
			this.dic.ensureCapacity(dicLen);
		}
		else
		{
			this.dic=new LongObjectMap<RoleSocialData>(dicLen);
		}
		
		LongObjectMap<RoleSocialData> dicT=this.dic;
		for(int dicI=dicLen-1;dicI>=0;--dicI)
		{
			RoleSocialData dicV;
			dicV=(RoleSocialData)stream.readDataSimpleNotNull();
			
			dicT.put(dicV.showData.playerID,dicV);
		}
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("dic");
		writer.sb.Append(':');
		writer.sb.Append("Map<long,RoleSocialData>");
		if(this.dic!=null)
		{
			writer.sb.Append('(');
			writer.sb.Append(this.dic.size());
			writer.sb.Append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.dic.isEmpty())
			{
				long dicKFreeValue=this.dic.getFreeValue();
				long[] dicKKeys=this.dic.getKeys();
				RoleSocialData[] dicVValues=this.dic.getValues();
				for(int dicKI=dicKKeys.Length-1;dicKI>=0;--dicKI)
				{
					long dicK=dicKKeys[dicKI];
					if(dicK!=dicKFreeValue)
					{
						RoleSocialData dicV=dicVValues[dicKI];
						writer.writeTabs();
						writer.sb.Append(dicK);
						
						writer.sb.Append(':');
						if(dicV!=null)
						{
							dicV.writeDataString(writer);
						}
						else
						{
							writer.sb.Append("RoleSocialData=null");
						}
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.Append("=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.dic=null;
	}
	
}
