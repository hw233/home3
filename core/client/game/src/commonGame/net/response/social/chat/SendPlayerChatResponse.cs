using ShineEngine;

/// <summary>
/// 推送角色聊天(generated by shine)
/// </summary>
public class SendPlayerChatResponse:GameResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.SendPlayerChat;
	
	/// <summary>
	/// 聊天数据
	/// </summary>
	public RoleChatData chatData;
	
	/// <summary>
	/// 频道
	/// </summary>
	public int channel;
	
	/// <summary>
	/// 二级索引
	/// </summary>
	public long key;
	
	public SendPlayerChatResponse()
	{
		_dataID=GameResponseType.SendPlayerChat;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "SendPlayerChatResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		BaseData chatDataT=stream.readDataFullNotNull();
		if(chatDataT!=null)
		{
			if(chatDataT is RoleChatData)
			{
				this.chatData=(RoleChatData)chatDataT;
			}
			else
			{
				this.chatData=new RoleChatData();
				if(!(chatDataT.GetType().IsAssignableFrom(typeof(RoleChatData))))
				{
					stream.throwTypeReadError(typeof(RoleChatData),chatDataT.GetType());
				}
				this.chatData.shadowCopy(chatDataT);
			}
		}
		else
		{
			this.chatData=null;
		}
		
		this.channel=stream.readInt();
		
		this.key=stream.readLong();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.chatData=(RoleChatData)stream.readDataSimpleNotNull();
		
		this.channel=stream.readInt();
		
		this.key=stream.readLong();
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("chatData");
		writer.sb.Append(':');
		if(this.chatData!=null)
		{
			this.chatData.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("RoleChatData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("channel");
		writer.sb.Append(':');
		writer.sb.Append(this.channel);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("key");
		writer.sb.Append(':');
		writer.sb.Append(this.key);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		me.social.onReceiveChat(chatData,channel,key);
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.chatData=null;
		this.channel=0;
		this.key=0L;
	}
	
}
