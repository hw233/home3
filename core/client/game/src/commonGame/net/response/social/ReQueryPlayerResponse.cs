using ShineEngine;

/// <summary>
/// 回复查询角色消息(generated by shine)
/// </summary>
public class ReQueryPlayerResponse:GameResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.ReQueryPlayer;
	
	/// <summary>
	/// 回复角色数据
	/// </summary>
	public QueryPlayerResultData result;
	
	public ReQueryPlayerResponse()
	{
		_dataID=GameResponseType.ReQueryPlayer;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "ReQueryPlayerResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		BaseData resultT=stream.readDataFullNotNull();
		if(resultT!=null)
		{
			if(resultT is QueryPlayerResultData)
			{
				this.result=(QueryPlayerResultData)resultT;
			}
			else
			{
				this.result=new QueryPlayerResultData();
				if(!(resultT.GetType().IsAssignableFrom(typeof(QueryPlayerResultData))))
				{
					stream.throwTypeReadError(typeof(QueryPlayerResultData),resultT.GetType());
				}
				this.result.shadowCopy(resultT);
			}
		}
		else
		{
			this.result=null;
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.result=(QueryPlayerResultData)stream.readDataSimpleNotNull();
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("result");
		writer.sb.Append(':');
		if(this.result!=null)
		{
			this.result.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("QueryPlayerResultData=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		me.social.onQueryPlayerResult(result);
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.result=null;
	}
	
}
