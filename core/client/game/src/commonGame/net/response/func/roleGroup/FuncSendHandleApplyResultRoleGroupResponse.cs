using ShineEngine;

/// <summary>
/// 推送处理申请结果玩家群(generated by shine)
/// </summary>
public class FuncSendHandleApplyResultRoleGroupResponse:FuncSResponse
{
	/// <summary>
	/// 群id
	/// </summary>
	public long groupID;
	
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=GameResponseType.FuncSendHandleApplyResultRoleGroup;
	
	/// <summary>
	/// 结果
	/// </summary>
	public int result;
	
	public FuncSendHandleApplyResultRoleGroupResponse()
	{
		_dataID=GameResponseType.FuncSendHandleApplyResultRoleGroup;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "FuncSendHandleApplyResultRoleGroupResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.groupID=stream.readLong();
		
		this.result=stream.readInt();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.groupID=stream.readLong();
		
		this.result=stream.readInt();
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("groupID");
		writer.sb.Append(':');
		writer.sb.Append(this.groupID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("result");
		writer.sb.Append(':');
		writer.sb.Append(this.result);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		me.func.getRoleGroupTool(funcID).onApplyResult(groupID,result);
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.groupID=0L;
		this.result=0;
	}
	
}
