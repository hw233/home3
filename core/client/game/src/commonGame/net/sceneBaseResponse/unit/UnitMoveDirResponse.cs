using ShineEngine;

/// <summary>
/// 单位移动朝向消息(generated by shine)
/// </summary>
public class UnitMoveDirResponse:UnitSResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=SceneBaseResponseType.UnitMoveDir;
	
	/// <summary>
	/// 移动类型
	/// </summary>
	public int type;
	
	/// <summary>
	/// 实际移动朝向
	/// </summary>
	public DirData realMoveDir;
	
	/// <summary>
	/// 实际移动速度比率
	/// </summary>
	public int realMoveSpeedRatio;
	
	/// <summary>
	/// 目标朝向
	/// </summary>
	public DirData dir;
	
	public UnitMoveDirResponse()
	{
		_dataID=SceneBaseResponseType.UnitMoveDir;
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		unit.move.onServerMoveDir(type,dir,realMoveDir,realMoveSpeedRatio);
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "UnitMoveDirResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.type=stream.readInt();
		
		this.dir=(DirData)stream.createData(DirData.dataID);
		this.dir.readBytesFull(stream);
		
		if(stream.readBoolean())
		{
			this.realMoveDir=(DirData)stream.createData(DirData.dataID);
			this.realMoveDir.readBytesFull(stream);
		}
		else
		{
			this.realMoveDir=null;
		}
		
		this.realMoveSpeedRatio=stream.readInt();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.type=stream.readInt();
		
		this.dir=(DirData)stream.createData(DirData.dataID);
		this.dir.readBytesSimple(stream);
		
		if(stream.readBoolean())
		{
			this.realMoveDir=(DirData)stream.createData(DirData.dataID);
			this.realMoveDir.readBytesSimple(stream);
		}
		else
		{
			this.realMoveDir=null;
		}
		
		this.realMoveSpeedRatio=stream.readInt();
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("type");
		writer.sb.Append(':');
		writer.sb.Append(this.type);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("dir");
		writer.sb.Append(':');
		if(this.dir!=null)
		{
			this.dir.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("DirData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("realMoveDir");
		writer.sb.Append(':');
		if(this.realMoveDir!=null)
		{
			this.realMoveDir.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("DirData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("realMoveSpeedRatio");
		writer.sb.Append(':');
		writer.sb.Append(this.realMoveSpeedRatio);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.type=0;
		this.dir=null;
		this.realMoveDir=null;
		this.realMoveSpeedRatio=0;
	}
	
}
