using ShineEngine;

/// <summary>
/// 单位直接更改位置朝向消息(generated by shine)
/// </summary>
public class UnitSetPosDirResponse:UnitSResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=SceneBaseResponseType.UnitSetPosDir;
	
	/// <summary>
	/// 位置朝向
	/// </summary>
	public PosDirData posDir;
	
	public UnitSetPosDirResponse()
	{
		_dataID=SceneBaseResponseType.UnitSetPosDir;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "UnitSetPosDirResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.posDir=(PosDirData)stream.createData(PosDirData.dataID);
		this.posDir.readBytesFull(stream);
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.posDir=(PosDirData)stream.createData(PosDirData.dataID);
		this.posDir.readBytesSimple(stream);
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("posDir");
		writer.sb.Append(':');
		if(this.posDir!=null)
		{
			this.posDir.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("PosDirData=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		unit.move.onServerSetPosDir(posDir);
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.posDir=null;
	}
	
}
