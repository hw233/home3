using ShineEngine;

/// <summary>
/// 中心服推送信息码(generated by shine)
/// </summary>
public class SendInfoCodeFromCenterResponse:CenterResponse
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=CenterResponseType.SendInfoCodeFromCenter;
	
	/// <summary>
	/// 错误码
	/// </summary>
	public int code;
	
	public SendInfoCodeFromCenterResponse()
	{
		_dataID=CenterResponseType.SendInfoCodeFromCenter;
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void execute()
	{
		GameC.info.toShowInfoCode(code,true,null);
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "SendInfoCodeFromCenterResponse";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		this.code=stream.readInt();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.code=stream.readInt();
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("code");
		writer.sb.Append(':');
		writer.sb.Append(this.code);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.code=0;
	}
	
}
