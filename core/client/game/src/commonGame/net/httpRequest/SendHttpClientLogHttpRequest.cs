using ShineEngine;

/// <summary>
/// (generated by shine)
/// </summary>
public class SendHttpClientLogHttpRequest:LoginHttpRequest
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=LoginHttpRequestType.SendHttpClientLog;
	
	/// <summary>
	/// uid
	/// </summary>
	public string uid;
	
	/// <summary>
	/// 类型
	/// </summary>
	public int type;
	
	/// <summary>
	/// 内容
	/// </summary>
	public string content;
	
	public SendHttpClientLogHttpRequest()
	{
		_dataID=LoginHttpRequestType.SendHttpClientLog;
	}
	
	/// <summary>
	/// 执行
	/// </summary>
	protected override void onComplete()
	{
		
	}
	
	/// <summary>
	/// 同步执行
	/// </summary>
	public void sendMSync()
	{
		doSendSync();
		return;
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		base.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		stream.writeUTF(this.uid);
		
		stream.writeInt(this.type);
		
		stream.writeUTF(this.content);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeUTF(this.uid);
		
		stream.writeInt(this.type);
		
		stream.writeUTF(this.content);
		
	}
	
	protected override void copyData()
	{
		base.copyData();
	}
	
	/// <summary>
	/// 创建实例
	/// </summary>
	public static SendHttpClientLogHttpRequest create(string uid,int type,string content)
	{
		SendHttpClientLogHttpRequest re=new SendHttpClientLogHttpRequest();
		re.uid=uid;
		re.type=type;
		re.content=content;
		return re;
	}
	
}
