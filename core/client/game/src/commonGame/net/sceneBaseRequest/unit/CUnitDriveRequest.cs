using ShineEngine;

/// <summary>
/// 单位驾驶消息(generated by shine)
/// </summary>
public class CUnitDriveRequest:CUnitRRequest
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=SceneBaseRequestType.CUnitDrive;
	
	/// <summary>
	/// 驾驶数据
	/// </summary>
	public DriveData data;
	
	/// <summary>
	/// 当前位置
	/// </summary>
	public PosDirData nowPos;
	
	public CUnitDriveRequest()
	{
		_dataID=SceneBaseRequestType.CUnitDrive;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "CUnitDriveRequest";
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		base.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.nowPos!=null)
		{
			stream.writeBoolean(true);
			this.nowPos.writeBytesFull(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.data!=null)
		{
			stream.writeDataFullNotNull(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		if(this.nowPos!=null)
		{
			stream.writeBoolean(true);
			this.nowPos.writeBytesSimple(stream);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		if(this.data!=null)
		{
			stream.writeDataSimpleNotNull(this.data);
		}
		else
		{
			nullObjError("data");
		}
		
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("nowPos");
		writer.sb.Append(':');
		if(this.nowPos!=null)
		{
			this.nowPos.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("PosDirData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("data");
		writer.sb.Append(':');
		if(this.data!=null)
		{
			this.data.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("DriveData=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		if(this.nowPos!=null)
		{
			this.nowPos.release(pool);
			this.nowPos=null;
		}
		this.data.release(pool);
		this.data=null;
	}
	
	protected override void copyData()
	{
		base.copyData();
		PosDirData nowPosTemp=nowPos;
		if(nowPosTemp!=null)
		{
			this.nowPos=(PosDirData)BytesControl.createData(PosDirData.dataID);
			this.nowPos.copy(nowPosTemp);
		}
		else
		{
			this.nowPos=null;
		}
		
		DriveData dataTemp=data;
		if(dataTemp!=null)
		{
			this.data=(DriveData)dataTemp.clone();
		}
		else
		{
			this.data=null;
			nullObjError("data");
		}
		
	}
	
	/// <summary>
	/// 创建实例
	/// </summary>
	public static CUnitDriveRequest create(int instanceID,PosDirData nowPos,DriveData data)
	{
		CUnitDriveRequest re=(CUnitDriveRequest)BytesControl.createRequest(dataID);
		re.instanceID=instanceID;
		re.nowPos=nowPos;
		re.data=data;
		return re;
	}
	
}
