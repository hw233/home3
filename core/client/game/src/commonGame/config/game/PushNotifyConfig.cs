using ShineEngine;

/// <summary>
/// 推送表(generated by shine)
/// </summary>
public class PushNotifyConfig:BaseConfig
{
	/** 存储集合 */
	private static PushNotifyConfig[] _dic;
	
	/// <summary>
	/// id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 参数1
	/// </summary>
	public int[] param1;
	
	/// <summary>
	/// 标题
	/// </summary>
	public string title;
	
	/// <summary>
	/// 用户标签
	/// </summary>
	public int topicType;
	
	/// <summary>
	/// 文字
	/// </summary>
	public string text;
	
	/** 标题原值 */
	private string _title;
	
	/** 文字原值 */
	private string _text;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static PushNotifyConfig get(int id)
	{
		return id>=0 && id<_dic.Length ? _dic[id] : null;
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(PushNotifyConfig[] dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(PushNotifyConfig[] dic)
	{
		ObjectUtils.arrayPutAll(_dic,dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static PushNotifyConfig[] getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		int param1Len=stream.readLen();
		if(this.param1==null || this.param1.Length!=param1Len)
		{
			this.param1=new int[param1Len];
		}
		int[] param1T=this.param1;
		for(int param1I=0;param1I<param1Len;++param1I)
		{
			int param1V;
			param1V=stream.readInt();
			
			param1T[param1I]=param1V;
		}
		
		this.title=stream.readUTF();
		
		this.text=stream.readUTF();
		
		this.topicType=stream.readInt();
		
	}
	
	/// <summary>
	/// 生成刷新配置
	/// </summary>
	protected override void generateRefresh()
	{
		if(_title==null)
			_title=title;
		title=LanguageConfig.getText(_title);
		
		if(_text==null)
			_text=text;
		text=LanguageConfig.getText(_text);
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		if(this.param1!=null)
		{
			int[] param1T=this.param1;
			stream.writeLen(param1T.Length);
			for(int param1VI=0,param1VLen=param1T.Length;param1VI<param1VLen;++param1VI)
			{
				int param1V=param1T[param1VI];
				stream.writeInt(param1V);
				
			}
		}
		else
		{
			nullObjError("param1");
		}
		
		stream.writeUTF(this.title);
		
		stream.writeUTF(this.text);
		
		stream.writeInt(this.topicType);
		
	}
	
}
