using ShineEngine;

/// <summary>
/// 单位外观表(generated by shine)
/// </summary>
public class FacadeConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<FacadeConfig> _dic;
	
	/// <summary>
	/// 变身优先级
	/// </summary>
	public int proirity;
	
	/// <summary>
	/// 部件组
	/// </summary>
	public DIntData[] parts;
	
	/// <summary>
	/// 模型ID
	/// </summary>
	public int modelID;
	
	/// <summary>
	/// 显示ID
	/// </summary>
	public int id;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static FacadeConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<FacadeConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<FacadeConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<FacadeConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.modelID=stream.readInt();
		
		int partsLen=stream.readLen();
		if(this.parts==null || this.parts.Length!=partsLen)
		{
			this.parts=new DIntData[partsLen];
		}
		DIntData[] partsT=this.parts;
		for(int partsI=0;partsI<partsLen;++partsI)
		{
			DIntData partsV;
			partsV=(DIntData)stream.createData(DIntData.dataID);
			partsV.readBytesSimple(stream);
			
			partsT[partsI]=partsV;
		}
		
		this.proirity=stream.readInt();
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.modelID);
		
		if(this.parts!=null)
		{
			DIntData[] partsT=this.parts;
			stream.writeLen(partsT.Length);
			for(int partsVI=0,partsVLen=partsT.Length;partsVI<partsVLen;++partsVI)
			{
				DIntData partsV=partsT[partsVI];
				if(partsV!=null)
				{
					partsV.writeBytesSimple(stream);
				}
				else
				{
					nullObjError("partsV");
				}
				
			}
		}
		else
		{
			nullObjError("parts");
		}
		
		stream.writeInt(this.proirity);
		
	}
	
}
