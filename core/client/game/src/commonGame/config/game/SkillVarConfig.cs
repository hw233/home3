using ShineEngine;

/// <summary>
/// 技能变量表(generated by shine)
/// </summary>
public class SkillVarConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<SkillVarConfig> _dic;
	
	/// <summary>
	/// 公式类型
	/// </summary>
	public int formulaType;
	
	/// <summary>
	/// 公式参数
	/// </summary>
	public int[][] args;
	
	/// <summary>
	/// 变量id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static SkillVarConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<SkillVarConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<SkillVarConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<SkillVarConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.formulaType=stream.readInt();
		
		int argsLen=stream.readLen();
		if(this.args==null || this.args.Length!=argsLen)
		{
			this.args=new int[argsLen][];
		}
		int[][] argsT=this.args;
		for(int argsI=0;argsI<argsLen;++argsI)
		{
			int[] argsV;
			int argsVLen=stream.readLen();
			argsV=new int[argsVLen];
			int[] argsVT=argsV;
			for(int argsVI=0;argsVI<argsVLen;++argsVI)
			{
				int argsVV;
				argsVV=stream.readInt();
				
				argsVT[argsVI]=argsVV;
			}
			
			argsT[argsI]=argsV;
		}
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.formulaType);
		
		if(this.args!=null)
		{
			int[][] argsT=this.args;
			stream.writeLen(argsT.Length);
			for(int argsVI=0,argsVLen=argsT.Length;argsVI<argsVLen;++argsVI)
			{
				int[] argsV=argsT[argsVI];
				if(argsV!=null)
				{
					int[] argsVT=argsV;
					stream.writeLen(argsVT.Length);
					for(int argsVVI=0,argsVVLen=argsVT.Length;argsVVI<argsVVLen;++argsVVI)
					{
						int argsVV=argsVT[argsVVI];
						stream.writeInt(argsVV);
						
					}
				}
				else
				{
					nullObjError("argsV");
				}
				
			}
		}
		else
		{
			nullObjError("args");
		}
		
	}
	
}
