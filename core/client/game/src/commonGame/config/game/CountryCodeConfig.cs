using ShineEngine;

/// <summary>
/// 国家地区表(登录用)(generated by shine)
/// </summary>
public class CountryCodeConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<CountryCodeConfig> _dic;
	
	/// <summary>
	/// id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 匹配的关键字组
	/// </summary>
	public string[] marks;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static CountryCodeConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<CountryCodeConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<CountryCodeConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<CountryCodeConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		int marksLen=stream.readLen();
		if(this.marks==null || this.marks.Length!=marksLen)
		{
			this.marks=new string[marksLen];
		}
		string[] marksT=this.marks;
		for(int marksI=0;marksI<marksLen;++marksI)
		{
			string marksV;
			marksV=stream.readUTF();
			
			marksT[marksI]=marksV;
		}
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		if(this.marks!=null)
		{
			string[] marksT=this.marks;
			stream.writeLen(marksT.Length);
			for(int marksVI=0,marksVLen=marksT.Length;marksVI<marksVLen;++marksVI)
			{
				string marksV=marksT[marksVI];
				stream.writeUTF(marksV);
				
			}
		}
		else
		{
			nullObjError("marks");
		}
		
	}
	
}
