using ShineEngine;

/// <summary>
/// 进度条表(generated by shine)
/// </summary>
public class ProgressBarConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<ProgressBarConfig> _dic;
	
	/// <summary>
	/// 读条ID
	/// </summary>
	public int id;
	
	/// <summary>
	/// 类型
	/// </summary>
	public int type;
	
	/// <summary>
	/// 时长(ms)
	/// </summary>
	public int time;
	
	/// <summary>
	/// 资源
	/// </summary>
	public string source;
	
	/// <summary>
	/// 资源(资源转)
	/// </summary>
	public int sourceT;
	
	/// <summary>
	/// 声音
	/// </summary>
	public string sound;
	
	/// <summary>
	/// 声音(资源转)
	/// </summary>
	public int soundT;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static ProgressBarConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<ProgressBarConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<ProgressBarConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<ProgressBarConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.type=stream.readInt();
		
		this.time=stream.readInt();
		
		this.source=stream.readUTF();
		
		this.sound=stream.readUTF();
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 生成刷新配置
	/// </summary>
	protected override void generateRefresh()
	{
		sourceT=LoadControl.getResourceIDByName(source);
		soundT=LoadControl.getResourceIDByName(sound);
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.type);
		
		stream.writeInt(this.time);
		
		stream.writeUTF(this.source);
		
		stream.writeUTF(this.sound);
		
	}
	
}
