using ShineEngine;

/// <summary>
/// 场景特效表(generated by shine)
/// </summary>
public class SceneEffectConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<SceneEffectConfig> _dic;
	
	/// <summary>
	/// id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 模型ID
	/// </summary>
	public int modelID;
	
	/// <summary>
	/// 自动移除时间(未实现)(ms)
	/// </summary>
	public int autoRemoveTime;
	
	/// <summary>
	/// 特效ID
	/// </summary>
	public int effectID;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static SceneEffectConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<SceneEffectConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<SceneEffectConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<SceneEffectConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.modelID=stream.readInt();
		
		this.effectID=stream.readInt();
		
		this.autoRemoveTime=stream.readInt();
		
	}
	
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.modelID);
		
		stream.writeInt(this.effectID);
		
		stream.writeInt(this.autoRemoveTime);
		
	}
	
}
