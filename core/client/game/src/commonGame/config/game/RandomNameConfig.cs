using ShineEngine;

/// <summary>
/// 随机名字表(generated by shine)
/// </summary>
public class RandomNameConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<RandomNameConfig> _dic;
	
	/// <summary>
	/// 主键
	/// </summary>
	public int id;
	
	/// <summary>
	/// 首名(姓)
	/// </summary>
	public string firstName;
	
	/// <summary>
	/// 次名(名)
	/// </summary>
	public string secondName;
	
	/// <summary>
	/// 组
	/// </summary>
	public int group;
	
	/** 随机组 */
	private static IntObjectMap<RandomNameGroupData> _randomDic;
	
	/** 首名(姓)原值 */
	private string _firstName;
	
	/** 次名(名)原值 */
	private string _secondName;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static RandomNameConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<RandomNameConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<RandomNameConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<RandomNameConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.firstName=stream.readUTF();
		
		this.secondName=stream.readUTF();
		
		this.group=stream.readInt();
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		_randomDic=new IntObjectMap<RandomNameGroupData>();

		if(_dic!=null)
		{
			RandomNameConfig[] values;
			RandomNameConfig v;

			RandomNameGroupData gData;

			for(int i=(values=_dic.getValues()).Length-1;i>=0;--i)
			{
				if((v=values[i])!=null)
				{
					gData=_randomDic.computeIfAbsent(v.group,k=>new RandomNameGroupData());

					if(v.firstName.isEmpty())
					{
						gData.firstNames.add(v.firstName);
					}

					if(!v.secondName.isEmpty())
					{
						gData.secondNames.add(v.secondName);
					}
				}
			}
		}
	}
	
	/// <summary>
	/// 随机一个名字
	/// </summary>
	public static string randomName(int group)
	{
		RandomNameGroupData gData=_randomDic.get(group);

		if(gData==null)
		{
			Ctrl.throwError("没有此随机名字组");
			return "";
		}

		return gData.randomName();
	}
	
	/// <summary>
	/// 生成刷新配置
	/// </summary>
	protected override void generateRefresh()
	{
		if(_firstName==null)
			_firstName=firstName;
		firstName=LanguageConfig.getText(_firstName);
		
		if(_secondName==null)
			_secondName=secondName;
		secondName=LanguageConfig.getText(_secondName);
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeUTF(this.firstName);
		
		stream.writeUTF(this.secondName);
		
		stream.writeInt(this.group);
		
	}
	
}
