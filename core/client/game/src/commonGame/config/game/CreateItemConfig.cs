using ShineEngine;

/// <summary>
/// 创建单个物品配置(不包含数量)(generated by shine)
/// </summary>
public class CreateItemConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<CreateItemConfig> _dic;
	
	/// <summary>
	/// 是否绑定(或拾取后绑定)
	/// </summary>
	public bool isBind;
	
	/// <summary>
	/// 道具id(基础)
	/// </summary>
	public int itemID;
	
	/// <summary>
	/// id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 参数组(dint数组)
	/// </summary>
	public DIntData[] dintArgs;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static CreateItemConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<CreateItemConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<CreateItemConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<CreateItemConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.itemID=stream.readInt();
		
		this.isBind=stream.readBoolean();
		
		int dintArgsLen=stream.readLen();
		if(this.dintArgs==null || this.dintArgs.Length!=dintArgsLen)
		{
			this.dintArgs=new DIntData[dintArgsLen];
		}
		DIntData[] dintArgsT=this.dintArgs;
		for(int dintArgsI=0;dintArgsI<dintArgsLen;++dintArgsI)
		{
			DIntData dintArgsV;
			dintArgsV=(DIntData)stream.createData(DIntData.dataID);
			dintArgsV.readBytesSimple(stream);
			
			dintArgsT[dintArgsI]=dintArgsV;
		}
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.itemID);
		
		stream.writeBoolean(this.isBind);
		
		if(this.dintArgs!=null)
		{
			DIntData[] dintArgsT=this.dintArgs;
			stream.writeLen(dintArgsT.Length);
			for(int dintArgsVI=0,dintArgsVLen=dintArgsT.Length;dintArgsVI<dintArgsVLen;++dintArgsVI)
			{
				DIntData dintArgsV=dintArgsT[dintArgsVI];
				if(dintArgsV!=null)
				{
					dintArgsV.writeBytesSimple(stream);
				}
				else
				{
					nullObjError("dintArgsV");
				}
				
			}
		}
		else
		{
			nullObjError("dintArgs");
		}
		
	}
	
}
