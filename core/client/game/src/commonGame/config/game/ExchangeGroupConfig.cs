using ShineEngine;

/// <summary>
/// 兑换组表(generated by shine)
/// </summary>
public class ExchangeGroupConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<ExchangeGroupConfig> _dic;
	
	/// <summary>
	/// 兑换条件
	/// </summary>
	public int[][] conditions;
	
	/// <summary>
	/// id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 是否可客户端直接发起
	/// </summary>
	public bool canClientUse;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static ExchangeGroupConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<ExchangeGroupConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<ExchangeGroupConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<ExchangeGroupConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		int conditionsLen=stream.readLen();
		if(this.conditions==null || this.conditions.Length!=conditionsLen)
		{
			this.conditions=new int[conditionsLen][];
		}
		int[][] conditionsT=this.conditions;
		for(int conditionsI=0;conditionsI<conditionsLen;++conditionsI)
		{
			int[] conditionsV;
			int conditionsVLen=stream.readLen();
			conditionsV=new int[conditionsVLen];
			int[] conditionsVT=conditionsV;
			for(int conditionsVI=0;conditionsVI<conditionsVLen;++conditionsVI)
			{
				int conditionsVV;
				conditionsVV=stream.readInt();
				
				conditionsVT[conditionsVI]=conditionsVV;
			}
			
			conditionsT[conditionsI]=conditionsV;
		}
		
		this.canClientUse=stream.readBoolean();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		if(this.conditions!=null)
		{
			int[][] conditionsT=this.conditions;
			stream.writeLen(conditionsT.Length);
			for(int conditionsVI=0,conditionsVLen=conditionsT.Length;conditionsVI<conditionsVLen;++conditionsVI)
			{
				int[] conditionsV=conditionsT[conditionsVI];
				if(conditionsV!=null)
				{
					int[] conditionsVT=conditionsV;
					stream.writeLen(conditionsVT.Length);
					for(int conditionsVVI=0,conditionsVVLen=conditionsVT.Length;conditionsVVI<conditionsVVLen;++conditionsVVI)
					{
						int conditionsVV=conditionsVT[conditionsVVI];
						stream.writeInt(conditionsVV);
						
					}
				}
				else
				{
					nullObjError("conditionsV");
				}
				
			}
		}
		else
		{
			nullObjError("conditions");
		}
		
		stream.writeBoolean(this.canClientUse);
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
}
