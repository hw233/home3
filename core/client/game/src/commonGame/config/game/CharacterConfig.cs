using ShineEngine;

/// <summary>
/// 角色表(generated by shine)
/// </summary>
public class CharacterConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<CharacterConfig> _dic;
	
	/// <summary>
	/// id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 战斗单位ID
	/// </summary>
	public int fightUnitID;
	
	/// <summary>
	/// 性别
	/// </summary>
	public int sex;
	
	/// <summary>
	/// 职业
	/// </summary>
	public int vocation;
	
	/// <summary>
	/// 头像
	/// </summary>
	public string icon;
	
	/// <summary>
	/// 头像(资源转)
	/// </summary>
	public int iconT;
	
	/** 职业性别字典 */
	private static IntObjectMap<CharacterConfig> _vsDic;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static CharacterConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<CharacterConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<CharacterConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<CharacterConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.icon=stream.readUTF();
		
		this.fightUnitID=stream.readInt();
		
		this.vocation=stream.readInt();
		
		this.sex=stream.readInt();
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		_vsDic=new IntObjectMap<CharacterConfig>();

		if(_dic!=null)
		{
			CharacterConfig[] values;
			CharacterConfig v;

			for(int i=(values=_dic.getValues()).Length-1;i>=0;--i)
			{
				if((v=values[i])!=null)
				{
					_vsDic.put(v.vocation<<4 | v.sex,v);
				}
			}
		}
	}
	
	/// <summary>
	/// 通过职业和性别获取职业配置
	/// </summary>
	public static CharacterConfig getCharacterConfigByVocationAndSex(int vocation,int sex)
	{
		return _vsDic.get(vocation<<4 | sex);
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeUTF(this.icon);
		
		stream.writeInt(this.fightUnitID);
		
		stream.writeInt(this.vocation);
		
		stream.writeInt(this.sex);
		
	}
	
	/// <summary>
	/// 生成刷新配置
	/// </summary>
	protected override void generateRefresh()
	{
		iconT=LoadControl.getResourceIDByName(icon);
	}
	
}
