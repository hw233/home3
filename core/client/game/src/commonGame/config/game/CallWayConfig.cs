using ShineEngine;

/// <summary>
/// 调用方式表(generated by shine)
/// </summary>
public class CallWayConfig:BaseConfig
{
	/** 存储集合 */
	private static IntObjectMap<CallWayConfig> _dic;
	
	/// <summary>
	/// 点
	/// </summary>
	public int id;
	
	/// <summary>
	/// 名字
	/// </summary>
	public string name;
	
	/// <summary>
	/// 背包满时邮件ID
	/// </summary>
	public int mailID;
	
	/// <summary>
	/// 是否需要获得物品提示
	/// </summary>
	public bool needAddItemNotice;
	
	/// <summary>
	/// 描述
	/// </summary>
	public string describe;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static CallWayConfig get(int id)
	{
		return _dic.get(id);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(IntObjectMap<CallWayConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(IntObjectMap<CallWayConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static IntObjectMap<CallWayConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.name=stream.readUTF();
		
		this.describe=stream.readUTF();
		
		this.mailID=stream.readInt();
		
		this.needAddItemNotice=stream.readBoolean();
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeUTF(this.name);
		
		stream.writeUTF(this.describe);
		
		stream.writeInt(this.mailID);
		
		stream.writeBoolean(this.needAddItemNotice);
		
	}
	
}
