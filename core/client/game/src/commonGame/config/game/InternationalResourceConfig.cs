using ShineEngine;

/// <summary>
/// 国际化资源表(generated by shine)
/// </summary>
public class InternationalResourceConfig:BaseConfig
{
	/** 存储集合 */
	private static SMap<string,InternationalResourceConfig> _dic;
	
	/// <summary>
	/// 键
	/// </summary>
	public string key;
	
	/// <summary>
	/// 简体中文
	/// </summary>
	public string zh_CN;
	
	/// <summary>
	/// 美国英语
	/// </summary>
	public string en_US;
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static SMap<string,InternationalResourceConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.key=stream.readUTF();
		
		this.zh_CN=stream.readUTF();
		
		this.en_US=stream.readUTF();
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		
	}
	
	/// <summary>
	/// 获取
	/// </summary>
	public static InternationalResourceConfig get(string key)
	{
		return _dic.get(key);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(SMap<string,InternationalResourceConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(SMap<string,InternationalResourceConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	protected virtual string getStr(int type)
	{
		switch(type)
		{
			case LanguageType.Zh_CN:
				return zh_CN;
			case LanguageType.En_US:
				return en_US;
		}

		return null;
	}
	
	public static string getText(string key)
	{
		if(key.isEmpty())
			return key;

		InternationalResourceConfig config;
		string re;

		if((config=get(key))!=null && (re=config.getStr(CommonSetting.languageType))!=null)
			return re;

		if(CommonSetting.useMultiLanguage)
		{
			Ctrl.throwError("InternationalResourceConfig",key);
		}

		return key;
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeUTF(this.key);
		
		stream.writeUTF(this.zh_CN);
		
		stream.writeUTF(this.en_US);
		
	}
	
}
