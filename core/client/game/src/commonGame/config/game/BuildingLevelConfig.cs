using ShineEngine;

/// <summary>
/// 建筑等级表(generated by shine)
/// </summary>
public class BuildingLevelConfig:BaseConfig
{
	/** 存储集合 */
	private static LongObjectMap<BuildingLevelConfig> _dic;
	
	/// <summary>
	/// id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 消耗ID
	/// </summary>
	public int costID;
	
	/// <summary>
	/// 等级
	/// </summary>
	public int level;
	
	/// <summary>
	/// 占用角色属性(建筑消失后归还)
	/// </summary>
	public DIntData[] useRoleAttributes;
	
	/// <summary>
	/// 增加功能组(建造好后)
	/// </summary>
	public int[][] addActions;
	
	/// <summary>
	/// 增加角色属性组(建造好后)
	/// </summary>
	public DIntData[] addRoleAttributes;
	
	/// <summary>
	/// 建造时间(ms)
	/// </summary>
	public int buildTime;
	
	/// <summary>
	/// 升级时间(ms)
	/// </summary>
	public int levelUpTime;
	
	/// <summary>
	/// 获取
	/// </summary>
	public static BuildingLevelConfig get(int id,int level)
	{
		return _dic.get((long)id << 16 | (long)level);
	}
	
	/// <summary>
	/// 设置字典
	/// </summary>
	public static void setDic(LongObjectMap<BuildingLevelConfig> dic)
	{
		_dic=dic;
	}
	
	/// <summary>
	/// 添加字典(热更用)
	/// </summary>
	public static void addDic(LongObjectMap<BuildingLevelConfig> dic)
	{
		_dic.putAll(dic);
	}
	
	/// <summary>
	/// 获取全部
	/// </summary>
	public static LongObjectMap<BuildingLevelConfig> getDic()
	{
		return _dic;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		this.id=stream.readInt();
		
		this.level=stream.readShort();
		
		this.costID=stream.readInt();
		
		int useRoleAttributesLen=stream.readLen();
		if(this.useRoleAttributes==null || this.useRoleAttributes.Length!=useRoleAttributesLen)
		{
			this.useRoleAttributes=new DIntData[useRoleAttributesLen];
		}
		DIntData[] useRoleAttributesT=this.useRoleAttributes;
		for(int useRoleAttributesI=0;useRoleAttributesI<useRoleAttributesLen;++useRoleAttributesI)
		{
			DIntData useRoleAttributesV;
			useRoleAttributesV=(DIntData)stream.createData(DIntData.dataID);
			useRoleAttributesV.readBytesSimple(stream);
			
			useRoleAttributesT[useRoleAttributesI]=useRoleAttributesV;
		}
		
		int addRoleAttributesLen=stream.readLen();
		if(this.addRoleAttributes==null || this.addRoleAttributes.Length!=addRoleAttributesLen)
		{
			this.addRoleAttributes=new DIntData[addRoleAttributesLen];
		}
		DIntData[] addRoleAttributesT=this.addRoleAttributes;
		for(int addRoleAttributesI=0;addRoleAttributesI<addRoleAttributesLen;++addRoleAttributesI)
		{
			DIntData addRoleAttributesV;
			addRoleAttributesV=(DIntData)stream.createData(DIntData.dataID);
			addRoleAttributesV.readBytesSimple(stream);
			
			addRoleAttributesT[addRoleAttributesI]=addRoleAttributesV;
		}
		
		int addActionsLen=stream.readLen();
		if(this.addActions==null || this.addActions.Length!=addActionsLen)
		{
			this.addActions=new int[addActionsLen][];
		}
		int[][] addActionsT=this.addActions;
		for(int addActionsI=0;addActionsI<addActionsLen;++addActionsI)
		{
			int[] addActionsV;
			int addActionsVLen=stream.readLen();
			addActionsV=new int[addActionsVLen];
			int[] addActionsVT=addActionsV;
			for(int addActionsVI=0;addActionsVI<addActionsVLen;++addActionsVI)
			{
				int addActionsVV;
				addActionsVV=stream.readInt();
				
				addActionsVT[addActionsVI]=addActionsVV;
			}
			
			addActionsT[addActionsI]=addActionsV;
		}
		
		this.buildTime=stream.readInt();
		
		this.levelUpTime=stream.readInt();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		stream.writeInt(this.id);
		
		stream.writeShort(this.level);
		
		stream.writeInt(this.costID);
		
		if(this.useRoleAttributes!=null)
		{
			DIntData[] useRoleAttributesT=this.useRoleAttributes;
			stream.writeLen(useRoleAttributesT.Length);
			for(int useRoleAttributesVI=0,useRoleAttributesVLen=useRoleAttributesT.Length;useRoleAttributesVI<useRoleAttributesVLen;++useRoleAttributesVI)
			{
				DIntData useRoleAttributesV=useRoleAttributesT[useRoleAttributesVI];
				if(useRoleAttributesV!=null)
				{
					useRoleAttributesV.writeBytesSimple(stream);
				}
				else
				{
					nullObjError("useRoleAttributesV");
				}
				
			}
		}
		else
		{
			nullObjError("useRoleAttributes");
		}
		
		if(this.addRoleAttributes!=null)
		{
			DIntData[] addRoleAttributesT=this.addRoleAttributes;
			stream.writeLen(addRoleAttributesT.Length);
			for(int addRoleAttributesVI=0,addRoleAttributesVLen=addRoleAttributesT.Length;addRoleAttributesVI<addRoleAttributesVLen;++addRoleAttributesVI)
			{
				DIntData addRoleAttributesV=addRoleAttributesT[addRoleAttributesVI];
				if(addRoleAttributesV!=null)
				{
					addRoleAttributesV.writeBytesSimple(stream);
				}
				else
				{
					nullObjError("addRoleAttributesV");
				}
				
			}
		}
		else
		{
			nullObjError("addRoleAttributes");
		}
		
		if(this.addActions!=null)
		{
			int[][] addActionsT=this.addActions;
			stream.writeLen(addActionsT.Length);
			for(int addActionsVI=0,addActionsVLen=addActionsT.Length;addActionsVI<addActionsVLen;++addActionsVI)
			{
				int[] addActionsV=addActionsT[addActionsVI];
				if(addActionsV!=null)
				{
					int[] addActionsVT=addActionsV;
					stream.writeLen(addActionsVT.Length);
					for(int addActionsVVI=0,addActionsVVLen=addActionsVT.Length;addActionsVVI<addActionsVVLen;++addActionsVVI)
					{
						int addActionsVV=addActionsVT[addActionsVVI];
						stream.writeInt(addActionsVV);
						
					}
				}
				else
				{
					nullObjError("addActionsV");
				}
				
			}
		}
		else
		{
			nullObjError("addActions");
		}
		
		stream.writeInt(this.buildTime);
		
		stream.writeInt(this.levelUpTime);
		
	}
	
	/// <summary>
	/// 读完所有表后处理
	/// </summary>
	public static void afterReadConfigAll()
	{
		LongObjectMap<BuildingLevelConfig> fDic;
		if(!(fDic=_dic).isEmpty())
		{
			BuildingConfig config;

			BuildingLevelConfig[] values;
			BuildingLevelConfig v;

			for(int i=(values=fDic.getValues()).Length-1;i>=0;--i)
			{
				if((v=values[i])!=null)
				{
					config=BuildingConfig.get(v.id);

					if(config.levelMax<v.level)
						config.levelMax=v.level;
				}
			}
		}
	}
	
}
