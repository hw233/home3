using ShineEngine;

/// <summary>
/// 客户端登录缓存数据(generated by shine)
/// </summary>
public class ClientLoginCacheData:BaseData
{
	/// <summary>
	/// 区服ID
	/// </summary>
	public int areaID=-1;
	
	/// <summary>
	/// 平台类型
	/// </summary>
	public string platform;
	
	/// <summary>
	/// uid
	/// </summary>
	public string uid;
	
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=BaseDataType.ClientLoginCache;
	
	/// <summary>
	/// 服务器生成码
	/// </summary>
	public int serverBornCode;
	
	/// <summary>
	/// 上次登录角色ID
	/// </summary>
	public long lastPlayerID;
	
	public ClientLoginCacheData()
	{
		_dataID=BaseDataType.ClientLoginCache;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "ClientLoginCacheData";
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		this.uid=stream.readUTF();
		
		this.platform=stream.readUTF();
		
		this.areaID=stream.readInt();
		
		this.lastPlayerID=stream.readLong();
		
		this.serverBornCode=stream.readInt();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeUTF(this.uid);
		
		stream.writeUTF(this.platform);
		
		stream.writeInt(this.areaID);
		
		stream.writeLong(this.lastPlayerID);
		
		stream.writeInt(this.serverBornCode);
		
	}
	
	/// <summary>
	/// 复制(潜拷贝)
	/// </summary>
	protected override void toShadowCopy(BaseData data)
	{
		if(!(data is ClientLoginCacheData))
			return;
		
		ClientLoginCacheData mData=(ClientLoginCacheData)data;
		
		this.uid=mData.uid;
		this.platform=mData.platform;
		this.areaID=mData.areaID;
		this.lastPlayerID=mData.lastPlayerID;
		this.serverBornCode=mData.serverBornCode;
	}
	
	/// <summary>
	/// 复制(深拷贝)
	/// </summary>
	protected override void toCopy(BaseData data)
	{
		if(!(data is ClientLoginCacheData))
			return;
		
		ClientLoginCacheData mData=(ClientLoginCacheData)data;
		
		this.uid=mData.uid;
		
		this.platform=mData.platform;
		
		this.areaID=mData.areaID;
		
		this.lastPlayerID=mData.lastPlayerID;
		
		this.serverBornCode=mData.serverBornCode;
		
	}
	
	/// <summary>
	/// 是否数据一致
	/// </summary>
	protected override bool toDataEquals(BaseData data)
	{
		ClientLoginCacheData mData=(ClientLoginCacheData)data;
		if(this.uid!=mData.uid)
			return false;
		
		if(this.platform!=mData.platform)
			return false;
		
		if(this.areaID!=mData.areaID)
			return false;
		
		if(this.lastPlayerID!=mData.lastPlayerID)
			return false;
		
		if(this.serverBornCode!=mData.serverBornCode)
			return false;
		
		return true;
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.Append("uid");
		writer.sb.Append(':');
		writer.sb.Append(this.uid);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("platform");
		writer.sb.Append(':');
		writer.sb.Append(this.platform);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("areaID");
		writer.sb.Append(':');
		writer.sb.Append(this.areaID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("lastPlayerID");
		writer.sb.Append(':');
		writer.sb.Append(this.lastPlayerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("serverBornCode");
		writer.sb.Append(':');
		writer.sb.Append(this.serverBornCode);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 初始化初值
	/// </summary>
	public override void initDefault()
	{
		
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.uid=stream.readUTF();
		
		this.platform=stream.readUTF();
		
		this.areaID=stream.readInt();
		
		this.lastPlayerID=stream.readLong();
		
		this.serverBornCode=stream.readInt();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeUTF(this.uid);
		
		stream.writeUTF(this.platform);
		
		stream.writeInt(this.areaID);
		
		stream.writeLong(this.lastPlayerID);
		
		stream.writeInt(this.serverBornCode);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		this.uid="";
		this.platform="";
		this.areaID=0;
		this.lastPlayerID=0L;
		this.serverBornCode=0;
	}
	
}
