using ShineEngine;

/// <summary>
/// buff数据(generated by shine)
/// </summary>
public class BuffData:BaseData
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=BaseDataType.Buff;
	
	/// <summary>
	/// 实例ID
	/// </summary>
	public int instanceID;
	
	/// <summary>
	/// id
	/// </summary>
	public int id;
	
	/// <summary>
	/// 等级
	/// </summary>
	public int level;
	
	/// <summary>
	/// 剩余时间(ms)
	/// </summary>
	public int lastTime;
	
	/// <summary>
	/// 剩余数目(叠层数)
	/// </summary>
	public int lastNum;
	
	/// <summary>
	/// 添加者(攻击者)
	/// </summary>
	public int adderInstanceID;
	
	public BuffConfig config;
	
	public BuffLevelConfig levelConfig;
	
	/// <summary>
	/// buff总时间(显示用)
	/// </summary>
	public int timeMax;
	
	public BuffData()
	{
		_dataID=BaseDataType.Buff;
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		this.instanceID=stream.readInt();
		
		this.id=stream.readInt();
		
		this.level=stream.readInt();
		
		this.lastTime=stream.readInt();
		
		this.lastNum=stream.readInt();
		
		this.adderInstanceID=stream.readInt();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeInt(this.instanceID);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.level);
		
		stream.writeInt(this.lastTime);
		
		stream.writeInt(this.lastNum);
		
		stream.writeInt(this.adderInstanceID);
		
	}
	
	/// <summary>
	/// 复制(潜拷贝)
	/// </summary>
	protected override void toShadowCopy(BaseData data)
	{
		if(!(data is BuffData))
			return;
		
		BuffData mData=(BuffData)data;
		
		this.instanceID=mData.instanceID;
		this.id=mData.id;
		this.level=mData.level;
		this.lastTime=mData.lastTime;
		this.lastNum=mData.lastNum;
		this.adderInstanceID=mData.adderInstanceID;
	}
	
	/// <summary>
	/// 复制(深拷贝)
	/// </summary>
	protected override void toCopy(BaseData data)
	{
		if(!(data is BuffData))
			return;
		
		BuffData mData=(BuffData)data;
		
		this.instanceID=mData.instanceID;
		
		this.id=mData.id;
		
		this.level=mData.level;
		
		this.lastTime=mData.lastTime;
		
		this.lastNum=mData.lastNum;
		
		this.adderInstanceID=mData.adderInstanceID;
		
	}
	
	/// <summary>
	/// 是否数据一致
	/// </summary>
	protected override bool toDataEquals(BaseData data)
	{
		BuffData mData=(BuffData)data;
		if(this.instanceID!=mData.instanceID)
			return false;
		
		if(this.id!=mData.id)
			return false;
		
		if(this.level!=mData.level)
			return false;
		
		if(this.lastTime!=mData.lastTime)
			return false;
		
		if(this.lastNum!=mData.lastNum)
			return false;
		
		if(this.adderInstanceID!=mData.adderInstanceID)
			return false;
		
		return true;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "BuffData";
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.Append("instanceID");
		writer.sb.Append(':');
		writer.sb.Append(this.instanceID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("id");
		writer.sb.Append(':');
		writer.sb.Append(this.id);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("level");
		writer.sb.Append(':');
		writer.sb.Append(this.level);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("lastTime");
		writer.sb.Append(':');
		writer.sb.Append(this.lastTime);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("lastNum");
		writer.sb.Append(':');
		writer.sb.Append(this.lastNum);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("adderInstanceID");
		writer.sb.Append(':');
		writer.sb.Append(this.adderInstanceID);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 初始化初值
	/// </summary>
	public override void initDefault()
	{
		
	}
	
	public override void clear()
	{
		config=null;
		levelConfig=null;
	}
	
	public void reloadConfig()
	{
		config=BuffConfig.get(id);
		levelConfig=BuffLevelConfig.get(id,level);
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.instanceID=stream.readInt();
		
		this.id=stream.readInt();
		
		this.level=stream.readInt();
		
		this.lastTime=stream.readInt();
		
		this.lastNum=stream.readInt();
		
		this.adderInstanceID=stream.readInt();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeInt(this.instanceID);
		
		stream.writeInt(this.id);
		
		stream.writeInt(this.level);
		
		stream.writeInt(this.lastTime);
		
		stream.writeInt(this.lastNum);
		
		stream.writeInt(this.adderInstanceID);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		this.instanceID=0;
		this.id=0;
		this.level=0;
		this.lastTime=0;
		this.lastNum=0;
		this.adderInstanceID=0;
	}
	
}
