using ShineEngine;

/// <summary>
/// 场景位置数据(generated by shine)
/// </summary>
public class SceneLocationData:BaseData
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=BaseDataType.SceneLocation;
	
	/// <summary>
	/// 场景ID(必选参,剩下的都是可选参)
	/// </summary>
	public int sceneID;
	
	/// <summary>
	/// 线ID
	/// </summary>
	public int lineID=-1;
	
	/// <summary>
	/// 所在服(游戏服或场景服)ID
	/// </summary>
	public int serverID=-1;
	
	/// <summary>
	/// 执行器号
	/// </summary>
	public int executorIndex=-1;
	
	/// <summary>
	/// 实例ID
	/// </summary>
	public int instanceID=-1;
	
	public SceneLocationData()
	{
		_dataID=BaseDataType.SceneLocation;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "SceneLocationData";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.sceneID=stream.readInt();
		
		this.lineID=stream.readInt();
		
		this.serverID=stream.readInt();
		
		this.executorIndex=stream.readInt();
		
		this.instanceID=stream.readInt();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeInt(this.sceneID);
		
		stream.writeInt(this.lineID);
		
		stream.writeInt(this.serverID);
		
		stream.writeInt(this.executorIndex);
		
		stream.writeInt(this.instanceID);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		this.sceneID=stream.readInt();
		
		this.lineID=stream.readInt();
		
		this.serverID=stream.readInt();
		
		this.executorIndex=stream.readInt();
		
		this.instanceID=stream.readInt();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeInt(this.sceneID);
		
		stream.writeInt(this.lineID);
		
		stream.writeInt(this.serverID);
		
		stream.writeInt(this.executorIndex);
		
		stream.writeInt(this.instanceID);
		
	}
	
	/// <summary>
	/// 复制(潜拷贝)
	/// </summary>
	protected override void toShadowCopy(BaseData data)
	{
		if(!(data is SceneLocationData))
			return;
		
		SceneLocationData mData=(SceneLocationData)data;
		
		this.sceneID=mData.sceneID;
		this.lineID=mData.lineID;
		this.serverID=mData.serverID;
		this.executorIndex=mData.executorIndex;
		this.instanceID=mData.instanceID;
	}
	
	/// <summary>
	/// 复制(深拷贝)
	/// </summary>
	protected override void toCopy(BaseData data)
	{
		if(!(data is SceneLocationData))
			return;
		
		SceneLocationData mData=(SceneLocationData)data;
		
		this.sceneID=mData.sceneID;
		
		this.lineID=mData.lineID;
		
		this.serverID=mData.serverID;
		
		this.executorIndex=mData.executorIndex;
		
		this.instanceID=mData.instanceID;
		
	}
	
	/// <summary>
	/// 是否数据一致
	/// </summary>
	protected override bool toDataEquals(BaseData data)
	{
		SceneLocationData mData=(SceneLocationData)data;
		if(this.sceneID!=mData.sceneID)
			return false;
		
		if(this.lineID!=mData.lineID)
			return false;
		
		if(this.serverID!=mData.serverID)
			return false;
		
		if(this.executorIndex!=mData.executorIndex)
			return false;
		
		if(this.instanceID!=mData.instanceID)
			return false;
		
		return true;
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.Append("sceneID");
		writer.sb.Append(':');
		writer.sb.Append(this.sceneID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("lineID");
		writer.sb.Append(':');
		writer.sb.Append(this.lineID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("serverID");
		writer.sb.Append(':');
		writer.sb.Append(this.serverID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("executorIndex");
		writer.sb.Append(':');
		writer.sb.Append(this.executorIndex);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("instanceID");
		writer.sb.Append(':');
		writer.sb.Append(this.instanceID);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 初始化初值
	/// </summary>
	public override void initDefault()
	{
		
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		this.sceneID=0;
		this.lineID=0;
		this.serverID=0;
		this.executorIndex=0;
		this.instanceID=0;
	}
	
}
