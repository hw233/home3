using ShineEngine;

/// <summary>
/// 场景位置社交改变数据(generated by shine)
/// </summary>
public class SceneLocationRoleShowChangeData:RoleShowChangeData
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=BaseDataType.SceneLocationRoleShowChange;
	
	/// <summary>
	/// 场景位置
	/// </summary>
	public SceneLocationData localtion;
	
	public SceneLocationRoleShowChangeData()
	{
		_dataID=BaseDataType.SceneLocationRoleShowChange;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "SceneLocationRoleShowChangeData";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		if(stream.readBoolean())
		{
			BaseData localtionT=stream.readDataFullNotNull();
			if(localtionT!=null)
			{
				if(localtionT is SceneLocationData)
				{
					this.localtion=(SceneLocationData)localtionT;
				}
				else
				{
					this.localtion=new SceneLocationData();
					if(!(localtionT.GetType().IsAssignableFrom(typeof(SceneLocationData))))
					{
						stream.throwTypeReadError(typeof(SceneLocationData),localtionT.GetType());
					}
					this.localtion.shadowCopy(localtionT);
				}
			}
			else
			{
				this.localtion=null;
			}
		}
		else
		{
			this.localtion=null;
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		base.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.localtion!=null)
		{
			stream.writeBoolean(true);
			stream.writeDataFullNotNull(this.localtion);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		if(stream.readBoolean())
		{
			this.localtion=(SceneLocationData)stream.readDataSimpleNotNull();
		}
		else
		{
			this.localtion=null;
		}
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		if(this.localtion!=null)
		{
			stream.writeBoolean(true);
			stream.writeDataSimpleNotNull(this.localtion);
		}
		else
		{
			stream.writeBoolean(false);
		}
		
	}
	
	/// <summary>
	/// 复制(潜拷贝)
	/// </summary>
	protected override void toShadowCopy(BaseData data)
	{
		base.toShadowCopy(data);
		
		if(!(data is SceneLocationRoleShowChangeData))
			return;
		
		SceneLocationRoleShowChangeData mData=(SceneLocationRoleShowChangeData)data;
		
		this.localtion=mData.localtion;
	}
	
	/// <summary>
	/// 复制(深拷贝)
	/// </summary>
	protected override void toCopy(BaseData data)
	{
		base.toCopy(data);
		
		if(!(data is SceneLocationRoleShowChangeData))
			return;
		
		SceneLocationRoleShowChangeData mData=(SceneLocationRoleShowChangeData)data;
		
		if(mData.localtion!=null)
		{
			this.localtion=(SceneLocationData)mData.localtion.clone();
		}
		else
		{
			this.localtion=null;
		}
		
	}
	
	/// <summary>
	/// 是否数据一致
	/// </summary>
	protected override bool toDataEquals(BaseData data)
	{
		if(!base.toDataEquals(data))
			return false;
		
		SceneLocationRoleShowChangeData mData=(SceneLocationRoleShowChangeData)data;
		if(mData.localtion!=null)
		{
			if(this.localtion==null)
				return false;
			if(!this.localtion.dataEquals(mData.localtion))
				return false;
		}
		else
		{
			if(this.localtion!=null)
				return false;
		}
		
		return true;
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("localtion");
		writer.sb.Append(':');
		if(this.localtion!=null)
		{
			this.localtion.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("SceneLocationData=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 初始化初值
	/// </summary>
	public override void initDefault()
	{
		base.initDefault();
		
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.localtion=null;
	}
	
}
