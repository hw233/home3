using ShineEngine;

/// <summary>
/// 角色匹配数据(generated by shine)
/// </summary>
public class PlayerMatchData:BaseData
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=BaseDataType.PlayerMatch;
	
	/// <summary>
	/// 单位显示数据
	/// </summary>
	public RoleShowData showData;
	
	/// <summary>
	/// 匹配值
	/// </summary>
	public int value;
	
	public PlayerMatchData()
	{
		_dataID=BaseDataType.PlayerMatch;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "PlayerMatchData";
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		this.showData=(RoleShowData)stream.readDataSimpleNotNull();
		
		this.value=stream.readInt();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		if(this.showData!=null)
		{
			stream.writeDataSimpleNotNull(this.showData);
		}
		else
		{
			nullObjError("showData");
		}
		
		stream.writeInt(this.value);
		
	}
	
	/// <summary>
	/// 复制(潜拷贝)
	/// </summary>
	protected override void toShadowCopy(BaseData data)
	{
		if(!(data is PlayerMatchData))
			return;
		
		PlayerMatchData mData=(PlayerMatchData)data;
		
		this.showData=mData.showData;
		this.value=mData.value;
	}
	
	/// <summary>
	/// 复制(深拷贝)
	/// </summary>
	protected override void toCopy(BaseData data)
	{
		if(!(data is PlayerMatchData))
			return;
		
		PlayerMatchData mData=(PlayerMatchData)data;
		
		if(mData.showData!=null)
		{
			this.showData=(RoleShowData)mData.showData.clone();
		}
		else
		{
			this.showData=null;
			nullObjError("showData");
		}
		
		this.value=mData.value;
		
	}
	
	/// <summary>
	/// 是否数据一致
	/// </summary>
	protected override bool toDataEquals(BaseData data)
	{
		PlayerMatchData mData=(PlayerMatchData)data;
		if(mData.showData!=null)
		{
			if(this.showData==null)
				return false;
			if(!this.showData.dataEquals(mData.showData))
				return false;
		}
		else
		{
			if(this.showData!=null)
				return false;
		}
		
		if(this.value!=mData.value)
			return false;
		
		return true;
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.Append("showData");
		writer.sb.Append(':');
		if(this.showData!=null)
		{
			this.showData.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("RoleShowData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("value");
		writer.sb.Append(':');
		writer.sb.Append(this.value);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 初始化初值
	/// </summary>
	public override void initDefault()
	{
		this.showData=new RoleShowData();
		this.showData.initDefault();
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		BaseData showDataT=stream.readDataFullNotNull();
		if(showDataT!=null)
		{
			if(showDataT is RoleShowData)
			{
				this.showData=(RoleShowData)showDataT;
			}
			else
			{
				this.showData=new RoleShowData();
				if(!(showDataT.GetType().IsAssignableFrom(typeof(RoleShowData))))
				{
					stream.throwTypeReadError(typeof(RoleShowData),showDataT.GetType());
				}
				this.showData.shadowCopy(showDataT);
			}
		}
		else
		{
			this.showData=null;
		}
		
		this.value=stream.readInt();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		if(this.showData!=null)
		{
			stream.writeDataFullNotNull(this.showData);
		}
		else
		{
			nullObjError("showData");
		}
		
		stream.writeInt(this.value);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		this.showData=null;
		this.value=0;
	}
	
}
