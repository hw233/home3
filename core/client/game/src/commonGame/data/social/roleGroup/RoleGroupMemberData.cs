using ShineEngine;

/// <summary>
/// 玩家群成员数据(generated by shine)
/// </summary>
public class RoleGroupMemberData:BaseData
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=BaseDataType.RoleGroupMember;
	
	/// <summary>
	/// 角色ID
	/// </summary>
	public long playerID;
	
	/// <summary>
	/// 职位
	/// </summary>
	public int title;
	
	/// <summary>
	/// 加入时间戳
	/// </summary>
	public long joinTime;
	
	/// <summary>
	/// 社交数据
	/// </summary>
	public RoleSocialData socialData;
	
	public RoleGroupMemberData()
	{
		_dataID=BaseDataType.RoleGroupMember;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "RoleGroupMemberData";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		stream.startReadObj();
		
		this.playerID=stream.readLong();
		
		BaseData socialDataT=stream.readDataFullNotNull();
		if(socialDataT!=null)
		{
			if(socialDataT is RoleSocialData)
			{
				this.socialData=(RoleSocialData)socialDataT;
			}
			else
			{
				this.socialData=new RoleSocialData();
				if(!(socialDataT.GetType().IsAssignableFrom(typeof(RoleSocialData))))
				{
					stream.throwTypeReadError(typeof(RoleSocialData),socialDataT.GetType());
				}
				this.socialData.shadowCopy(socialDataT);
			}
		}
		else
		{
			this.socialData=null;
		}
		
		this.title=stream.readInt();
		
		this.joinTime=stream.readLong();
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		stream.startWriteObj();
		
		stream.writeLong(this.playerID);
		
		if(this.socialData!=null)
		{
			stream.writeDataFullNotNull(this.socialData);
		}
		else
		{
			nullObjError("socialData");
		}
		
		stream.writeInt(this.title);
		
		stream.writeLong(this.joinTime);
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		this.playerID=stream.readLong();
		
		this.socialData=(RoleSocialData)stream.readDataSimpleNotNull();
		
		this.title=stream.readInt();
		
		this.joinTime=stream.readLong();
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		stream.writeLong(this.playerID);
		
		if(this.socialData!=null)
		{
			stream.writeDataSimpleNotNull(this.socialData);
		}
		else
		{
			nullObjError("socialData");
		}
		
		stream.writeInt(this.title);
		
		stream.writeLong(this.joinTime);
		
	}
	
	/// <summary>
	/// 复制(潜拷贝)
	/// </summary>
	protected override void toShadowCopy(BaseData data)
	{
		if(!(data is RoleGroupMemberData))
			return;
		
		RoleGroupMemberData mData=(RoleGroupMemberData)data;
		
		this.playerID=mData.playerID;
		this.socialData=mData.socialData;
		this.title=mData.title;
		this.joinTime=mData.joinTime;
	}
	
	/// <summary>
	/// 复制(深拷贝)
	/// </summary>
	protected override void toCopy(BaseData data)
	{
		if(!(data is RoleGroupMemberData))
			return;
		
		RoleGroupMemberData mData=(RoleGroupMemberData)data;
		
		this.playerID=mData.playerID;
		
		if(mData.socialData!=null)
		{
			this.socialData=(RoleSocialData)mData.socialData.clone();
		}
		else
		{
			this.socialData=null;
			nullObjError("socialData");
		}
		
		this.title=mData.title;
		
		this.joinTime=mData.joinTime;
		
	}
	
	/// <summary>
	/// 是否数据一致
	/// </summary>
	protected override bool toDataEquals(BaseData data)
	{
		RoleGroupMemberData mData=(RoleGroupMemberData)data;
		if(this.playerID!=mData.playerID)
			return false;
		
		if(mData.socialData!=null)
		{
			if(this.socialData==null)
				return false;
			if(!this.socialData.dataEquals(mData.socialData))
				return false;
		}
		else
		{
			if(this.socialData!=null)
				return false;
		}
		
		if(this.title!=mData.title)
			return false;
		
		if(this.joinTime!=mData.joinTime)
			return false;
		
		return true;
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		writer.writeTabs();
		writer.sb.Append("playerID");
		writer.sb.Append(':');
		writer.sb.Append(this.playerID);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("socialData");
		writer.sb.Append(':');
		if(this.socialData!=null)
		{
			this.socialData.writeDataString(writer);
		}
		else
		{
			writer.sb.Append("RoleSocialData=null");
		}
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("title");
		writer.sb.Append(':');
		writer.sb.Append(this.title);
		
		writer.writeEnter();
		writer.writeTabs();
		writer.sb.Append("joinTime");
		writer.sb.Append(':');
		writer.sb.Append(this.joinTime);
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 初始化初值
	/// </summary>
	public override void initDefault()
	{
		this.socialData=new RoleSocialData();
		this.socialData.initDefault();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		this.playerID=0L;
		this.socialData=null;
		this.title=0;
		this.joinTime=0L;
	}
	
}
