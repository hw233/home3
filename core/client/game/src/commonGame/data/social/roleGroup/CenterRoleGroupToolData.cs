using ShineEngine;

/// <summary>
/// 中心服玩家群工具数据(generated by shine)
/// </summary>
public class CenterRoleGroupToolData:FuncToolData
{
	/// <summary>
	/// 数据类型ID
	/// </summary>
	public const int dataID=BaseDataType.CenterRoleGroupTool;
	
	/// <summary>
	/// 玩家群简版数据组(key：groupId>)
	/// </summary>
	public LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDic;
	
	public CenterRoleGroupToolData()
	{
		_dataID=BaseDataType.CenterRoleGroupTool;
	}
	
	/// <summary>
	/// 获取数据类名
	/// </summary>
	public override string getDataClassName()
	{
		return "CenterRoleGroupToolData";
	}
	
	/// <summary>
	/// 读取字节流(完整版)
	/// </summary>
	protected override void toReadBytesFull(BytesReadStream stream)
	{
		base.toReadBytesFull(stream);
		
		stream.startReadObj();
		
		int roleGroupSimpleDataDicLen=stream.readLen();
		if(this.roleGroupSimpleDataDic!=null)
		{
			this.roleGroupSimpleDataDic.clear();
			this.roleGroupSimpleDataDic.ensureCapacity(roleGroupSimpleDataDicLen);
		}
		else
		{
			this.roleGroupSimpleDataDic=new LongObjectMap<RoleGroupSimpleData>(roleGroupSimpleDataDicLen);
		}
		
		LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDicT=this.roleGroupSimpleDataDic;
		for(int roleGroupSimpleDataDicI=roleGroupSimpleDataDicLen-1;roleGroupSimpleDataDicI>=0;--roleGroupSimpleDataDicI)
		{
			long roleGroupSimpleDataDicK;
			RoleGroupSimpleData roleGroupSimpleDataDicV;
			roleGroupSimpleDataDicK=stream.readLong();
			
			BaseData roleGroupSimpleDataDicVT=stream.readDataFullNotNull();
			if(roleGroupSimpleDataDicVT!=null)
			{
				if(roleGroupSimpleDataDicVT is RoleGroupSimpleData)
				{
					roleGroupSimpleDataDicV=(RoleGroupSimpleData)roleGroupSimpleDataDicVT;
				}
				else
				{
					roleGroupSimpleDataDicV=new RoleGroupSimpleData();
					if(!(roleGroupSimpleDataDicVT.GetType().IsAssignableFrom(typeof(RoleGroupSimpleData))))
					{
						stream.throwTypeReadError(typeof(RoleGroupSimpleData),roleGroupSimpleDataDicVT.GetType());
					}
					roleGroupSimpleDataDicV.shadowCopy(roleGroupSimpleDataDicVT);
				}
			}
			else
			{
				roleGroupSimpleDataDicV=null;
			}
			
			roleGroupSimpleDataDicT.put(roleGroupSimpleDataDicK,roleGroupSimpleDataDicV);
		}
		
		stream.endReadObj();
	}
	
	/// <summary>
	/// 写入字节流(完整版)
	/// </summary>
	protected override void toWriteBytesFull(BytesWriteStream stream)
	{
		base.toWriteBytesFull(stream);
		
		stream.startWriteObj();
		
		if(this.roleGroupSimpleDataDic!=null)
		{
			stream.writeLen(this.roleGroupSimpleDataDic.size());
			if(!this.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=this.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=this.roleGroupSimpleDataDic.getKeys();
				RoleGroupSimpleData[] roleGroupSimpleDataDicVValues=this.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.Length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						stream.writeLong(roleGroupSimpleDataDicK);
						
						if(roleGroupSimpleDataDicV!=null)
						{
							stream.writeDataFullNotNull(roleGroupSimpleDataDicV);
						}
						else
						{
							nullObjError("roleGroupSimpleDataDicV");
						}
						
					}
				}
			}
		}
		else
		{
			nullObjError("roleGroupSimpleDataDic");
		}
		
		stream.endWriteObj();
	}
	
	/// <summary>
	/// 读取字节流(简版)
	/// </summary>
	protected override void toReadBytesSimple(BytesReadStream stream)
	{
		base.toReadBytesSimple(stream);
		
		int roleGroupSimpleDataDicLen=stream.readLen();
		if(this.roleGroupSimpleDataDic!=null)
		{
			this.roleGroupSimpleDataDic.clear();
			this.roleGroupSimpleDataDic.ensureCapacity(roleGroupSimpleDataDicLen);
		}
		else
		{
			this.roleGroupSimpleDataDic=new LongObjectMap<RoleGroupSimpleData>(roleGroupSimpleDataDicLen);
		}
		
		LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDicT=this.roleGroupSimpleDataDic;
		for(int roleGroupSimpleDataDicI=roleGroupSimpleDataDicLen-1;roleGroupSimpleDataDicI>=0;--roleGroupSimpleDataDicI)
		{
			long roleGroupSimpleDataDicK;
			RoleGroupSimpleData roleGroupSimpleDataDicV;
			roleGroupSimpleDataDicK=stream.readLong();
			
			roleGroupSimpleDataDicV=(RoleGroupSimpleData)stream.readDataSimpleNotNull();
			
			roleGroupSimpleDataDicT.put(roleGroupSimpleDataDicK,roleGroupSimpleDataDicV);
		}
		
	}
	
	/// <summary>
	/// 写入字节流(简版)
	/// </summary>
	protected override void toWriteBytesSimple(BytesWriteStream stream)
	{
		base.toWriteBytesSimple(stream);
		
		if(this.roleGroupSimpleDataDic!=null)
		{
			stream.writeLen(this.roleGroupSimpleDataDic.size());
			if(!this.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=this.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=this.roleGroupSimpleDataDic.getKeys();
				RoleGroupSimpleData[] roleGroupSimpleDataDicVValues=this.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.Length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						stream.writeLong(roleGroupSimpleDataDicK);
						
						if(roleGroupSimpleDataDicV!=null)
						{
							stream.writeDataSimpleNotNull(roleGroupSimpleDataDicV);
						}
						else
						{
							nullObjError("roleGroupSimpleDataDicV");
						}
						
					}
				}
			}
		}
		else
		{
			nullObjError("roleGroupSimpleDataDic");
		}
		
	}
	
	/// <summary>
	/// 复制(潜拷贝)
	/// </summary>
	protected override void toShadowCopy(BaseData data)
	{
		base.toShadowCopy(data);
		
		if(!(data is CenterRoleGroupToolData))
			return;
		
		CenterRoleGroupToolData mData=(CenterRoleGroupToolData)data;
		
		this.roleGroupSimpleDataDic=mData.roleGroupSimpleDataDic;
	}
	
	/// <summary>
	/// 复制(深拷贝)
	/// </summary>
	protected override void toCopy(BaseData data)
	{
		base.toCopy(data);
		
		if(!(data is CenterRoleGroupToolData))
			return;
		
		CenterRoleGroupToolData mData=(CenterRoleGroupToolData)data;
		
		if(mData.roleGroupSimpleDataDic!=null)
		{
			if(this.roleGroupSimpleDataDic!=null)
			{
				this.roleGroupSimpleDataDic.clear();
				this.roleGroupSimpleDataDic.ensureCapacity(mData.roleGroupSimpleDataDic.size());
			}
			else
			{
				this.roleGroupSimpleDataDic=new LongObjectMap<RoleGroupSimpleData>(mData.roleGroupSimpleDataDic.size());
			}
			
			LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDicT=this.roleGroupSimpleDataDic;
			if(!mData.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=mData.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=mData.roleGroupSimpleDataDic.getKeys();
				RoleGroupSimpleData[] roleGroupSimpleDataDicVValues=mData.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.Length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						long roleGroupSimpleDataDicW;
						RoleGroupSimpleData roleGroupSimpleDataDicU;
						roleGroupSimpleDataDicW=roleGroupSimpleDataDicK;
						
						if(roleGroupSimpleDataDicV!=null)
						{
							roleGroupSimpleDataDicU=(RoleGroupSimpleData)roleGroupSimpleDataDicV.clone();
						}
						else
						{
							roleGroupSimpleDataDicU=null;
							nullObjError("roleGroupSimpleDataDicU");
						}
						
						roleGroupSimpleDataDicT.put(roleGroupSimpleDataDicW,roleGroupSimpleDataDicU);
					}
				}
			}
		}
		else
		{
			this.roleGroupSimpleDataDic=null;
			nullObjError("roleGroupSimpleDataDic");
		}
		
	}
	
	/// <summary>
	/// 是否数据一致
	/// </summary>
	protected override bool toDataEquals(BaseData data)
	{
		if(!base.toDataEquals(data))
			return false;
		
		CenterRoleGroupToolData mData=(CenterRoleGroupToolData)data;
		if(mData.roleGroupSimpleDataDic!=null)
		{
			if(this.roleGroupSimpleDataDic==null)
				return false;
			if(this.roleGroupSimpleDataDic.size()!=mData.roleGroupSimpleDataDic.size())
				return false;
			LongObjectMap<RoleGroupSimpleData> roleGroupSimpleDataDicR=mData.roleGroupSimpleDataDic;
			if(!this.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=this.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=this.roleGroupSimpleDataDic.getKeys();
				RoleGroupSimpleData[] roleGroupSimpleDataDicVValues=this.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.Length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						RoleGroupSimpleData roleGroupSimpleDataDicU=roleGroupSimpleDataDicR.get(roleGroupSimpleDataDicK);
						if(roleGroupSimpleDataDicU!=null)
						{
							if(roleGroupSimpleDataDicV==null)
								return false;
							if(!roleGroupSimpleDataDicV.dataEquals(roleGroupSimpleDataDicU))
								return false;
						}
						else
						{
							if(roleGroupSimpleDataDicV!=null)
								return false;
						}
						
					}
				}
			}
		}
		else
		{
			if(this.roleGroupSimpleDataDic!=null)
				return false;
		}
		
		return true;
	}
	
	/// <summary>
	/// 转文本输出
	/// </summary>
	protected override void toWriteDataString(DataWriter writer)
	{
		base.toWriteDataString(writer);
		
		writer.writeTabs();
		writer.sb.Append("roleGroupSimpleDataDic");
		writer.sb.Append(':');
		writer.sb.Append("Map<long,RoleGroupSimpleData>");
		if(this.roleGroupSimpleDataDic!=null)
		{
			writer.sb.Append('(');
			writer.sb.Append(this.roleGroupSimpleDataDic.size());
			writer.sb.Append(')');
			writer.writeEnter();
			writer.writeLeftBrace();
			if(!this.roleGroupSimpleDataDic.isEmpty())
			{
				long roleGroupSimpleDataDicKFreeValue=this.roleGroupSimpleDataDic.getFreeValue();
				long[] roleGroupSimpleDataDicKKeys=this.roleGroupSimpleDataDic.getKeys();
				RoleGroupSimpleData[] roleGroupSimpleDataDicVValues=this.roleGroupSimpleDataDic.getValues();
				for(int roleGroupSimpleDataDicKI=roleGroupSimpleDataDicKKeys.Length-1;roleGroupSimpleDataDicKI>=0;--roleGroupSimpleDataDicKI)
				{
					long roleGroupSimpleDataDicK=roleGroupSimpleDataDicKKeys[roleGroupSimpleDataDicKI];
					if(roleGroupSimpleDataDicK!=roleGroupSimpleDataDicKFreeValue)
					{
						RoleGroupSimpleData roleGroupSimpleDataDicV=roleGroupSimpleDataDicVValues[roleGroupSimpleDataDicKI];
						writer.writeTabs();
						writer.sb.Append(roleGroupSimpleDataDicK);
						
						writer.sb.Append(':');
						if(roleGroupSimpleDataDicV!=null)
						{
							roleGroupSimpleDataDicV.writeDataString(writer);
						}
						else
						{
							writer.sb.Append("RoleGroupSimpleData=null");
						}
						
						writer.writeEnter();
					}
				}
			}
			writer.writeRightBrace();
		}
		else
		{
			writer.sb.Append("=null");
		}
		
		writer.writeEnter();
	}
	
	/// <summary>
	/// 初始化初值
	/// </summary>
	public override void initDefault()
	{
		base.initDefault();
		
		this.roleGroupSimpleDataDic=new LongObjectMap<RoleGroupSimpleData>();
	}
	
	/// <summary>
	/// 回池
	/// </summary>
	protected override void toRelease(DataPool pool)
	{
		base.toRelease(pool);
		
		this.roleGroupSimpleDataDic=null;
	}
	
}
