using AppDomain = ILRuntime.Runtime.Enviorment.AppDomain;
using ShineEngine;
using System;
using UnityEngine;

/// <summary>
/// (generated by shine)
/// </summary>
public class CILRuntimeControl:ILRuntimeControl
{
	public override void initCAdapters(SList<ILClassInfo> list)
	{
		ILClassInfo cls;

		list.add(cls=new ILClassInfo("BaseConfig"));
		cls.addMethod("toReadBytesSimple",VisitType.Protected,"BytesReadStream","stream");
		cls.addMethod("afterReadConfig",VisitType.Protected);
		cls.addMethod("generateRefresh",VisitType.Protected);
	}
	
	protected override void initDelegate(AppDomain appdomain)
	{
		base.initDelegate(appdomain);

		appdomain.DelegateManager.RegisterFunctionDelegate<GameUIBase>();

		appdomain.DelegateManager.RegisterMethodDelegate<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode>();
		appdomain.DelegateManager.RegisterMethodDelegate<int, EventAction>();
		appdomain.DelegateManager.RegisterMethodDelegate<KeyCode>();



		appdomain.DelegateManager.RegisterDelegateConvertor<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode>>((act) =>
		{
			return new UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode>((arg0, arg1) =>
			{
				((Action<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode>)act)(arg0, arg1);
			});
		});

		// appdomain.DelegateManager.RegisterFunctionDelegate<SEventRegisterAdapter.Adaptor>();
		// appdomain.DelegateManager.RegisterMethodDelegate<SEventRegisterAdapter.Adaptor>();
		// appdomain.DelegateManager.RegisterMethodDelegate<MUnitUseDataAdapter.Adaptor>();
	}
	
	protected override void initOtherAdapters(AppDomain appdomain)
	{
		base.initOtherAdapters(appdomain);
		
	}
	
	protected override void initConfigAdapters(AppDomain appdomain)
	{
		base.initConfigAdapters(appdomain);

	}
	
	/// <summary>
	/// 初始化数据适配器
	/// </summary>
	protected override void initDataAdapters(AppDomain appdomain)
	{
		base.initDataAdapters(appdomain);
		
	}
	
	protected override void initGenerateAdapters(AppDomain appdomain)
	{
		base.initGenerateAdapters(appdomain);
		
	}
	
}
