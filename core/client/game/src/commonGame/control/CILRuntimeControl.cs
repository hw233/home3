using AppDomain = ILRuntime.Runtime.Enviorment.AppDomain;
using ShineEngine;
using System;
using UnityEngine;

/// <summary>
/// (generated by shine)
/// </summary>
public class CILRuntimeControl:ILRuntimeControl
{
	public override void initCAdapters(SList<ILClassInfo> list)
	{
		ILClassInfo cls;

		list.add(cls=new ILClassInfo("BaseConfig"));
		cls.addMethod("toReadBytesSimple",VisitType.Protected,"BytesReadStream","stream");
		cls.addMethod("afterReadConfig",VisitType.Protected);
		cls.addMethod("generateRefresh",VisitType.Protected);
	}
	
	protected override void initDelegate(AppDomain appdomain)
	{
		base.initDelegate(appdomain);

		appdomain.DelegateManager.RegisterFunctionDelegate<GameUIBase>();

		appdomain.DelegateManager.RegisterMethodDelegate<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode>();
		appdomain.DelegateManager.RegisterMethodDelegate<int, EventAction>();
		appdomain.DelegateManager.RegisterMethodDelegate<KeyCode>();



		appdomain.DelegateManager.RegisterDelegateConvertor<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode>>((act) =>
		{
			return new UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode>((arg0, arg1) =>
			{
				((Action<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode>)act)(arg0, arg1);
			});
		});

		// appdomain.DelegateManager.RegisterFunctionDelegate<SEventRegisterAdapter.Adaptor>();
		// appdomain.DelegateManager.RegisterMethodDelegate<SEventRegisterAdapter.Adaptor>();
		// appdomain.DelegateManager.RegisterMethodDelegate<MUnitUseDataAdapter.Adaptor>();
	}
	
	protected override void initOtherAdapters(AppDomain appdomain)
	{
		base.initOtherAdapters(appdomain);
		appdomain.RegisterCrossBindingAdaptor(new AchievementCompleteDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AchievementConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AchievementDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AchievementPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AchievementPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AchievementSaveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ActivityConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ActivityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ActivityPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ActivityPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ApplyAddFriendDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AreaClientDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AreaGlobalWorkCompleteDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AreaServerDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AttackConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AttackDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AttackGroupConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AttackLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AttributeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AuctionBuyItemDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AuctionConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AuctionItemDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AuctionItemRecordDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AuctionQueryConditionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AuctionQueryConditionTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AuctionSoldLogDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AuctionToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new AvatarPartConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BagPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BagPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BaseConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BaseLogicControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BasePartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BattleConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BigFloatDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BigFloatRankConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuffActionTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuffConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuffDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuffDataLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuffGroupConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuffIntervalActionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuffLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuffPropConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuildingConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuildingIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BuildingLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BulletAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BulletConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BulletDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BulletLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BulletLogicBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BulletPosLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new BulletShowLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CallWayConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CDConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CDDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CDGroupConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CenterRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CenterResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CenterRoleGroupToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterControlLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterIdentityLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterSaveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterUseDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CharacterUseLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ChatChannelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ChatChannelDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ChatDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ChatElementDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CLanguageConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientLoginCacheDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientLoginDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientLoginExDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientLoginResultDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientLoginServerInfoDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientOfflineWorkDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientOfflineWorkListDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientPlatformTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientPlayerLocalCacheDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientSimpleSceneAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ClientVersionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ConfigControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ConfigReadDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ContactDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CostConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CountDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CountryCodeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CreateItemConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CreatePlayerDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CreateRoleGroupDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CreateSceneDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CreateTeamDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CreateUnionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CRoleRRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CUnitRRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new CurrencyConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new DamageOneDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new DirDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new DriveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new EffectConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new EquipContainerDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new EquipPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new EquipPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new EquipSlotTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ExchangeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ExchangeGroupConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FacadeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FieldItemBagBindDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FieldItemBagIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FieldItemIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FightUnitConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FightUnitIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FightUnitLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FlowStepConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FontConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FrameSyncCommandDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FrameSyncDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FriendDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FriendPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FriendPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncCloseResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncFromCenterSResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncInfoLogDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncOpenResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncPlayerRoleGroupRRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncPlayerRoleGroupSResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncRRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncSResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FunctionConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new FuncToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameAppAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameAuctionToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameDataRegisterAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameMainControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameServerAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameServerClientSimpleDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameServerRunDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameServerSimpleInfoDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameUIBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameUIControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameUILogicBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GlobalReadDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GMCommandUIAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GMTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GridMapInfoConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GroupCDConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GuidePartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GuidePartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new InfoCodeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new InfoControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new InfoLogConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new InfoLogDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new InitCreateConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new IntAuctionQueryConditionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new InternationalResourceConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new InviteRoleGroupReceiveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemChatElementDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemContainerDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemDicContainerDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemEquipDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemRecordDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ItemTipsReplaceTextToolAdapter());
		appdomain.RegisterCrossBindingAdaptor(new JoyDriveLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new JoystickLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new KeepSaveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new KeyboardControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new KeyDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new LanguageConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new LanguageTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new LogicEntityAdapter());
		appdomain.RegisterCrossBindingAdaptor(new LoginHttpRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new LoginRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MailConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MailDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MailPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MailPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MailTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MapBlockTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MapInfoConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MapMoveTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MarkResourceConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ModelBindPosTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ModelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ModelMotionConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MonsterConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MonsterIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MonsterIdentityLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MonsterLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MotionConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MUnitCacheDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MUnitFightDataLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MUnitIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MUnitSaveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MUnitUseDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new MUnitUseLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new NatureUIBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new NPCConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new NPCIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new OperationConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new OperationIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PetConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PetIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PetPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PetPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PetSaveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PetUseDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PetUseLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlatformConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerApplyRoleGroupDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerApplyRoleGroupSelfDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerAuctionToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerBasePartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerListDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerLoginDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerMailDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerMatchDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerOfflineCacheExDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerPrimaryKeyDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRankDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRankToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRoleGroupAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRoleGroupClientToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRoleGroupDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRoleGroupExDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRoleGroupMemberDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRoleGroupSaveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerRoleGroupToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerSubsectionRankToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerTeamAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerTeamDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerTeamToolAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerUnionAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerUnionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerUnionSaveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerUnionToolAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerVersionControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PlayerWorkCompleteDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PosDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PosDirDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PreBattleScenePlayLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ProgressBarConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PuppetConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PuppetIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PuppetIdentityLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PuppetLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PushNotifyConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new PushTopicTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new QueryPlayerResultDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new QuestCompleteDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new QuestConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new QuestDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new QuestPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new QuestPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RandomItemConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RandomItemListConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RandomNameConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RankDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RankSimpleDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RankToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RectDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RedPointConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RedPointControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RefreshCurrentLineResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RegionConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RegionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ReplaceTextToolAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RewardConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RewardShowDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleAttributeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleAttributeDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleAttributeDataLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleAttributeLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleBuildLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleChatDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleForceDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleForceLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupChangeDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupCreateSceneDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupMemberChangeDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupMemberDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupRankDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupSimpleDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupTitleConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleGroupToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleLogicBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RolePartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RolePartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleShowChangeDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleShowDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleShowDataPartTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleShowInfoLogDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleShowLogDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleSimpleShowDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleSocialDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleSocialPoolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleSocialPoolToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new RoleSResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SaveVersionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneCameraFixedLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneCameraLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneCameraLogic3DOneAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneEffectConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneEffectIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneEnterArgDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneEnterDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneFightLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneForceTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneInOutLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneLoadLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneLocationDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneLocationRoleShowChangeDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneLogicBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneMapConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneObjectAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneObjectLogicBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ScenePartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ScenePartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ScenePlaceConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ScenePlaceElementConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ScenePlayLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ScenePosLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ScenePosLogic3DOneAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ScenePreInfoDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneRoleAttributeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneRoleDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneRoleLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneRRequestAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneShowLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneShowLogic3DOneAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneSResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SceneUnitFactoryLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SelectServerUIAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SensitiveWordConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ServerSimpleInfoDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SEventRegisterAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SingleBagPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SingleBagPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SingleCharacterPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SingleCharacterPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillBarConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillGroupConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillInfluenceTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillProbConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillStepConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillStepLevelConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillTargetDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SkillVarConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SocialPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SocialPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SpecialMoveConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new StatusConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new StatusDataLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SubsectionRankConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SubsectionRankSimpleDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SubsectionRankToolDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SystemPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new SystemPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TaskConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TaskDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TaskDescribeReplaceTextToolAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TaskTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TeamDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TeamMemberDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TeamPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TeamPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TeamSimpleDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TeamTargetConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new Test2DataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TestDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TextConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new TouchControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UIBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UIConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UII18NTextAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UILogicBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UILogicConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnionDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnionMemberDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnionPartAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnionPartDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnionSimpleDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitAICommandLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitAIDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitAILogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitAvatarDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitAvatarLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitEffectAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitFightDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitFightDataLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitFightExDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitFightLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitFuncDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitHeadLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitHeadLogic3DOneAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitIdentityLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitInfoDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitLogicBaseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitModelSlotTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitMoveDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitMoveLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitMoveTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitNormalDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitPosDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitPosLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitShowLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitShowLogic3DOneAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitSimpleDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitSpecialMoveTypeConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UnitSResponseAdapter());
		appdomain.RegisterCrossBindingAdaptor(new UseItemArgDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new VehicleConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new VehicleIdentityDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new VehicleIdentityLogicAdapter());
		appdomain.RegisterCrossBindingAdaptor(new ViewControlAdapter());
		appdomain.RegisterCrossBindingAdaptor(new VocationConfigAdapter());
		appdomain.RegisterCrossBindingAdaptor(new WorkCompleteDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new WorkReceiverDataAdapter());
		appdomain.RegisterCrossBindingAdaptor(new GameFactoryControlAdapter());
	}
	
	protected override void initConfigAdapters(AppDomain appdomain)
	{
		base.initConfigAdapters(appdomain);

	}
	
	/// <summary>
	/// 初始化数据适配器
	/// </summary>
	protected override void initDataAdapters(AppDomain appdomain)
	{
		base.initDataAdapters(appdomain);
		
	}
	
	protected override void initGenerateAdapters(AppDomain appdomain)
	{
		base.initGenerateAdapters(appdomain);
		
	}
	
}
