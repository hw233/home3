using ShineEngine;

/// <summary>
/// (generated by shine)
/// </summary>
public class TriggerFunctionType
{
	/// <summary>
	/// 起始
	/// </summary>
	public const int off=1;
	
	/// <summary>
	/// 计数
	/// </summary>
	public const int count=148;
	
	/// <summary>
	/// 如果
	/// </summary>
	public const int If=1;
	
	/// <summary>
	/// 循环
	/// </summary>
	public const int While=2;
	
	/// <summary>
	/// 获取字符串key自定义对象
	/// </summary>
	public const int GetSVar=3;
	
	/// <summary>
	/// 获取局部字符串key自定义对象
	/// </summary>
	public const int GetLocalVar=4;
	
	/// <summary>
	/// 非
	/// </summary>
	public const int Not=5;
	
	/// <summary>
	/// 并且
	/// </summary>
	public const int And=6;
	
	/// <summary>
	/// 并且2
	/// </summary>
	public const int And2=7;
	
	/// <summary>
	/// 或者
	/// </summary>
	public const int Or=8;
	
	/// <summary>
	/// 或者2
	/// </summary>
	public const int Or2=9;
	
	/// <summary>
	/// 判断相等
	/// </summary>
	public const int Equals=10;
	
	/// <summary>
	/// 判断int相等
	/// </summary>
	public const int EqualsInt=11;
	
	/// <summary>
	/// 判断float相等
	/// </summary>
	public const int EqualsFloat=12;
	
	/// <summary>
	/// 判断long相等
	/// </summary>
	public const int EqualsLong=13;
	
	/// <summary>
	/// 判断string相等
	/// </summary>
	public const int EqualsString=14;
	
	/// <summary>
	/// 大于int
	/// </summary>
	public const int GreaterThanInt=15;
	
	/// <summary>
	/// 大于等于int
	/// </summary>
	public const int GreaterThanOrEqualInt=16;
	
	/// <summary>
	/// 小于int
	/// </summary>
	public const int LessThanInt=17;
	
	/// <summary>
	/// 小于等于int
	/// </summary>
	public const int LessThanOrEqualInt=18;
	
	/// <summary>
	/// 大于float
	/// </summary>
	public const int GreaterThanFloat=19;
	
	/// <summary>
	/// 大于等于float
	/// </summary>
	public const int GreaterThanOrEqualFloat=20;
	
	/// <summary>
	/// 小于float
	/// </summary>
	public const int LessThanFloat=21;
	
	/// <summary>
	/// 小于等于float
	/// </summary>
	public const int LessThanOrEqualFloat=22;
	
	/// <summary>
	/// 大于long
	/// </summary>
	public const int GreaterThanLong=23;
	
	/// <summary>
	/// 大于等于long
	/// </summary>
	public const int GreaterThanOrEqualLong=24;
	
	/// <summary>
	/// 小于long
	/// </summary>
	public const int LessThanLong=25;
	
	/// <summary>
	/// 小于等于long
	/// </summary>
	public const int LessThanOrEqualLong=26;
	
	/// <summary>
	/// 获取字符串key boolean
	/// </summary>
	public const int GetSBoolean=27;
	
	/// <summary>
	/// 删除自定义字符串key变量
	/// </summary>
	public const int RemoveSVar=28;
	
	/// <summary>
	/// random一个bool值
	/// </summary>
	public const int RandomBoolean=29;
	
	/// <summary>
	/// int加法
	/// </summary>
	public const int AddInt=30;
	
	/// <summary>
	/// int减法
	/// </summary>
	public const int SubInt=31;
	
	/// <summary>
	/// int乘法
	/// </summary>
	public const int MulInt=32;
	
	/// <summary>
	/// int除法
	/// </summary>
	public const int DivInt=33;
	
	/// <summary>
	/// int取反
	/// </summary>
	public const int InvertInt=34;
	
	/// <summary>
	/// int求余
	/// </summary>
	public const int RestInt=35;
	
	/// <summary>
	/// int绝对值
	/// </summary>
	public const int AbsInt=36;
	
	/// <summary>
	/// int自增
	/// </summary>
	public const int Add1Int=37;
	
	/// <summary>
	/// int自减
	/// </summary>
	public const int Sub1Int=38;
	
	/// <summary>
	/// float转int
	/// </summary>
	public const int ConvertFloat2Int=39;
	
	/// <summary>
	/// long转int
	/// </summary>
	public const int ConvertLong2Int=40;
	
	/// <summary>
	/// 获取字符串key int
	/// </summary>
	public const int GetSInt=41;
	
	/// <summary>
	/// 获取全局变量int
	/// </summary>
	public const int GetCurrentLoopIndex=42;
	
	/// <summary>
	/// 获取当前list遍历元素
	/// </summary>
	public const int GetCurrentListElement=43;
	
	/// <summary>
	/// 随一整形(0<=value<range)
	/// </summary>
	public const int RandomInt=44;
	
	/// <summary>
	/// 随一整形(start<=value<end)
	/// </summary>
	public const int RandomRange=45;
	
	/// <summary>
	/// 获取triggerGM指令str变量
	/// </summary>
	public const int GetTriggerGMCommandIntArg=46;
	
	/// <summary>
	/// float加法
	/// </summary>
	public const int AddFloat=47;
	
	/// <summary>
	/// float减法
	/// </summary>
	public const int SubFloat=48;
	
	/// <summary>
	/// float乘法
	/// </summary>
	public const int MulFloat=49;
	
	/// <summary>
	/// float除法
	/// </summary>
	public const int DivFloat=50;
	
	/// <summary>
	/// float取反
	/// </summary>
	public const int InvertFloat=51;
	
	/// <summary>
	/// float绝对值
	/// </summary>
	public const int AbsFloat=52;
	
	/// <summary>
	/// 获取字符串key变量float
	/// </summary>
	public const int GetSFloat=53;
	
	/// <summary>
	/// 获取全局变量float
	/// </summary>
	public const int ConvertInt2Float=54;
	
	/// <summary>
	/// float转float
	/// </summary>
	public const int ConvertLong2Float=55;
	
	/// <summary>
	/// long加法
	/// </summary>
	public const int AddLong=56;
	
	/// <summary>
	/// long减法
	/// </summary>
	public const int SubLong=57;
	
	/// <summary>
	/// long乘法
	/// </summary>
	public const int MulLong=58;
	
	/// <summary>
	/// long除法
	/// </summary>
	public const int DivLong=59;
	
	/// <summary>
	/// long取反
	/// </summary>
	public const int InvertLong=60;
	
	/// <summary>
	/// long绝对值
	/// </summary>
	public const int AbsLong=61;
	
	/// <summary>
	/// int转long
	/// </summary>
	public const int ConvertInt2Long=62;
	
	/// <summary>
	/// float转long
	/// </summary>
	public const int ConvertFloat2Long=63;
	
	/// <summary>
	/// 获取字符串key变量long
	/// </summary>
	public const int GetSLong=64;
	
	/// <summary>
	/// 获取全局变量long
	/// </summary>
	public const int GetTimeMillis=65;
	
	/// <summary>
	/// string相加
	/// </summary>
	public const int AddStr=66;
	
	/// <summary>
	/// int转string
	/// </summary>
	public const int ConvertInt2Str=67;
	
	/// <summary>
	/// float转string
	/// </summary>
	public const int ConvertFloat2Str=68;
	
	/// <summary>
	/// long转string
	/// </summary>
	public const int ConvertLong2Str=69;
	
	/// <summary>
	/// bool转string
	/// </summary>
	public const int ConvertBool2Str=70;
	
	/// <summary>
	/// 获取字符串key变量string
	/// </summary>
	public const int GetSString=71;
	
	/// <summary>
	/// 获取全局变量string
	/// </summary>
	public const int AsList=72;
	
	/// <summary>
	/// 创建空List
	/// </summary>
	public const int CreateList=73;
	
	/// <summary>
	/// 获取list长度
	/// </summary>
	public const int GetListSize=74;
	
	/// <summary>
	/// list添加
	/// </summary>
	public const int ListAdd=75;
	
	/// <summary>
	/// list删除
	/// </summary>
	public const int ListRemove=76;
	
	/// <summary>
	/// list删除元素
	/// </summary>
	public const int ListRemoveObj=77;
	
	/// <summary>
	/// list清空
	/// </summary>
	public const int ListClear=78;
	
	/// <summary>
	/// list查询
	/// </summary>
	public const int ListIndexOf=79;
	
	/// <summary>
	/// list查询
	/// </summary>
	public const int ListContains=80;
	
	/// <summary>
	/// 遍历list
	/// </summary>
	public const int ForeachList=81;
	
	/// <summary>
	/// list是否为空
	/// </summary>
	public const int ListIsEmpty=82;
	
	public const int AsMap=83;
	
	/// <summary>
	/// 创建空Map
	/// </summary>
	public const int CreateMap=84;
	
	/// <summary>
	/// 获取Map长度
	/// </summary>
	public const int GetMapSize=85;
	
	/// <summary>
	/// map添加
	/// </summary>
	public const int MapPut=86;
	
	/// <summary>
	/// Map删除
	/// </summary>
	public const int MapRemove=87;
	
	/// <summary>
	/// Map清空
	/// </summary>
	public const int MapClear=88;
	
	/// <summary>
	/// Map包含
	/// </summary>
	public const int MapContains=89;
	
	/// <summary>
	/// map是否为空
	/// </summary>
	public const int MapIsEmpty=90;
	
	public const int AsSet=91;
	
	/// <summary>
	/// 创建空Set
	/// </summary>
	public const int CreateSet=92;
	
	/// <summary>
	/// 获取Set长度
	/// </summary>
	public const int GetSetSize=93;
	
	/// <summary>
	/// Set添加
	/// </summary>
	public const int SetAdd=94;
	
	/// <summary>
	/// Set删除
	/// </summary>
	public const int SetRemove=95;
	
	/// <summary>
	/// Set清空
	/// </summary>
	public const int SetClear=96;
	
	/// <summary>
	/// Set包含
	/// </summary>
	public const int SetContains=97;
	
	/// <summary>
	/// Set是否为空
	/// </summary>
	public const int SetIsEmpty=98;
	
	/// <summary>
	/// trigger初始化好
	/// </summary>
	public const int OnInit=99;
	
	/// <summary>
	/// 间隔执行
	/// </summary>
	public const int OnInterval=100;
	
	/// <summary>
	/// triggerGM指令
	/// </summary>
	public const int OnTriggerGMCommand=101;
	
	/// <summary>
	/// 开启trigger
	/// </summary>
	public const int OpenTrigger=102;
	
	/// <summary>
	/// 关闭trigger
	/// </summary>
	public const int CloseTrigger=103;
	
	/// <summary>
	/// 执行trigger(需要检查环境)
	/// </summary>
	public const int RunTrigger=104;
	
	/// <summary>
	/// 执行trigger(不检查环境)
	/// </summary>
	public const int RunTriggerAbs=105;
	
	/// <summary>
	/// 等待(ms)
	/// </summary>
	public const int Wait=106;
	
	/// <summary>
	/// 等待某条件成立(checkDelay:检查间隔(ms))
	/// </summary>
	public const int WaitUtil=107;
	
	/// <summary>
	/// 输出字符串
	/// </summary>
	public const int Print=108;
	
	/// <summary>
	/// 循环loop次(i从0到loop-1)
	/// </summary>
	public const int ForLoop=109;
	
	/// <summary>
	/// 结束当前trigger执行动作
	/// </summary>
	public const int BreakTrigger=110;
	
	/// <summary>
	/// 结束当前循环(对while有效)
	/// </summary>
	public const int BreakLoop=111;
	
	/// <summary>
	/// 跳过剩余脚本，继续执行循环(对while有效)
	/// </summary>
	public const int ContinueLoop=112;
	
	/// <summary>
	/// 设置自定义字符串key变量
	/// </summary>
	public const int SetSVar=113;
	
	/// <summary>
	/// 设置局部字符串key变量
	/// </summary>
	public const int SetLocalVar=114;
	
	/// <summary>
	/// 设置全局变量boolean
	/// </summary>
	public const int GetEventIntArgs=115;
	
	/// <summary>
	/// 获取event bool参数
	/// </summary>
	public const int GetEventBoolArgs=116;
	
	/// <summary>
	/// 获取event string参数
	/// </summary>
	public const int GetEventStringArgs=117;
	
	/// <summary>
	/// 获取主引导步
	/// </summary>
	public const int GetGuideMainStep=118;
	
	/// <summary>
	/// 游戏开始
	/// </summary>
	public const int OnGameStart=119;
	
	/// <summary>
	/// 设置主引导步
	/// </summary>
	public const int SetGuideMainStep=120;
	
	/// <summary>
	/// 显示UI(key:UI表主键)
	/// </summary>
	public const int ShowUI=121;
	
	/// <summary>
	/// 隐藏UI(key:UI表主键)
	/// </summary>
	public const int HideUI=122;
	
	/// <summary>
	/// c单位是否存活
	/// </summary>
	public const int UnitIsAlive=123;
	
	/// <summary>
	/// 对于某单位来说，点是否可走
	/// </summary>
	public const int IsPosEnabled=124;
	
	/// <summary>
	/// 当前触发单位
	/// </summary>
	public const int TriggerUnit=125;
	
	/// <summary>
	/// e场景开始时
	/// </summary>
	public const int OnSceneStart=126;
	
	/// <summary>
	/// 单位发生移动
	/// </summary>
	public const int OnUnitMove=127;
	
	/// <summary>
	/// 单位受到伤害时
	/// </summary>
	public const int OnUnitBeDamage=128;
	
	/// <summary>
	/// 计算点距离
	/// </summary>
	public const int PosDistance=129;
	
	/// <summary>
	/// 获取单位的战斗单位id
	/// </summary>
	public const int GetUnitFightUnitID=130;
	
	/// <summary>
	/// 通过实例id获取单位
	/// </summary>
	public const int GetUnit=131;
	
	/// <summary>
	/// 强制类型转化为单位
	/// </summary>
	public const int AsUnit=132;
	
	/// <summary>
	/// 创建并添加傀儡
	/// </summary>
	public const int CreateAddPuppet=133;
	
	/// <summary>
	/// 强制类型转化为点
	/// </summary>
	public const int AsPos=134;
	
	/// <summary>
	/// 获取单位位置
	/// </summary>
	public const int GetUnitPos=135;
	
	/// <summary>
	/// 获取场景排放配置位置
	/// </summary>
	public const int GetScenePlacePos=136;
	
	/// <summary>
	/// 极坐标取点
	/// </summary>
	public const int PosPolar=137;
	
	/// <summary>
	/// 点相加
	/// </summary>
	public const int AddPos=138;
	
	/// <summary>
	/// 强制类型转化为朝向
	/// </summary>
	public const int AsDir=139;
	
	/// <summary>
	/// 获取单位朝向
	/// </summary>
	public const int GetUnitDir=140;
	
	/// <summary>
	/// 朝向 相加
	/// </summary>
	public const int AddDir=141;
	
	/// <summary>
	/// 朝向 相加
	/// </summary>
	public const int AddDirFloat=142;
	
	/// <summary>
	/// 强制击杀单位
	/// </summary>
	public const int KillUnit=143;
	
	/// <summary>
	/// 移除单位
	/// </summary>
	public const int RemoveUnit=144;
	
	/// <summary>
	/// 移动到目标单位
	/// </summary>
	public const int MoveToUnit=145;
	
	/// <summary>
	/// 单位添加属性
	/// </summary>
	public const int UnitAddAttribute=146;
	
	/// <summary>
	/// 单位治疗生命千分比
	/// </summary>
	public const int UnitAddHpPercent=147;
	
}
