namespace Shine
{
	/** 连接成功消息(generated by shine) */
	export class SocketConnectSuccessResponse extends ShineResponse
	{
		/** 数据类型ID */
		public static dataID:number=ShineResponseType.SocketConnectSuccess;
		
		/** 连接id */
		public id:number;
		
		/** 重连令牌 */
		public token:number;
		
		constructor()
		{
			super();
			this._dataID=ShineResponseType.SocketConnectSuccess;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "SocketConnectSuccessResponse";
		}
		
		/** 读取字节流(完整版) */
		protected toReadBytesFull(stream:BytesReadStream):void
		{
			super.toReadBytesFull(stream);
			
			var position:number=BytesReadStream.getReadBytes(stream);
			
			this.id=stream.readInt();
			
			this.token=stream.readInt();
			
			BytesReadStream.disReadBytes(stream,position);
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.token=stream.readInt();
			
		}
		
		/** 转文本输出 */
		protected toWriteDataString(writer:DataWriter):void
		{
			super.toWriteDataString(writer);
			
			writer.writeTabs();
			writer.sb.append("id");
			writer.sb.append(':');
			writer.sb.append(this.id);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("token");
			writer.sb.append(':');
			writer.sb.append(this.token);
			
			writer.writeEnter();
		}
		
		/** 执行 */
		protected execute():void
		{
			this.socket.setReceiveInfo(this.id,this.token);
		}
		
	}
}
