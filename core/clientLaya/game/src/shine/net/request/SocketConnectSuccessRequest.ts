namespace Shine
{
	/** 连接成功消息(generated by shine) */
	export class SocketConnectSuccessRequest extends ShineRequest
	{
		/** 数据类型ID */
		public static dataID:number=ShineRequestType.SocketConnectSuccess;
		
		/** 连接id */
		public id:number;
		
		/** 重连令牌 */
		public token:number;
		
		constructor()
		{
			super();
			this._dataID=ShineRequestType.SocketConnectSuccess;
		}
		
		protected copyData():void
		{
			super.copyData();
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "SocketConnectSuccessRequest";
		}
		
		/** 写入字节流(完整版) */
		protected toWriteBytesFull(stream:BytesWriteStream):void
		{
			super.toWriteBytesFull(stream);
			
			var position:number=BytesWriteStream.getWriteBytes(stream);
			
			stream.writeInt(this.id);
			
			stream.writeInt(this.token);
			
			BytesWriteStream.disWriteBytes(stream,position);
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			stream.writeInt(this.id);
			
			stream.writeInt(this.token);
			
		}
		
		/** 转文本输出 */
		protected toWriteDataString(writer:DataWriter):void
		{
			super.toWriteDataString(writer);
			
			writer.writeTabs();
			writer.sb.append("id");
			writer.sb.append(':');
			writer.sb.append(this.id);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("token");
			writer.sb.append(':');
			writer.sb.append(this.token);
			
			writer.writeEnter();
		}
		
		/** 创建实例 */
		public static createSocketConnectSuccess(id:number,token:number):SocketConnectSuccessRequest
		{
			var re:SocketConnectSuccessRequest=new SocketConnectSuccessRequest();
			re.id=id;
			re.token=token;
			return re;
		}
		
	}
}
