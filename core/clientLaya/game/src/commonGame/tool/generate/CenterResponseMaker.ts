namespace Shine
{
	/** (generated by shine) */
	export class CenterResponseMaker extends DataMaker
	{
		constructor()
		{
			super();
			this.offSet=CenterResponseType.off;
			this.list=new Array<Function>(CenterResponseType.count-this.offSet);
			this.list[CenterResponseType.FuncFromCenterS-this.offSet]=this.createFuncFromCenterSResponse;
			this.list[CenterResponseType.FuncMatchSuccessFromCenter-this.offSet]=this.createFuncMatchSuccessFromCenterResponse;
			this.list[CenterResponseType.FuncSendAcceptMatchFromCenter-this.offSet]=this.createFuncSendAcceptMatchFromCenterResponse;
			this.list[CenterResponseType.FuncSendReAddMatchFromCenter-this.offSet]=this.createFuncSendReAddMatchFromCenterResponse;
			this.list[CenterResponseType.SendCenterReceiptToClient-this.offSet]=this.createSendCenterReceiptToClientResponse;
			this.list[CenterResponseType.SendInfoCodeFromCenter-this.offSet]=this.createSendInfoCodeFromCenterResponse;
			this.list[CenterResponseType.SendInfoCodeWithArgsFromCenter-this.offSet]=this.createSendInfoCodeWithArgsFromCenterResponse;
		}
		
		private createSendInfoCodeWithArgsFromCenterResponse():BaseData
		{
			return new SendInfoCodeWithArgsFromCenterResponse();
		}
		
		private createSendInfoCodeFromCenterResponse():BaseData
		{
			return new SendInfoCodeFromCenterResponse();
		}
		
		private createFuncSendAcceptMatchFromCenterResponse():BaseData
		{
			return new FuncSendAcceptMatchFromCenterResponse();
		}
		
		private createFuncSendReAddMatchFromCenterResponse():BaseData
		{
			return new FuncSendReAddMatchFromCenterResponse();
		}
		
		private createFuncMatchSuccessFromCenterResponse():BaseData
		{
			return new FuncMatchSuccessFromCenterResponse();
		}
		
		private createFuncFromCenterSResponse():BaseData
		{
			return new FuncFromCenterSResponse();
		}
		
		private createSendCenterReceiptToClientResponse():BaseData
		{
			return new SendCenterReceiptToClientResponse();
		}
		
	}
}
