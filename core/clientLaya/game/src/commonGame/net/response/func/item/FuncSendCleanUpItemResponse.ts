namespace Shine
{
	/** 推送整理物品消息(generated by shine) */
	export class FuncSendCleanUpItemResponse extends FuncSResponse
	{
		/** 数据类型ID */
		public static dataID:number=GameResponseType.FuncSendCleanUpItem;
		
		/** 道具组 */
		public items:SList<ItemData>;
		
		constructor()
		{
			super();
			this._dataID=GameResponseType.FuncSendCleanUpItem;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "FuncSendCleanUpItemResponse";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			if(stream.readBoolean())
			{
				var itemsLen:number=stream.readLen();
				if(this.items!=null)
				{
					this.items.clear();
					this.items.ensureCapacity(itemsLen);
				}
				else
				{
					this.items=new SList<ItemData>();
				}
				
				var itemsT:SList<ItemData>=this.items;
				for(var itemsI:number=itemsLen-1;itemsI>=0;--itemsI)
				{
					var itemsV:ItemData;
					if(stream.readBoolean())
					{
						itemsV=stream.readDataSimpleNotNull() as ItemData;
					}
					else
					{
						itemsV=null;
					}
					
					itemsT.add(itemsV);
				}
			}
			else
			{
				this.items=null;
			}
			
		}
		
		/** 执行 */
		protected execute():void
		{
			this.me.func.getItemContainerTool(this.funcID).onCleanUpByServer(this.items);
		}
		
	}
}
