namespace Shine
{
	/** AOI灯塔刷新消息(删除一组+添加一组)(generated by shine) */
	export class AOITowerRefreshResponse extends SceneSResponse
	{
		/** 数据类型ID */
		public static dataID:number=GameResponseType.AOITowerRefresh;
		
		/** 移除单位组 */
		public removeUnits:SList<number>;
		
		/** 添加单位组 */
		public addUnits:SList<UnitData>;
		
		constructor()
		{
			super();
			this._dataID=GameResponseType.AOITowerRefresh;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "AOITowerRefreshResponse";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			var removeUnitsLen:number=stream.readLen();
			if(this.removeUnits!=null)
			{
				this.removeUnits.clear();
				this.removeUnits.ensureCapacity(removeUnitsLen);
			}
			else
			{
				this.removeUnits=new SList<number>();
			}
			
			var removeUnitsT:SList<number>=this.removeUnits;
			for(var removeUnitsI:number=removeUnitsLen-1;removeUnitsI>=0;--removeUnitsI)
			{
				var removeUnitsV:number;
				removeUnitsV=stream.readInt();
				
				removeUnitsT.add(removeUnitsV);
			}
			
			var addUnitsLen:number=stream.readLen();
			if(this.addUnits!=null)
			{
				this.addUnits.clear();
				this.addUnits.ensureCapacity(addUnitsLen);
			}
			else
			{
				this.addUnits=new SList<UnitData>();
			}
			
			var addUnitsT:SList<UnitData>=this.addUnits;
			for(var addUnitsI:number=addUnitsLen-1;addUnitsI>=0;--addUnitsI)
			{
				var addUnitsV:UnitData;
				addUnitsV=stream.readDataSimpleNotNull() as UnitData;
				
				addUnitsT.add(addUnitsV);
			}
			
		}
		
		/** 执行 */
		protected execute():void
		{
			
		}
		
	}
}
