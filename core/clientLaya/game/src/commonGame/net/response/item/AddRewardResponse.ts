namespace Shine
{
	/** 添加奖励消息(generated by shine) */
	export class AddRewardResponse extends GameResponse
	{
		/** 数据类型ID */
		public static dataID:number=GameResponseType.AddReward;
		
		/** 调用方式 */
		public way:number;
		
		/** 等级 */
		public level:number;
		
		/** 奖励次数 */
		public num:number;
		
		/** 奖励ID */
		public rewardID:number;
		
		/** 随机物品组结果 */
		public randomItemList:SList<ItemData>;
		
		constructor()
		{
			super();
			this._dataID=GameResponseType.AddReward;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "AddRewardResponse";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.way=stream.readInt();
			
			this.rewardID=stream.readInt();
			
			this.level=stream.readInt();
			
			this.num=stream.readInt();
			
			if(stream.readBoolean())
			{
				var randomItemListLen:number=stream.readLen();
				if(this.randomItemList!=null)
				{
					this.randomItemList.clear();
					this.randomItemList.ensureCapacity(randomItemListLen);
				}
				else
				{
					this.randomItemList=new SList<ItemData>();
				}
				
				var randomItemListT:SList<ItemData>=this.randomItemList;
				for(var randomItemListI:number=randomItemListLen-1;randomItemListI>=0;--randomItemListI)
				{
					var randomItemListV:ItemData;
					if(stream.readBoolean())
					{
						randomItemListV=stream.readDataSimpleNotNull() as ItemData;
					}
					else
					{
						randomItemListV=null;
					}
					
					randomItemListT.add(randomItemListV);
				}
			}
			else
			{
				this.randomItemList=null;
			}
			
		}
		
		/** 执行 */
		protected execute():void
		{
			this.me.bag.onAddReward(this.way,this.rewardID,this.randomItemList);
		}
		
	}
}
