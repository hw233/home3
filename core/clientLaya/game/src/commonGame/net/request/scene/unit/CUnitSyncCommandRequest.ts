namespace Shine
{
	/** 单位同步参数指令(generated by shine) */
	export class CUnitSyncCommandRequest extends CUnitRRequest
	{
		/** 数据类型ID */
		public static dataID:number=GameRequestType.CUnitSyncCommand;
		
		/** 当前位置 */
		public posDir:PosDirData;
		
		/** 指令 */
		public type:number;
		
		/** 整形参数组 */
		public ints:number[];
		
		/** float参数组 */
		public floats:number[];
		
		constructor()
		{
			super();
			this._dataID=GameRequestType.CUnitSyncCommand;
		}
		
		protected copyData():void
		{
			super.copyData();
			var posDirTemp:PosDirData=this.posDir;
			if(posDirTemp!=null)
			{
				this.posDir=new PosDirData();
				this.posDir.copy(posDirTemp);
			}
			else
			{
				this.posDir=null;
			}
			
			var intsTemp:number[]=this.ints;
			if(intsTemp!=null)
			{
				var intsR:number[]=intsTemp;
				var intsLen:number=intsR.length;
				this.ints=new Array<number>(intsLen);
				var intsT:number[]=this.ints;
				for(var intsI:number=0;intsI<intsLen;++intsI)
				{
					var intsV:number=intsR[intsI];
					var intsU:number;
					intsU=intsV;
					
					intsT[intsI]=intsU;
				}
			}
			else
			{
				this.ints=null;
			}
			
			var floatsTemp:number[]=this.floats;
			if(floatsTemp!=null)
			{
				var floatsR:number[]=floatsTemp;
				var floatsLen:number=floatsR.length;
				this.floats=new Array<number>(floatsLen);
				var floatsT:number[]=this.floats;
				for(var floatsI:number=0;floatsI<floatsLen;++floatsI)
				{
					var floatsV:number=floatsR[floatsI];
					var floatsU:number;
					floatsU=floatsV;
					
					floatsT[floatsI]=floatsU;
				}
			}
			else
			{
				this.floats=null;
			}
			
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "CUnitSyncCommandRequest";
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			if(this.posDir!=null)
			{
				stream.writeBoolean(true);
				this.posDir.writeBytesSimple(stream);
			}
			else
			{
				stream.writeBoolean(false);
			}
			
			stream.writeInt(this.type);
			
			if(this.ints!=null)
			{
				stream.writeBoolean(true);
				var intsT:number[]=this.ints;
				stream.writeLen(intsT.length);
				for(var intsVI=0,intsVLen=intsT.length;intsVI<intsVLen;++intsVI)
				{
					var intsV:number=intsT[intsVI];
					stream.writeInt(intsV);
					
				}
			}
			else
			{
				stream.writeBoolean(false);
			}
			
			if(this.floats!=null)
			{
				stream.writeBoolean(true);
				var floatsT:number[]=this.floats;
				stream.writeLen(floatsT.length);
				for(var floatsVI=0,floatsVLen=floatsT.length;floatsVI<floatsVLen;++floatsVI)
				{
					var floatsV:number=floatsT[floatsVI];
					stream.writeFloat(floatsV);
					
				}
			}
			else
			{
				stream.writeBoolean(false);
			}
			
		}
		
		/** 创建实例 */
		public static createCUnitSyncCommand(instanceID:number,posDir:PosDirData,type:number,ints:number[],floats:number[]):CUnitSyncCommandRequest
		{
			var re:CUnitSyncCommandRequest=new CUnitSyncCommandRequest();
			re.instanceID=instanceID;
			re.posDir=posDir;
			re.type=type;
			re.ints=ints;
			re.floats=floats;
			return re;
		}
		
	}
}
