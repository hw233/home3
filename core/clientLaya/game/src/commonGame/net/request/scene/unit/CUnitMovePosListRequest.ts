namespace Shine
{
	/** 客户端单位移动到点组消息(generated by shine) */
	export class CUnitMovePosListRequest extends CUnitRRequest
	{
		/** 数据类型ID */
		public static dataID:number=GameRequestType.CUnitMovePosList;
		
		/** 移动类型 */
		public type:number;
		
		/** 当前位置 */
		public nowPos:PosData;
		
		/** 位置组 */
		public targets:SList<PosData>;
		
		constructor()
		{
			super();
			this._dataID=GameRequestType.CUnitMovePosList;
		}
		
		protected copyData():void
		{
			super.copyData();
			var nowPosTemp:PosData=this.nowPos;
			if(nowPosTemp!=null)
			{
				this.nowPos=new PosData();
				this.nowPos.copy(nowPosTemp);
			}
			else
			{
				this.nowPos=null;
			}
			
			var targetsTemp:SList<PosData>=this.targets;
			this.targets=new SList<PosData>();
			var targetsT:SList<PosData>=this.targets;
			if(!targetsTemp.isEmpty())
			{
				for(var targetsVI=0,targetsVLen=targetsTemp.length;targetsVI<targetsVLen;++targetsVI)
				{
					var targetsV:PosData=targetsTemp[targetsVI];
					var targetsU:PosData;
					targetsU=new PosData();
					targetsU.copy(targetsV);
					
					targetsT.add(targetsU);
				}
			}
			
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "CUnitMovePosListRequest";
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			stream.writeInt(this.type);
			
			if(this.nowPos!=null)
			{
				stream.writeBoolean(true);
				this.nowPos.writeBytesSimple(stream);
			}
			else
			{
				stream.writeBoolean(false);
			}
			
			stream.writeLen(this.targets.size());
			if(!this.targets.isEmpty())
			{
				for(var targetsVI=0,targetsVLen=this.targets.length;targetsVI<targetsVLen;++targetsVI)
				{
					var targetsV:PosData=this.targets[targetsVI];
					targetsV.writeBytesSimple(stream);
					
				}
			}
			
		}
		
		/** 创建实例 */
		public static createCUnitMovePosList(instanceID:number,type:number,nowPos:PosData,targets:SList<PosData>):CUnitMovePosListRequest
		{
			var re:CUnitMovePosListRequest=new CUnitMovePosListRequest();
			re.instanceID=instanceID;
			re.type=type;
			re.nowPos=nowPos;
			re.targets=targets;
			return re;
		}
		
	}
}
