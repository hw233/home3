namespace Shine
{
	/** 发送客户端流程步消息(generated by shine) */
	export class SendHttpClientFlowStepHttpRequest extends LoginHttpRequest
	{
		/** 数据类型ID */
		public static dataID:number=LoginHttpRequestType.SendHttpClientFlowStep;
		
		/** uid */
		public uid:string;
		
		/** 步骤 */
		public step:number;
		
		constructor()
		{
			super();
			this._dataID=LoginHttpRequestType.SendHttpClientFlowStep;
		}
		
		protected copyData():void
		{
			super.copyData();
		}
		
		/** 写入字节流(完整版) */
		protected toWriteBytesFull(stream:BytesWriteStream):void
		{
			super.toWriteBytesFull(stream);
			
			var position:number=BytesWriteStream.getWriteBytes(stream);
			
			stream.writeUTF(this.uid);
			
			stream.writeInt(this.step);
			
			BytesWriteStream.disWriteBytes(stream,position);
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			stream.writeUTF(this.uid);
			
			stream.writeInt(this.step);
			
		}
		
		/** 执行 */
		protected onComplete():void
		{
			
		}
		
		/** 同步执行 */
		public sendMSync():void
		{
			this.doSendSync();
			return;
		}
		
		/** 创建实例 */
		public static createSendHttpClientFlowStep(uid:string,step:number):SendHttpClientFlowStepHttpRequest
		{
			var re:SendHttpClientFlowStepHttpRequest=new SendHttpClientFlowStepHttpRequest();
			re.uid=uid;
			re.step=step;
			return re;
		}
		
	}
}
