namespace Shine
{
	/** 全局配置表(generated by shine) */
	export class Global
	{
		/** 每个账号一个区服可拥有的角色数目(合服不影响每个被合区服的拥有角色数目) */
		public static ownPlayerNum:number;
		
		/** 角色名字上限数目(机器字) */
		public static playerNameLength:number;
		
		/** 角色名字是否使用区服ID作为前缀,如(s1.张三) */
		public static isNameUseAreaIDAsFront:boolean;
		
		/** 角色名字是否可以重名 */
		public static canPlayerNameRepeat:boolean;
		
		/** 客户端离线事务，每日可修改时间的次数 */
		public static clientOfflineWorkTimeChangeDailyNum:number;
		
		/** 显示网络延迟圈圈最大超时时间(ms) */
		public static showNetDelayMaxTime:number;
		
		/** 显示网络延迟圈圈最小间隔(ms) */
		public static showNetDelayMinTime:number;
		
		/** 激活码长度 */
		public static activationCodeLength:number;
		
		/** 激活码是否使用批次(每批次每个玩家只能用一次) */
		public static activationCodeUseBatch:boolean;
		
		/** 游戏信息日志保留时间(玩家自身)(day) */
		public static infoLogKeepTime:number;
		
		/** 游戏信息日志保留数目(玩家自身) */
		public static infoLogKeepNum:number;
		
		/** 翻页显示插件每页CD(s) */
		public static pageToolShowCD:number;
		
		/** 大Float数字每段位数(3为千,4为万) */
		public static bigFloatWei:number;
		
		/** 坐标推送缩放比率 */
		public static posSendScale:number;
		
		/** 朝向推送缩放比率 */
		public static directionSendScale:number;
		
		/** 保持当前属性百分比在上限改变前(否则就是保持当前值不变) */
		public static keepCurrentPercentAtMaxChange:boolean;
		
		/** 单位转身XY和最小值(小于此值不转身) */
		public static unitTurnXYSumMin:number;
		
		/** 单位移动XY和的最大允许误差(超过此值即拉回) */
		public static unitMovePosMaxDeviation:number;
		
		/** 距离验证允许误差 */
		public static distanceCheckDeviation:number;
		
		/** 移动速度最小值 */
		public static moveSpeedMin:number;
		
		/** 移动速度最大值 */
		public static moveSpeedMax:number;
		
		/** 攻击速度最小值 */
		public static attackSpeedMin:number;
		
		/** 攻击速度最大值 */
		public static attackSpeedMax:number;
		
		/** 施法速度最小值 */
		public static castSpeedMin:number;
		
		/** 施法速度最大值 */
		public static castSpeedMax:number;
		
		/** 使用移动速度比率(使用值=数值*比率)(每秒多少米) */
		public static useMoveSpeedRatio:number;
		
		/** 命中公式参数0(基础命中率) */
		public static hitRateArg0:number;
		
		/** 暴击公式参数0(基础暴击率) */
		public static critArg0:number;
		
		/** 暴击默认伤害比率 */
		public static critDamageBaseRatio:number;
		
		/** 子弹最长保留时间(s) */
		public static bulletMaxLastTime:number;
		
		/** 场景保留时间(s) */
		public static sceneKeepTime:number;
		
		/** 攻击范围背向延伸距离(米) */
		public static attackScopeBackLength:number;
		
		/** 攻击范围默认攻击高度(米) */
		public static attackScopeDefaultHeight:number;
		
		/** 默认显示帧率 */
		public static defaultShowFps:number;
		
		/** 帧同步缓存帧数 */
		public static frameSyncCacheFrames:number;
		
		/** 徘徊等待时间最小值(s) */
		public static wanderWaitTimeMin:number;
		
		/** 徘徊等待时间最大值(s) */
		public static wanderWaitTimeMax:number;
		
		/** 徘徊移动半径(米) */
		public static wanderMoveRadius:number;
		
		/** 阻止网络延迟时间(ms) */
		public static preventNetDelayTime:number;
		
		/** 场景分线数目(仅在sceneLinePlayerLimitNum为0时有意义) */
		public static sceneLineNum:number;
		
		/** 朝向移动预测最短距离(米) */
		public static moveDirForecastMinDistance:number;
		
		/** 朝向移动预测时间(ms) */
		public static moveDirForecastTime:number;
		
		/** 朝向移动预测发送消息间隔(ms) */
		public static moveDirSendDelay:number;
		
		/** 客户端移动消息发送最短间隔(ms) */
		public static clientMoveSendMinDelay:number;
		
		/** 出生主城ID */
		public static bornTownID:number;
		
		/** 怪物退回时每秒回血千分比 */
		public static monsterBackAddHPPercent:number;
		
		/** 出生主城位置ID */
		public static bornTownPosID:number;
		
		/** 场景分线角色限制数目(当此值大于0时,视为启用按人数分线策略,并且sceenLineNum值无效) */
		public static sceneLinePlayerLimitNum:number;
		
		/** 匹配成功后最长等待确认时间(s) */
		public static matchWaitTime:number;
		
		/** aoi可视单位上限 */
		public static aoiSeeMax:number;
		
		/** 场景AOI灯塔尺寸 */
		public static aoiTowerSize:number;
		
		/** 拾取范围半径(米) */
		public static pickUpRadius:number;
		
		/** 自增属性计算间隔(ms) */
		public static increaseAttributeDelay:number;
		
		/** 摄像机最近距离(与目标距离) */
		public static cameraMinDistance:number;
		
		/** 摄像机最长距离(与目标距离) */
		public static cameraMaxDistance:number;
		
		/** 摄像机2.5D视角(角度) */
		public static camera25DAngle:number;
		
		/** 摄像机最小视角(角度) */
		public static cameraMinAxisXAngle:number;
		
		/** 摄像机大小视角(角度) */
		public static cameraMaxAxisXAngle:number;
		
		/** 摄像机缓动时间(s) */
		public static cameraTweenTime:number;
		
		/** 摄像机鼠标滚轮缩放速度 */
		public static cameraWheelSpeed:number;
		
		/** 摄像机默认距离 */
		public static cameraDefaultDistance:number;
		
		/** 摄像机X轴旋转速度 */
		public static cameraRotateSpeedX:number;
		
		/** 摄像机Y轴旋转速度 */
		public static cameraRotateSpeedY:number;
		
		/** 摄像机触摸缩放速度 */
		public static cameraScaleSpeed:number;
		
		/** 等级上限 */
		public static levelMax:number;
		
		/** 主背包格子数(初始) */
		public static mainBagGridNum:number;
		
		/** 邮件每页显示数目 */
		public static mailPageEachShowNum:number;
		
		/** 邮件最多保存数目 */
		public static mailSaveMaxNum:number;
		
		/** 邮件最长保存时间(天) */
		public static mailSaveMaxTime:number;
		
		/** 玩家发送的邮件ID */
		public static playerMailID:number;
		
		/** 任务可视等级差 */
		public static questCanSeeLevelD:number;
		
		/** 好友功能启用双向好友(否则单向) */
		public static useOvonicFriend:boolean;
		
		/** 好友上限数目(0为无上限) */
		public static friendMaxNum:number;
		
		/** 好友黑名单上限数目(0为无上限) */
		public static friendBlackListMaxNum:number;
		
		/** 申请添加好友上限数目(0为无上限) */
		public static applyAddFriendMaxNum:number;
		
		/** 好友申请最长保存时间(天) */
		public static friendApplySaveMaxTime:number;
		
		/** 大float位值 */
		public static bigFloatWeiValue:number;
		
		/** 大float位值 */
		public static bigFloatWeiLastValue:number;
		
		/** 组队的玩家群id(<=0则为无组队功能) */
		public static teamRoleGroupID:number;
		
		/** 组队共享半径(米)(0为无限) */
		public static teamShareRadius:number;
		
		/** 大float最大rank差值 */
		public static bigFloatRankMaxD:number;
		
		/** 地图阻挡尺寸(米) */
		public static mapBlockSize:number;
		
		/** 工会的玩家群id(<=0则为无工会) */
		public static unionRoleGroupID:number;
		
		/** 从流读取 */
		public static readFromData(data:GlobalReadData):void
		{
			this.ownPlayerNum=data.ownPlayerNum;
			this.playerNameLength=data.playerNameLength;
			this.isNameUseAreaIDAsFront=data.isNameUseAreaIDAsFront;
			this.canPlayerNameRepeat=data.canPlayerNameRepeat;
			this.clientOfflineWorkTimeChangeDailyNum=data.clientOfflineWorkTimeChangeDailyNum;
			this.showNetDelayMinTime=data.showNetDelayMinTime;
			this.showNetDelayMaxTime=data.showNetDelayMaxTime;
			this.activationCodeLength=data.activationCodeLength;
			this.activationCodeUseBatch=data.activationCodeUseBatch;
			this.infoLogKeepTime=data.infoLogKeepTime;
			this.infoLogKeepNum=data.infoLogKeepNum;
			this.pageToolShowCD=data.pageToolShowCD;
			this.bigFloatWei=data.bigFloatWei;
			this.posSendScale=data.posSendScale;
			this.directionSendScale=data.directionSendScale;
			this.keepCurrentPercentAtMaxChange=data.keepCurrentPercentAtMaxChange;
			this.unitTurnXYSumMin=data.unitTurnXYSumMin;
			this.unitMovePosMaxDeviation=data.unitMovePosMaxDeviation;
			this.distanceCheckDeviation=data.distanceCheckDeviation;
			this.moveSpeedMin=data.moveSpeedMin;
			this.moveSpeedMax=data.moveSpeedMax;
			this.attackSpeedMin=data.attackSpeedMin;
			this.attackSpeedMax=data.attackSpeedMax;
			this.castSpeedMin=data.castSpeedMin;
			this.castSpeedMax=data.castSpeedMax;
			this.useMoveSpeedRatio=data.useMoveSpeedRatio;
			this.hitRateArg0=data.hitRateArg0;
			this.critArg0=data.critArg0;
			this.critDamageBaseRatio=data.critDamageBaseRatio;
			this.bulletMaxLastTime=data.bulletMaxLastTime;
			this.sceneKeepTime=data.sceneKeepTime;
			this.attackScopeBackLength=data.attackScopeBackLength;
			this.attackScopeDefaultHeight=data.attackScopeDefaultHeight;
			this.defaultShowFps=data.defaultShowFps;
			this.frameSyncCacheFrames=data.frameSyncCacheFrames;
			this.wanderWaitTimeMin=data.wanderWaitTimeMin;
			this.wanderWaitTimeMax=data.wanderWaitTimeMax;
			this.wanderMoveRadius=data.wanderMoveRadius;
			this.preventNetDelayTime=data.preventNetDelayTime;
			this.increaseAttributeDelay=data.increaseAttributeDelay;
			this.clientMoveSendMinDelay=data.clientMoveSendMinDelay;
			this.moveDirSendDelay=data.moveDirSendDelay;
			this.moveDirForecastTime=data.moveDirForecastTime;
			this.moveDirForecastMinDistance=data.moveDirForecastMinDistance;
			this.mapBlockSize=data.mapBlockSize;
			this.monsterBackAddHPPercent=data.monsterBackAddHPPercent;
			this.sceneLineNum=data.sceneLineNum;
			this.sceneLinePlayerLimitNum=data.sceneLinePlayerLimitNum;
			this.bornTownID=data.bornTownID;
			this.bornTownPosID=data.bornTownPosID;
			this.matchWaitTime=data.matchWaitTime;
			this.aoiTowerSize=data.aoiTowerSize;
			this.aoiSeeMax=data.aoiSeeMax;
			this.pickUpRadius=data.pickUpRadius;
			this.cameraMinDistance=data.cameraMinDistance;
			this.cameraMaxDistance=data.cameraMaxDistance;
			this.camera25DAngle=data.camera25DAngle;
			this.cameraMinAxisXAngle=data.cameraMinAxisXAngle;
			this.cameraMaxAxisXAngle=data.cameraMaxAxisXAngle;
			this.cameraTweenTime=data.cameraTweenTime;
			this.cameraWheelSpeed=data.cameraWheelSpeed;
			this.cameraDefaultDistance=data.cameraDefaultDistance;
			this.cameraRotateSpeedX=data.cameraRotateSpeedX;
			this.cameraRotateSpeedY=data.cameraRotateSpeedY;
			this.cameraScaleSpeed=data.cameraScaleSpeed;
			this.levelMax=data.levelMax;
			this.mainBagGridNum=data.mainBagGridNum;
			this.mailPageEachShowNum=data.mailPageEachShowNum;
			this.mailSaveMaxNum=data.mailSaveMaxNum;
			this.mailSaveMaxTime=data.mailSaveMaxTime;
			this.playerMailID=data.playerMailID;
			this.questCanSeeLevelD=data.questCanSeeLevelD;
			this.useOvonicFriend=data.useOvonicFriend;
			this.friendMaxNum=data.friendMaxNum;
			this.friendBlackListMaxNum=data.friendBlackListMaxNum;
			this.applyAddFriendMaxNum=data.applyAddFriendMaxNum;
			this.friendApplySaveMaxTime=data.friendApplySaveMaxTime;
			this.unionRoleGroupID=data.unionRoleGroupID;
			this.teamRoleGroupID=data.teamRoleGroupID;
			this.teamShareRadius=data.teamShareRadius;
		}
		
		public static afterReadConfig():void
		{
			this.bigFloatWeiValue=Math.pow(10,this.bigFloatWei);
			this.bigFloatWeiLastValue=Math.pow(10,9-this.bigFloatWei);//1个int
			this.bigFloatRankMaxD=300/this.bigFloatWei;//不用按308算
		}
		
		/** 全部读取后 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
