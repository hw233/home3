namespace Shine
{
	/** 客户端版本数据(generated by shine) */
	export class ClientVersionData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.ClientVersion;
		
		/** 设备平台类型 */
		public type:number;
		
		/** 最低App版本 */
		public leastAppVersion:number;
		
		/** 当前App版本 */
		public currentAppVersion:number;
		
		/** 最低资源版本 */
		public leastResourceVersion:number;
		
		/** 当前资源版本 */
		public currentResourceVersion:number;
		
		/** 版本字符串 */
		public version:string;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.ClientVersion;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "ClientVersionData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.type=stream.readInt();
			
			this.leastAppVersion=stream.readInt();
			
			this.currentAppVersion=stream.readInt();
			
			this.leastResourceVersion=stream.readInt();
			
			this.currentResourceVersion=stream.readInt();
			
			this.version=stream.readUTF();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeInt(this.type);
			
			stream.writeInt(this.leastAppVersion);
			
			stream.writeInt(this.currentAppVersion);
			
			stream.writeInt(this.leastResourceVersion);
			
			stream.writeInt(this.currentResourceVersion);
			
			stream.writeUTF(this.version);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof ClientVersionData))
				return;
			
			var mData:ClientVersionData=data as ClientVersionData;
			
			this.type=mData.type;
			this.leastAppVersion=mData.leastAppVersion;
			this.currentAppVersion=mData.currentAppVersion;
			this.leastResourceVersion=mData.leastResourceVersion;
			this.currentResourceVersion=mData.currentResourceVersion;
			this.version=mData.version;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof ClientVersionData))
				return;
			
			var mData:ClientVersionData=data as ClientVersionData;
			
			this.type=mData.type;
			
			this.leastAppVersion=mData.leastAppVersion;
			
			this.currentAppVersion=mData.currentAppVersion;
			
			this.leastResourceVersion=mData.leastResourceVersion;
			
			this.currentResourceVersion=mData.currentResourceVersion;
			
			this.version=mData.version;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			
		}
		
	}
}
