namespace Shine
{
	/** 角色排行工具数据(generated by shine) */
	export class PlayerRankToolData extends FuncToolData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.PlayerRankTool;
		
		/** 版本 */
		public version:number;
		
		/** 参数组 */
		public args:number[];
		
		/** 匹配值 */
		public value:number;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.PlayerRankTool;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "PlayerRankToolData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.version=stream.readInt();
			
			this.value=stream.readLong();
			
			if(stream.readBoolean())
			{
				var argsLen:number=stream.readLen();
				this.args=new Array<number>(argsLen);
				var argsT:number[]=this.args;
				for(var argsI:number=0;argsI<argsLen;++argsI)
				{
					var argsV:number;
					argsV=stream.readLong();
					
					argsT[argsI]=argsV;
				}
			}
			else
			{
				this.args=null;
			}
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			stream.writeInt(this.version);
			
			stream.writeLong(this.value);
			
			if(this.args!=null)
			{
				stream.writeBoolean(true);
				var argsT:number[]=this.args;
				stream.writeLen(argsT.length);
				for(var argsVI=0,argsVLen=argsT.length;argsVI<argsVLen;++argsVI)
				{
					var argsV:number=argsT[argsVI];
					stream.writeLong(argsV);
					
				}
			}
			else
			{
				stream.writeBoolean(false);
			}
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			super.toShadowCopy(data);
			
			if(!(data instanceof PlayerRankToolData))
				return;
			
			var mData:PlayerRankToolData=data as PlayerRankToolData;
			
			this.version=mData.version;
			this.value=mData.value;
			this.args=mData.args;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			super.toCopy(data);
			
			if(!(data instanceof PlayerRankToolData))
				return;
			
			var mData:PlayerRankToolData=data as PlayerRankToolData;
			
			this.version=mData.version;
			
			this.value=mData.value;
			
			if(mData.args!=null)
			{
				var argsR:number[]=mData.args;
				var argsLen:number=argsR.length;
				this.args=new Array<number>(argsLen);
				var argsT:number[]=this.args;
				for(var argsI:number=0;argsI<argsLen;++argsI)
				{
					var argsV:number=argsR[argsI];
					var argsU:number;
					argsU=argsV;
					
					argsT[argsI]=argsU;
				}
			}
			else
			{
				this.args=null;
			}
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			super.initDefault();
			
		}
		
	}
}
