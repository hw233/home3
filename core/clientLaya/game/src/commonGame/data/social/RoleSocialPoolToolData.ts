namespace Shine
{
	/** 角色社交数据池工具数据(generated by shine) */
	export class RoleSocialPoolToolData extends FuncToolData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.RoleSocialPoolTool;
		
		/** 数据 */
		public dic:SMap<number,RoleSocialPoolData>;
		
		/** 下次裁剪 */
		public nextCutTime:number;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.RoleSocialPoolTool;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "RoleSocialPoolToolData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			var dicLen:number=stream.readLen();
			if(this.dic!=null)
			{
				this.dic.clear();
				this.dic.ensureCapacity(dicLen);
			}
			else
			{
				this.dic=new SMap<number,RoleSocialPoolData>(dicLen);
			}
			
			var dicT:SMap<number,RoleSocialPoolData>=this.dic;
			for(var dicI:number=dicLen-1;dicI>=0;--dicI)
			{
				var dicK:number;
				var dicV:RoleSocialPoolData;
				dicK=stream.readLong();
				
				dicV=stream.readDataSimpleNotNull() as RoleSocialPoolData;
				
				dicT.put(dicK,dicV);
			}
			
			this.nextCutTime=stream.readLong();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			stream.writeLen(this.dic.size());
			if(!this.dic.isEmpty())
			{
				for(var dicK of this.dic.getKeys())
				{
					var dicV:RoleSocialPoolData=this.dic.get(dicK);
					stream.writeLong(dicK);
					
					stream.writeDataSimpleNotNull(dicV);
					
				}
			}
			
			stream.writeLong(this.nextCutTime);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			super.toShadowCopy(data);
			
			if(!(data instanceof RoleSocialPoolToolData))
				return;
			
			var mData:RoleSocialPoolToolData=data as RoleSocialPoolToolData;
			
			this.dic=mData.dic;
			this.nextCutTime=mData.nextCutTime;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			super.toCopy(data);
			
			if(!(data instanceof RoleSocialPoolToolData))
				return;
			
			var mData:RoleSocialPoolToolData=data as RoleSocialPoolToolData;
			
			if(this.dic!=null)
			{
				this.dic.clear();
				this.dic.ensureCapacity(mData.dic.size());
			}
			else
			{
				this.dic=new SMap<number,RoleSocialPoolData>(mData.dic.size());
			}
			
			var dicT:SMap<number,RoleSocialPoolData>=this.dic;
			if(!mData.dic.isEmpty())
			{
				for(var dicK of mData.dic.getKeys())
				{
					var dicV:RoleSocialPoolData=mData.dic.get(dicK);
					var dicW:number;
					var dicU:RoleSocialPoolData;
					dicW=dicK;
					
					dicU=dicV.clone() as RoleSocialPoolData;
					
					dicT.put(dicW,dicU);
				}
			}
			
			this.nextCutTime=mData.nextCutTime;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			super.initDefault();
			
			this.dic=new SMap<number,RoleSocialPoolData>();
		}
		
	}
}
