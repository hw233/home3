namespace Shine
{
	/** 游戏服信息数据(generated by shine) */
	export class GameServerInfoData extends ServerInfoData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.GameServerInfo;
		
		/** 是否辅助服(跨服) */
		public isAssist:boolean;
		
		/** 承载的区服列表 */
		public areaIDList:SList<number>;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.GameServerInfo;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "GameServerInfoData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.isAssist=stream.readBoolean();
			
			var areaIDListLen:number=stream.readLen();
			if(this.areaIDList!=null)
			{
				this.areaIDList.clear();
				this.areaIDList.ensureCapacity(areaIDListLen);
			}
			else
			{
				this.areaIDList=new SList<number>();
			}
			
			var areaIDListT:SList<number>=this.areaIDList;
			for(var areaIDListI:number=areaIDListLen-1;areaIDListI>=0;--areaIDListI)
			{
				var areaIDListV:number;
				areaIDListV=stream.readInt();
				
				areaIDListT.add(areaIDListV);
			}
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			stream.writeBoolean(this.isAssist);
			
			stream.writeLen(this.areaIDList.size());
			if(!this.areaIDList.isEmpty())
			{
				for(var areaIDListVI=0,areaIDListVLen=this.areaIDList.length;areaIDListVI<areaIDListVLen;++areaIDListVI)
				{
					var areaIDListV:number=this.areaIDList[areaIDListVI];
					stream.writeInt(areaIDListV);
					
				}
			}
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			super.toShadowCopy(data);
			
			if(!(data instanceof GameServerInfoData))
				return;
			
			var mData:GameServerInfoData=data as GameServerInfoData;
			
			this.isAssist=mData.isAssist;
			this.areaIDList=mData.areaIDList;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			super.toCopy(data);
			
			if(!(data instanceof GameServerInfoData))
				return;
			
			var mData:GameServerInfoData=data as GameServerInfoData;
			
			this.isAssist=mData.isAssist;
			
			if(this.areaIDList!=null)
			{
				this.areaIDList.clear();
				this.areaIDList.ensureCapacity(mData.areaIDList.size());
			}
			else
			{
				this.areaIDList=new SList<number>();
			}
			
			var areaIDListT:SList<number>=this.areaIDList;
			if(!mData.areaIDList.isEmpty())
			{
				for(var areaIDListVI=0,areaIDListVLen=mData.areaIDList.length;areaIDListVI<areaIDListVLen;++areaIDListVI)
				{
					var areaIDListV:number=mData.areaIDList[areaIDListVI];
					var areaIDListU:number;
					areaIDListU=areaIDListV;
					
					areaIDListT.add(areaIDListU);
				}
			}
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			super.initDefault();
			
			this.areaIDList=new SList<number>();
		}
		
	}
}
