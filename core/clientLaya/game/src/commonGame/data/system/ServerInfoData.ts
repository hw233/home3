namespace Shine
{
	/** 中心服(generated by shine) */
	export class ServerInfoData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.ServerInfo;
		
		/** ID */
		public id:number;
		
		/** 服务器地址 */
		public serverHost:string;
		
		/** 服务器端口 */
		public serverPort:number;
		
		/** 服务器http端口 */
		public serverHttpPort:number;
		
		/** 客户端地址 */
		public clientHost:string;
		
		/** 客户端端口 */
		public clientPort:number;
		
		/** 客户端http端口 */
		public clientHttpPort:number;
		
		/** mysql */
		public mysql:string;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.ServerInfo;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "ServerInfoData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.id=stream.readInt();
			
			this.serverHost=stream.readUTF();
			
			this.serverPort=stream.readInt();
			
			this.serverHttpPort=stream.readInt();
			
			this.clientHost=stream.readUTF();
			
			this.clientPort=stream.readInt();
			
			this.clientHttpPort=stream.readInt();
			
			this.mysql=stream.readUTF();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeInt(this.id);
			
			stream.writeUTF(this.serverHost);
			
			stream.writeInt(this.serverPort);
			
			stream.writeInt(this.serverHttpPort);
			
			stream.writeUTF(this.clientHost);
			
			stream.writeInt(this.clientPort);
			
			stream.writeInt(this.clientHttpPort);
			
			stream.writeUTF(this.mysql);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof ServerInfoData))
				return;
			
			var mData:ServerInfoData=data as ServerInfoData;
			
			this.id=mData.id;
			this.serverHost=mData.serverHost;
			this.serverPort=mData.serverPort;
			this.serverHttpPort=mData.serverHttpPort;
			this.clientHost=mData.clientHost;
			this.clientPort=mData.clientPort;
			this.clientHttpPort=mData.clientHttpPort;
			this.mysql=mData.mysql;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof ServerInfoData))
				return;
			
			var mData:ServerInfoData=data as ServerInfoData;
			
			this.id=mData.id;
			
			this.serverHost=mData.serverHost;
			
			this.serverPort=mData.serverPort;
			
			this.serverHttpPort=mData.serverHttpPort;
			
			this.clientHost=mData.clientHost;
			
			this.clientPort=mData.clientPort;
			
			this.clientHttpPort=mData.clientHttpPort;
			
			this.mysql=mData.mysql;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			
		}
		
	}
}
