namespace Shine
{
	/** 游戏服给客户端的简版数据(generated by shine) */
	export class GameServerClientSimpleData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.GameServerClientSimple;
		
		/** ID */
		public id:number;
		
		/** 客户端地址 */
		public clientHost:string;
		
		/** 客户端使用端口(可能经过lbs等服务转发) */
		public clientUsePort:number;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.GameServerClientSimple;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "GameServerClientSimpleData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.id=stream.readInt();
			
			this.clientHost=stream.readUTF();
			
			this.clientUsePort=stream.readInt();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeInt(this.id);
			
			stream.writeUTF(this.clientHost);
			
			stream.writeInt(this.clientUsePort);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof GameServerClientSimpleData))
				return;
			
			var mData:GameServerClientSimpleData=data as GameServerClientSimpleData;
			
			this.id=mData.id;
			this.clientHost=mData.clientHost;
			this.clientUsePort=mData.clientUsePort;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof GameServerClientSimpleData))
				return;
			
			var mData:GameServerClientSimpleData=data as GameServerClientSimpleData;
			
			this.id=mData.id;
			
			this.clientHost=mData.clientHost;
			
			this.clientUsePort=mData.clientUsePort;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			
		}
		
	}
}
