namespace Shine
{
	/** 玩家展示数据(generated by shine) */
	export class RoleShowData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.RoleShow;
		
		/** 角色ID */
		public playerID:number;
		
		/** 创建区服 */
		public createAreaID:number;
		
		/** 名字 */
		public name:string;
		
		/** 性别 */
		public sex:number;
		
		/** 职业 */
		public vocation:number;
		
		/** 战斗力 */
		public fightForce:number;
		
		/** 工会名 */
		public unionName:string;
		
		/** 工会id */
		public unionID:number;
		
		/** 玩家等级(不是角色等级) */
		public level:number;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.RoleShow;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "RoleShowData";
		}
		
		/** 改变 * */
		public onChange(data:RoleShowChangeData):void
		{
			switch(data.type)
			{
				case RoleShowDataPartType.Name:
				{
					this.name=data.arg1;
					return;
				}
				case RoleShowDataPartType.Sex:
				{
					this.sex=data.arg0;
					return;
				}
				case RoleShowDataPartType.Vocation:
				{
					this.vocation=data.arg0;
					return;
				}
				case RoleShowDataPartType.Level:
				{
					this.level=data.arg0;
					return;
				}
				default:
				{
					Ctrl.throwError("未处理的ShowDataPartType类型:"+data.type);
				}
					break;
			}
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.playerID=stream.readLong();
			
			this.createAreaID=stream.readInt();
			
			this.name=stream.readUTF();
			
			this.sex=stream.readInt();
			
			this.vocation=stream.readInt();
			
			this.level=stream.readInt();
			
			this.fightForce=stream.readLong();
			
			this.unionID=stream.readLong();
			
			this.unionName=stream.readUTF();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeLong(this.playerID);
			
			stream.writeInt(this.createAreaID);
			
			stream.writeUTF(this.name);
			
			stream.writeInt(this.sex);
			
			stream.writeInt(this.vocation);
			
			stream.writeInt(this.level);
			
			stream.writeLong(this.fightForce);
			
			stream.writeLong(this.unionID);
			
			stream.writeUTF(this.unionName);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof RoleShowData))
				return;
			
			var mData:RoleShowData=data as RoleShowData;
			
			this.playerID=mData.playerID;
			this.createAreaID=mData.createAreaID;
			this.name=mData.name;
			this.sex=mData.sex;
			this.vocation=mData.vocation;
			this.level=mData.level;
			this.fightForce=mData.fightForce;
			this.unionID=mData.unionID;
			this.unionName=mData.unionName;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof RoleShowData))
				return;
			
			var mData:RoleShowData=data as RoleShowData;
			
			this.playerID=mData.playerID;
			
			this.createAreaID=mData.createAreaID;
			
			this.name=mData.name;
			
			this.sex=mData.sex;
			
			this.vocation=mData.vocation;
			
			this.level=mData.level;
			
			this.fightForce=mData.fightForce;
			
			this.unionID=mData.unionID;
			
			this.unionName=mData.unionName;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			
		}
		
	}
}
