namespace Shine
{
	/** 道具容器数据(generated by shine) */
	export class ItemContainerData extends FuncToolData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.ItemContainer;
		
		/** 道具组 */
		public items:SList<ItemData>;
		
		/** 开启格子数(0为无限) */
		public gridNum:number;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.ItemContainer;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "ItemContainerData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			if(stream.readBoolean())
			{
				var itemsLen:number=stream.readLen();
				if(this.items!=null)
				{
					this.items.clear();
					this.items.ensureCapacity(itemsLen);
				}
				else
				{
					this.items=new SList<ItemData>();
				}
				
				var itemsT:SList<ItemData>=this.items;
				for(var itemsI:number=itemsLen-1;itemsI>=0;--itemsI)
				{
					var itemsV:ItemData;
					if(stream.readBoolean())
					{
						itemsV=stream.readDataSimpleNotNull() as ItemData;
					}
					else
					{
						itemsV=null;
					}
					
					itemsT.add(itemsV);
				}
			}
			else
			{
				this.items=null;
			}
			
			this.gridNum=stream.readInt();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			if(this.items!=null)
			{
				stream.writeBoolean(true);
				stream.writeLen(this.items.size());
				if(!this.items.isEmpty())
				{
					for(var itemsVI=0,itemsVLen=this.items.length;itemsVI<itemsVLen;++itemsVI)
					{
						var itemsV:ItemData=this.items[itemsVI];
						if(itemsV!=null)
						{
							stream.writeBoolean(true);
							stream.writeDataSimpleNotNull(itemsV);
						}
						else
						{
							stream.writeBoolean(false);
						}
						
					}
				}
			}
			else
			{
				stream.writeBoolean(false);
			}
			
			stream.writeInt(this.gridNum);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			super.toShadowCopy(data);
			
			if(!(data instanceof ItemContainerData))
				return;
			
			var mData:ItemContainerData=data as ItemContainerData;
			
			this.items=mData.items;
			this.gridNum=mData.gridNum;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			super.toCopy(data);
			
			if(!(data instanceof ItemContainerData))
				return;
			
			var mData:ItemContainerData=data as ItemContainerData;
			
			if(mData.items!=null)
			{
				if(this.items!=null)
				{
					this.items.clear();
					this.items.ensureCapacity(mData.items.size());
				}
				else
				{
					this.items=new SList<ItemData>();
				}
				
				var itemsT:SList<ItemData>=this.items;
				if(!mData.items.isEmpty())
				{
					for(var itemsVI=0,itemsVLen=mData.items.length;itemsVI<itemsVLen;++itemsVI)
					{
						var itemsV:ItemData=mData.items[itemsVI];
						var itemsU:ItemData;
						if(itemsV!=null)
						{
							itemsU=itemsV.clone() as ItemData;
						}
						else
						{
							itemsU=null;
						}
						
						itemsT.add(itemsU);
					}
				}
			}
			else
			{
				this.items=null;
			}
			
			this.gridNum=mData.gridNum;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			super.initDefault();
			
		}
		
	}
}
