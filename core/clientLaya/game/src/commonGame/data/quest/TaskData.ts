namespace Shine
{
	/** 任务目标数据(extends)(generated by shine) */
	export class TaskData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.Task;
		
		/** 实例ID */
		public instanceID:number;
		
		/** 目标id */
		public id:number;
		
		/** 完成数 */
		public num:number;
		
		/** 配置 */
		public config:TaskConfig;
		
		/** 功能ID */
		public funcID:number;
		
		/** 主ID */
		public mainID:number;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.Task;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "TaskData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.instanceID=stream.readInt();
			
			this.id=stream.readInt();
			
			this.num=stream.readInt();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeInt(this.instanceID);
			
			stream.writeInt(this.id);
			
			stream.writeInt(this.num);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof TaskData))
				return;
			
			var mData:TaskData=data as TaskData;
			
			this.instanceID=mData.instanceID;
			this.id=mData.id;
			this.num=mData.num;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof TaskData))
				return;
			
			var mData:TaskData=data as TaskData;
			
			this.instanceID=mData.instanceID;
			
			this.id=mData.id;
			
			this.num=mData.num;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			
		}
		
		public reloadConfig():void
		{
			this.config=TaskConfig.get(this.id);
		}
		
		/** 是否完成 */
		public isComplete():boolean
		{
			return this.num>=this.config.needNum;
		}
		
	}
}
