namespace Shine
{
	/** 角色身份数据基类(generated by shine) */
	export class CharacterIdentityData extends FightUnitIdentityData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.CharacterIdentity;
		
		/** 序号(帧同步使用) */
		public index:number;
		
		/** 玩家显示数据 */
		public roleShowData:RoleShowData;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.CharacterIdentity;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "CharacterIdentityData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.index=stream.readInt();
			
			this.roleShowData=stream.readDataSimpleNotNull() as RoleShowData;
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			super.toWriteBytesSimple(stream);
			
			stream.writeInt(this.index);
			
			stream.writeDataSimpleNotNull(this.roleShowData);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			super.toShadowCopy(data);
			
			if(!(data instanceof CharacterIdentityData))
				return;
			
			var mData:CharacterIdentityData=data as CharacterIdentityData;
			
			this.index=mData.index;
			this.roleShowData=mData.roleShowData;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			super.toCopy(data);
			
			if(!(data instanceof CharacterIdentityData))
				return;
			
			var mData:CharacterIdentityData=data as CharacterIdentityData;
			
			this.index=mData.index;
			
			this.roleShowData=mData.roleShowData.clone() as RoleShowData;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			super.initDefault();
			
			this.roleShowData=new RoleShowData();
			this.roleShowData.initDefault();
		}
		
	}
}
