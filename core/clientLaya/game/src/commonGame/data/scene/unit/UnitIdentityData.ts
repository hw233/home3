namespace Shine
{
	/** 单位身份数据(generated by shine) */
	export class UnitIdentityData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.UnitIdentity;
		
		/** 所属势力(playerID为-1时有意义) */
		public force:number=0;
		
		/** 归属角色ID(角色的归属就是自身角色ID)(没有归属就是-1) */
		public playerID:number=-1;
		
		/** 类型(见UnitType) */
		public type:number;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.UnitIdentity;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "UnitIdentityData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.type=stream.readInt();
			
			this.playerID=stream.readLong();
			
			this.force=stream.readInt();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeInt(this.type);
			
			stream.writeLong(this.playerID);
			
			stream.writeInt(this.force);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof UnitIdentityData))
				return;
			
			var mData:UnitIdentityData=data as UnitIdentityData;
			
			this.type=mData.type;
			this.playerID=mData.playerID;
			this.force=mData.force;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof UnitIdentityData))
				return;
			
			var mData:UnitIdentityData=data as UnitIdentityData;
			
			this.type=mData.type;
			
			this.playerID=mData.playerID;
			
			this.force=mData.force;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			
		}
		
	}
}
