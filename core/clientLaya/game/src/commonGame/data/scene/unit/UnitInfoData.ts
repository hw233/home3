namespace Shine
{
	/** 单位信息数据(generated by shine) */
	export class UnitInfoData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.UnitInfo;
		
		/** 身份数据 */
		public identity:UnitIdentityData;
		
		/** 造型数据 */
		public avatar:UnitAvatarData;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.UnitInfo;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "UnitInfoData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.identity=stream.readDataSimpleNotNull() as UnitIdentityData;
			
			if(stream.readBoolean())
			{
				this.avatar=stream.readDataSimpleNotNull() as UnitAvatarData;
			}
			else
			{
				this.avatar=null;
			}
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeDataSimpleNotNull(this.identity);
			
			if(this.avatar!=null)
			{
				stream.writeBoolean(true);
				stream.writeDataSimpleNotNull(this.avatar);
			}
			else
			{
				stream.writeBoolean(false);
			}
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof UnitInfoData))
				return;
			
			var mData:UnitInfoData=data as UnitInfoData;
			
			this.identity=mData.identity;
			this.avatar=mData.avatar;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof UnitInfoData))
				return;
			
			var mData:UnitInfoData=data as UnitInfoData;
			
			this.identity=mData.identity.clone() as UnitIdentityData;
			
			if(mData.avatar!=null)
			{
				this.avatar=mData.avatar.clone() as UnitAvatarData;
			}
			else
			{
				this.avatar=null;
			}
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			this.identity=new UnitIdentityData();
			this.identity.initDefault();
		}
		
	}
}
