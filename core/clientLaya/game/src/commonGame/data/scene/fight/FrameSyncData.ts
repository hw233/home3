namespace Shine
{
	/** 帧同步数据(generated by shine) */
	export class FrameSyncData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.FrameSync;
		
		/** 帧序号 */
		public index:number;
		
		/** 指令组 */
		public commands:SList<FrameSyncCommandData>;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.FrameSync;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "FrameSyncData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.index=stream.readInt();
			
			if(stream.readBoolean())
			{
				var commandsLen:number=stream.readLen();
				if(this.commands!=null)
				{
					this.commands.clear();
					this.commands.ensureCapacity(commandsLen);
				}
				else
				{
					this.commands=new SList<FrameSyncCommandData>();
				}
				
				var commandsT:SList<FrameSyncCommandData>=this.commands;
				for(var commandsI:number=commandsLen-1;commandsI>=0;--commandsI)
				{
					var commandsV:FrameSyncCommandData;
					if(stream.readBoolean())
					{
						commandsV=stream.readDataSimpleNotNull() as FrameSyncCommandData;
					}
					else
					{
						commandsV=null;
					}
					
					commandsT.add(commandsV);
				}
			}
			else
			{
				this.commands=null;
			}
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeInt(this.index);
			
			if(this.commands!=null)
			{
				stream.writeBoolean(true);
				stream.writeLen(this.commands.size());
				if(!this.commands.isEmpty())
				{
					for(var commandsVI=0,commandsVLen=this.commands.length;commandsVI<commandsVLen;++commandsVI)
					{
						var commandsV:FrameSyncCommandData=this.commands[commandsVI];
						if(commandsV!=null)
						{
							stream.writeBoolean(true);
							stream.writeDataSimpleNotNull(commandsV);
						}
						else
						{
							stream.writeBoolean(false);
						}
						
					}
				}
			}
			else
			{
				stream.writeBoolean(false);
			}
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof FrameSyncData))
				return;
			
			var mData:FrameSyncData=data as FrameSyncData;
			
			this.index=mData.index;
			this.commands=mData.commands;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof FrameSyncData))
				return;
			
			var mData:FrameSyncData=data as FrameSyncData;
			
			this.index=mData.index;
			
			if(mData.commands!=null)
			{
				if(this.commands!=null)
				{
					this.commands.clear();
					this.commands.ensureCapacity(mData.commands.size());
				}
				else
				{
					this.commands=new SList<FrameSyncCommandData>();
				}
				
				var commandsT:SList<FrameSyncCommandData>=this.commands;
				if(!mData.commands.isEmpty())
				{
					for(var commandsVI=0,commandsVLen=mData.commands.length;commandsVI<commandsVLen;++commandsVI)
					{
						var commandsV:FrameSyncCommandData=mData.commands[commandsVI];
						var commandsU:FrameSyncCommandData;
						if(commandsV!=null)
						{
							commandsU=commandsV.clone() as FrameSyncCommandData;
						}
						else
						{
							commandsU=null;
						}
						
						commandsT.add(commandsU);
					}
				}
			}
			else
			{
				this.commands=null;
			}
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			
		}
		
	}
}
