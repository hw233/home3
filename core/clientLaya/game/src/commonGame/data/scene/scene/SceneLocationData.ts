namespace Shine
{
	/** 场景位置数据(generated by shine) */
	export class SceneLocationData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=BaseDataType.SceneLocation;
		
		/** 场景ID(必选参,剩下的都是可选参) */
		public sceneID:number;
		
		/** 线ID */
		public lineID:number=-1;
		
		/** 所在游戏服ID */
		public gameID:number=-1;
		
		/** 执行器号 */
		public executorIndex:number=-1;
		
		/** 实例ID */
		public instanceID:number=-1;
		
		constructor()
		{
			super();
			this._dataID=BaseDataType.SceneLocation;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.sceneID=stream.readInt();
			
			this.lineID=stream.readInt();
			
			this.gameID=stream.readInt();
			
			this.executorIndex=stream.readInt();
			
			this.instanceID=stream.readInt();
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeInt(this.sceneID);
			
			stream.writeInt(this.lineID);
			
			stream.writeInt(this.gameID);
			
			stream.writeInt(this.executorIndex);
			
			stream.writeInt(this.instanceID);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof SceneLocationData))
				return;
			
			var mData:SceneLocationData=data as SceneLocationData;
			
			this.sceneID=mData.sceneID;
			this.lineID=mData.lineID;
			this.gameID=mData.gameID;
			this.executorIndex=mData.executorIndex;
			this.instanceID=mData.instanceID;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof SceneLocationData))
				return;
			
			var mData:SceneLocationData=data as SceneLocationData;
			
			this.sceneID=mData.sceneID;
			
			this.lineID=mData.lineID;
			
			this.gameID=mData.gameID;
			
			this.executorIndex=mData.executorIndex;
			
			this.instanceID=mData.instanceID;
			
		}
		
		/** 初始化初值 */
		public initDefault():void
		{
			
		}
		
	}
}
