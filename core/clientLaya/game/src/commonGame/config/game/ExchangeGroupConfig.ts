namespace Shine
{
	/** 兑换组表(generated by shine) */
	export class ExchangeGroupConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,ExchangeGroupConfig>;
		
		/** id */
		public id:number;
		
		/** 兑换条件 */
		public conditions:number[][];
		
		/** 是否可客户端直接发起 */
		public canClientUse:boolean;
		
		/** 获取 */
		public static get(id:number):ExchangeGroupConfig
		{
			return this._dic.get(id);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,ExchangeGroupConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,ExchangeGroupConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,ExchangeGroupConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			var conditionsLen:number=stream.readLen();
			this.conditions=new Array<number[]>(conditionsLen);
			var conditionsT:number[][]=this.conditions;
			for(var conditionsI:number=0;conditionsI<conditionsLen;++conditionsI)
			{
				var conditionsV:number[];
				var conditionsVLen:number=stream.readLen();
				conditionsV=new Array<number>(conditionsVLen);
				var conditionsVT:number[]=conditionsV;
				for(var conditionsVI:number=0;conditionsVI<conditionsVLen;++conditionsVI)
				{
					var conditionsVV:number;
					conditionsVV=stream.readInt();
					
					conditionsVT[conditionsVI]=conditionsVV;
				}
				
				conditionsT[conditionsI]=conditionsV;
			}
			
			this.canClientUse=stream.readBoolean();
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
