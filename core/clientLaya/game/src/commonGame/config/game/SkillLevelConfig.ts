namespace Shine
{
	/** 技能等级表(generated by shine) */
	export class SkillLevelConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,SkillLevelConfig>;
		
		/** 技能id */
		public id:number;
		
		/** 等级 */
		public level:number;
		
		/** 产生冷却ID */
		public bringCDs:number[];
		
		/** 技能消耗 */
		public cost:DIntData[];
		
		/** 施法距离 */
		public useDistance:number;
		
		/** 吟唱读条id */
		public singBarID:number;
		
		/** 施法距离附加变量ID */
		public useDistanceVar:number;
		
		/** 引导/持续时间 */
		public lastTime:number;
		
		/** 技能描述 */
		public explain:string;
		
		/** 获取 */
		public static get(id:number,level:number):SkillLevelConfig
		{
			return this._dic.get(id * 65536 + level);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,SkillLevelConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,SkillLevelConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,SkillLevelConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.level=stream.readShort();
			
			var bringCDsLen:number=stream.readLen();
			this.bringCDs=new Array<number>(bringCDsLen);
			var bringCDsT:number[]=this.bringCDs;
			for(var bringCDsI:number=0;bringCDsI<bringCDsLen;++bringCDsI)
			{
				var bringCDsV:number;
				bringCDsV=stream.readInt();
				
				bringCDsT[bringCDsI]=bringCDsV;
			}
			
			var costLen:number=stream.readLen();
			this.cost=new Array<DIntData>(costLen);
			var costT:DIntData[]=this.cost;
			for(var costI:number=0;costI<costLen;++costI)
			{
				var costV:DIntData;
				costV=new DIntData();
				costV.readBytesSimple(stream);
				
				costT[costI]=costV;
			}
			
			this.useDistance=stream.readFloat();
			
			this.useDistanceVar=stream.readInt();
			
			this.singBarID=stream.readInt();
			
			this.lastTime=stream.readInt();
			
			this.explain=stream.readUTF();
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
