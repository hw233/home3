namespace Shine
{
	/** 功能开关表(generated by shine) */
	export class FunctionSwitchConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:FunctionSwitchConfig[];
		
		/** 功能开关id */
		public id:number;
		
		/** 开启条件 */
		public openConditions:number[][];
		
		/** 关闭条件 */
		public closeConditions:number[][];
		
		/** 获取 */
		public static get(id:number):FunctionSwitchConfig
		{
			return id>=0 && id<this._dic.length ? this._dic[id] : null;
		}
		
		/** 设置字典 */
		public static setDic(dic:FunctionSwitchConfig[]):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:FunctionSwitchConfig[]):void
		{
			ObjectUtils.arrayPutAll(this._dic,dic);
		}
		
		/** 获取全部 */
		public static getDic():FunctionSwitchConfig[]
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readShort();
			
			var openConditionsLen:number=stream.readLen();
			this.openConditions=new Array<number[]>(openConditionsLen);
			var openConditionsT:number[][]=this.openConditions;
			for(var openConditionsI:number=0;openConditionsI<openConditionsLen;++openConditionsI)
			{
				var openConditionsV:number[];
				var openConditionsVLen:number=stream.readLen();
				openConditionsV=new Array<number>(openConditionsVLen);
				var openConditionsVT:number[]=openConditionsV;
				for(var openConditionsVI:number=0;openConditionsVI<openConditionsVLen;++openConditionsVI)
				{
					var openConditionsVV:number;
					openConditionsVV=stream.readInt();
					
					openConditionsVT[openConditionsVI]=openConditionsVV;
				}
				
				openConditionsT[openConditionsI]=openConditionsV;
			}
			
			var closeConditionsLen:number=stream.readLen();
			this.closeConditions=new Array<number[]>(closeConditionsLen);
			var closeConditionsT:number[][]=this.closeConditions;
			for(var closeConditionsI:number=0;closeConditionsI<closeConditionsLen;++closeConditionsI)
			{
				var closeConditionsV:number[];
				var closeConditionsVLen:number=stream.readLen();
				closeConditionsV=new Array<number>(closeConditionsVLen);
				var closeConditionsVT:number[]=closeConditionsV;
				for(var closeConditionsVI:number=0;closeConditionsVI<closeConditionsVLen;++closeConditionsVI)
				{
					var closeConditionsVV:number;
					closeConditionsVV=stream.readInt();
					
					closeConditionsVT[closeConditionsVI]=closeConditionsVV;
				}
				
				closeConditionsT[closeConditionsI]=closeConditionsV;
			}
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
