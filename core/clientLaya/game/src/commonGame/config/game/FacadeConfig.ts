namespace Shine
{
	/** 单位外观表(generated by shine) */
	export class FacadeConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,FacadeConfig>;
		
		/** 显示ID */
		public id:number;
		
		/** 模型ID */
		public modelID:number;
		
		/** 部件组 */
		public parts:DIntData[];
		
		/** 变身优先级 */
		public proirity:number;
		
		/** 获取 */
		public static get(id:number):FacadeConfig
		{
			return this._dic.get(id);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,FacadeConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,FacadeConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,FacadeConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.modelID=stream.readInt();
			
			var partsLen:number=stream.readLen();
			this.parts=new Array<DIntData>(partsLen);
			var partsT:DIntData[]=this.parts;
			for(var partsI:number=0;partsI<partsLen;++partsI)
			{
				var partsV:DIntData;
				partsV=new DIntData();
				partsV.readBytesSimple(stream);
				
				partsT[partsI]=partsV;
			}
			
			this.proirity=stream.readInt();
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
