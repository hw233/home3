namespace Shine
{
	/** 技能步骤等级表(generated by shine) */
	export class SkillStepLevelConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,SkillStepLevelConfig>;
		
		/** 技能id */
		public id:number;
		
		/** 步骤 */
		public step:number;
		
		/** 等级 */
		public level:number;
		
		/** 帧动作组 */
		public frameActions:number[][];
		
		/** 获取 */
		public static get(id:number,step:number,level:number):SkillStepLevelConfig
		{
			return this._dic.get(id * 16777216 + step * 65536 + level);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,SkillStepLevelConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,SkillStepLevelConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,SkillStepLevelConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.step=stream.readByte();
			
			this.level=stream.readShort();
			
			var frameActionsLen:number=stream.readLen();
			this.frameActions=new Array<number[]>(frameActionsLen);
			var frameActionsT:number[][]=this.frameActions;
			for(var frameActionsI:number=0;frameActionsI<frameActionsLen;++frameActionsI)
			{
				var frameActionsV:number[];
				var frameActionsVLen:number=stream.readLen();
				frameActionsV=new Array<number>(frameActionsVLen);
				var frameActionsVT:number[]=frameActionsV;
				for(var frameActionsVI:number=0;frameActionsVI<frameActionsVLen;++frameActionsVI)
				{
					var frameActionsVV:number;
					frameActionsVV=stream.readInt();
					
					frameActionsVT[frameActionsVI]=frameActionsVV;
				}
				
				frameActionsT[frameActionsI]=frameActionsV;
			}
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
