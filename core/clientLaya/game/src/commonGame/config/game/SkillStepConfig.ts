namespace Shine
{
	/** 技能步骤表(generated by shine) */
	export class SkillStepConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,SkillStepConfig>;
		
		/** 技能id */
		public id:number;
		
		/** 步骤 */
		public step:number;
		
		/** 攻击组 */
		public attacks:DIntData[];
		
		/** 子弹组 */
		public bullets:DIntData[];
		
		/** 步骤时间(ms) */
		public time:number;
		
		/** 切换方式 */
		public switchType:number[];
		
		/** 动作ID */
		public motionID:number;
		
		/** 是否滞空(对于空中动作) */
		public isStayAir:boolean;
		
		/** 获取 */
		public static get(id:number,step:number):SkillStepConfig
		{
			return this._dic.get(id * 256 + step);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,SkillStepConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,SkillStepConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,SkillStepConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.step=stream.readByte();
			
			var attacksLen:number=stream.readLen();
			this.attacks=new Array<DIntData>(attacksLen);
			var attacksT:DIntData[]=this.attacks;
			for(var attacksI:number=0;attacksI<attacksLen;++attacksI)
			{
				var attacksV:DIntData;
				attacksV=new DIntData();
				attacksV.readBytesSimple(stream);
				
				attacksT[attacksI]=attacksV;
			}
			
			var bulletsLen:number=stream.readLen();
			this.bullets=new Array<DIntData>(bulletsLen);
			var bulletsT:DIntData[]=this.bullets;
			for(var bulletsI:number=0;bulletsI<bulletsLen;++bulletsI)
			{
				var bulletsV:DIntData;
				bulletsV=new DIntData();
				bulletsV.readBytesSimple(stream);
				
				bulletsT[bulletsI]=bulletsV;
			}
			
			this.time=stream.readInt();
			
			var switchTypeLen:number=stream.readLen();
			this.switchType=new Array<number>(switchTypeLen);
			var switchTypeT:number[]=this.switchType;
			for(var switchTypeI:number=0;switchTypeI<switchTypeLen;++switchTypeI)
			{
				var switchTypeV:number;
				switchTypeV=stream.readInt();
				
				switchTypeT[switchTypeI]=switchTypeV;
			}
			
			this.motionID=stream.readInt();
			
			this.isStayAir=stream.readBoolean();
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
