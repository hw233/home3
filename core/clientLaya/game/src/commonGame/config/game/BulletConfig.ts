namespace Shine
{
	/** bullet表(generated by shine) */
	export class BulletConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,BulletConfig>;
		
		/** 子弹ID */
		public id:number;
		
		/** 名字 */
		public name:string;
		
		/** 攻击ID */
		public attackID:number;
		
		/** 最大有效距离 */
		public maxEnableDistance:number;
		
		/** 是否记录数值 */
		public needRecordValue:boolean;
		
		/** 达到最大影响目标后是否保留 */
		public keepAtMaxHit:boolean;
		
		/** 是否不可被吸收 */
		public cantAbsorb:boolean;
		
		/** 打击间隔(ms) */
		public hitDelay:number;
		
		/** 释放点类型 */
		public castPoint:number;
		
		/** 特效 */
		public effectID:number;
		
		/** 名字原值 */
		private _name:string;
		
		/** 获取 */
		public static get(id:number):BulletConfig
		{
			return this._dic.get(id);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,BulletConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,BulletConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,BulletConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.name=stream.readUTF();
			
			this.attackID=stream.readInt();
			
			this.maxEnableDistance=stream.readFloat();
			
			this.needRecordValue=stream.readBoolean();
			
			this.keepAtMaxHit=stream.readBoolean();
			
			this.cantAbsorb=stream.readBoolean();
			
			this.hitDelay=stream.readInt();
			
			this.castPoint=stream.readInt();
			
			this.effectID=stream.readInt();
			
		}
		
		/** 生成刷新配置 */
		protected generateRefresh():void
		{
			if(this._name==null)
				this._name=this.name;
			this.name=LanguageConfig.getText(this._name);
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
