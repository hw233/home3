namespace Shine
{
	/** 技能变量表(generated by shine) */
	export class SkillVarConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,SkillVarConfig>;
		
		/** 公式参数 */
		public args:number[][];
		
		/** 公式类型 */
		public formulaType:number;
		
		/** 变量id */
		public id:number;
		
		/** 获取 */
		public static get(id:number):SkillVarConfig
		{
			return this._dic.get(id);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,SkillVarConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,SkillVarConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,SkillVarConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.formulaType=stream.readInt();
			
			var argsLen:number=stream.readLen();
			this.args=new Array<number[]>(argsLen);
			var argsT:number[][]=this.args;
			for(var argsI:number=0;argsI<argsLen;++argsI)
			{
				var argsV:number[];
				var argsVLen:number=stream.readLen();
				argsV=new Array<number>(argsVLen);
				var argsVT:number[]=argsV;
				for(var argsVI:number=0;argsVI<argsVLen;++argsVI)
				{
					var argsVV:number;
					argsVV=stream.readInt();
					
					argsVT[argsVI]=argsVV;
				}
				
				argsT[argsI]=argsV;
			}
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
