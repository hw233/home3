namespace Shine
{
	/** 操作体表(generated by shine) */
	export class OperationConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,OperationConfig>;
		
		/** id */
		public id:number;
		
		/** 名字 */
		public name:string;
		
		/** 显示模型 */
		public modelID:number;
		
		/** 是否一次性 */
		public isOnce:boolean;
		
		/** 可操作半径 */
		public radius:number;
		
		/** 操作动作 */
		public operateActions:number[][];
		
		/** 操作条件 */
		public operateConditions:number[][];
		
		/** 名字原值 */
		private _name:string;
		
		/** 获取 */
		public static get(id:number):OperationConfig
		{
			return this._dic.get(id);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,OperationConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,OperationConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,OperationConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.name=stream.readUTF();
			
			var operateConditionsLen:number=stream.readLen();
			this.operateConditions=new Array<number[]>(operateConditionsLen);
			var operateConditionsT:number[][]=this.operateConditions;
			for(var operateConditionsI:number=0;operateConditionsI<operateConditionsLen;++operateConditionsI)
			{
				var operateConditionsV:number[];
				var operateConditionsVLen:number=stream.readLen();
				operateConditionsV=new Array<number>(operateConditionsVLen);
				var operateConditionsVT:number[]=operateConditionsV;
				for(var operateConditionsVI:number=0;operateConditionsVI<operateConditionsVLen;++operateConditionsVI)
				{
					var operateConditionsVV:number;
					operateConditionsVV=stream.readInt();
					
					operateConditionsVT[operateConditionsVI]=operateConditionsVV;
				}
				
				operateConditionsT[operateConditionsI]=operateConditionsV;
			}
			
			var operateActionsLen:number=stream.readLen();
			this.operateActions=new Array<number[]>(operateActionsLen);
			var operateActionsT:number[][]=this.operateActions;
			for(var operateActionsI:number=0;operateActionsI<operateActionsLen;++operateActionsI)
			{
				var operateActionsV:number[];
				var operateActionsVLen:number=stream.readLen();
				operateActionsV=new Array<number>(operateActionsVLen);
				var operateActionsVT:number[]=operateActionsV;
				for(var operateActionsVI:number=0;operateActionsVI<operateActionsVLen;++operateActionsVI)
				{
					var operateActionsVV:number;
					operateActionsVV=stream.readInt();
					
					operateActionsVT[operateActionsVI]=operateActionsVV;
				}
				
				operateActionsT[operateActionsI]=operateActionsV;
			}
			
			this.radius=stream.readFloat();
			
			this.isOnce=stream.readBoolean();
			
			this.modelID=stream.readInt();
			
		}
		
		/** 生成刷新配置 */
		protected generateRefresh():void
		{
			if(this._name==null)
				this._name=this.name;
			this.name=LanguageConfig.getText(this._name);
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
