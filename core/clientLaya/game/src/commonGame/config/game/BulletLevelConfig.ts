namespace Shine
{
	/** 子弹等级表(generated by shine) */
	export class BulletLevelConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,BulletLevelConfig>;
		
		/** 子弹id */
		public id:number;
		
		/** 等级 */
		public level:number;
		
		/** 投掷类型 */
		public castType:number;
		
		/** 投掷参数 */
		public castArgs:number[];
		
		/** 每个目标影响次数 */
		public eachHitNum:number;
		
		/** 最大影响目标数 */
		public maxInfluenceNum:number;
		
		/** 获取 */
		public static get(id:number,level:number):BulletLevelConfig
		{
			return this._dic.get(id * 65536 + level);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,BulletLevelConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,BulletLevelConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,BulletLevelConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.level=stream.readShort();
			
			this.castType=stream.readInt();
			
			var castArgsLen:number=stream.readLen();
			this.castArgs=new Array<number>(castArgsLen);
			var castArgsT:number[]=this.castArgs;
			for(var castArgsI:number=0;castArgsI<castArgsLen;++castArgsI)
			{
				var castArgsV:number;
				castArgsV=stream.readFloat();
				
				castArgsT[castArgsI]=castArgsV;
			}
			
			this.eachHitNum=stream.readInt();
			
			this.maxInfluenceNum=stream.readInt();
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
