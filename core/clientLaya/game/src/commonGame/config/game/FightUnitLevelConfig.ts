namespace Shine
{
	/** 战斗单位等级表(generated by shine) */
	export class FightUnitLevelConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,FightUnitLevelConfig>;
		
		/** id */
		public id:number;
		
		/** 等级 */
		public level:number;
		
		/** 属性组 */
		public attributes:DIntData[];
		
		/** 技能组 */
		public skills:DIntData[];
		
		/** buff组 */
		public buffs:DIntData[];
		
		/** 获取 */
		public static get(id:number,level:number):FightUnitLevelConfig
		{
			return this._dic.get(id * 65536 + level);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,FightUnitLevelConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,FightUnitLevelConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,FightUnitLevelConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.level=stream.readShort();
			
			var attributesLen:number=stream.readLen();
			this.attributes=new Array<DIntData>(attributesLen);
			var attributesT:DIntData[]=this.attributes;
			for(var attributesI:number=0;attributesI<attributesLen;++attributesI)
			{
				var attributesV:DIntData;
				attributesV=new DIntData();
				attributesV.readBytesSimple(stream);
				
				attributesT[attributesI]=attributesV;
			}
			
			var skillsLen:number=stream.readLen();
			this.skills=new Array<DIntData>(skillsLen);
			var skillsT:DIntData[]=this.skills;
			for(var skillsI:number=0;skillsI<skillsLen;++skillsI)
			{
				var skillsV:DIntData;
				skillsV=new DIntData();
				skillsV.readBytesSimple(stream);
				
				skillsT[skillsI]=skillsV;
			}
			
			var buffsLen:number=stream.readLen();
			this.buffs=new Array<DIntData>(buffsLen);
			var buffsT:DIntData[]=this.buffs;
			for(var buffsI:number=0;buffsI<buffsLen;++buffsI)
			{
				var buffsV:DIntData;
				buffsV=new DIntData();
				buffsV.readBytesSimple(stream);
				
				buffsT[buffsI]=buffsV;
			}
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
