namespace Shine
{
	/** 大浮点数阶位(generated by shine) */
	export class BigFloatRankConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,BigFloatRankConfig>;
		
		/** id */
		public id:number;
		
		/** 文本 */
		public str:string;
		
		/** 反向查找 */
		private static _dicT:SMap<string,number>;
		
		/** 获取 */
		public static get(id:number):BigFloatRankConfig
		{
			return this._dic.get(id);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,BigFloatRankConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,BigFloatRankConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,BigFloatRankConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.str=stream.readUTF();
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			this._dicT=new SMap<string,number>();

			this._dic.forEachValue(v => 
			{
				this._dicT.put(v.str,v.id);
			});
		}
		
		/** 获取每阶文字 */
		public static getRankStr(rank:number):string
		{
			var config:BigFloatRankConfig=this.get(rank);

			if(config!=null)
				return config.str;

			return "rank("+rank+")";
		}
		
		/** 通过文字获取阶数 */
		public static getRankByStr(str:string):number
		{
			var rank:number=this._dicT.get(str);

			if(rank==0)
			{
				Ctrl.warnLog("未找到BigFloatRank配置:"+str);
				return 0;
			}

			return rank;
		}
		
	}
}
