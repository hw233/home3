namespace Shine
{
	/** 消耗表(generated by shine) */
	export class CostConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,CostConfig>;
		
		/** id */
		public id:number;
		
		/** 消耗货币组(固定) */
		public currency:DIntData[];
		
		/** 消耗物品组(固定) */
		public items:DIntData[];
		
		/** 获取 */
		public static get(id:number):CostConfig
		{
			return this._dic.get(id);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,CostConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,CostConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,CostConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			var currencyLen:number=stream.readLen();
			this.currency=new Array<DIntData>(currencyLen);
			var currencyT:DIntData[]=this.currency;
			for(var currencyI:number=0;currencyI<currencyLen;++currencyI)
			{
				var currencyV:DIntData;
				currencyV=new DIntData();
				currencyV.readBytesSimple(stream);
				
				currencyT[currencyI]=currencyV;
			}
			
			var itemsLen:number=stream.readLen();
			this.items=new Array<DIntData>(itemsLen);
			var itemsT:DIntData[]=this.items;
			for(var itemsI:number=0;itemsI<itemsLen;++itemsI)
			{
				var itemsV:DIntData;
				itemsV=new DIntData();
				itemsV.readBytesSimple(stream);
				
				itemsT[itemsI]=itemsV;
			}
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
