namespace Shine
{
	/** 建筑等级表(generated by shine) */
	export class BuildingLevelConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,BuildingLevelConfig>;
		
		/** id */
		public id:number;
		
		/** 消耗ID */
		public costID:number;
		
		/** 等级 */
		public level:number;
		
		/** 占用角色属性(建筑消失后归还) */
		public useRoleAttributes:DIntData[];
		
		/** 增加功能组(建造好后) */
		public addActions:number[][];
		
		/** 增加角色属性组(建造好后) */
		public addRoleAttributes:DIntData[];
		
		/** 建造时间(ms) */
		public buildTime:number;
		
		/** 升级时间(ms) */
		public levelUpTime:number;
		
		/** 获取 */
		public static get(id:number,level:number):BuildingLevelConfig
		{
			return this._dic.get(id * 65536 + level);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,BuildingLevelConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,BuildingLevelConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,BuildingLevelConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.level=stream.readShort();
			
			this.costID=stream.readInt();
			
			var useRoleAttributesLen:number=stream.readLen();
			this.useRoleAttributes=new Array<DIntData>(useRoleAttributesLen);
			var useRoleAttributesT:DIntData[]=this.useRoleAttributes;
			for(var useRoleAttributesI:number=0;useRoleAttributesI<useRoleAttributesLen;++useRoleAttributesI)
			{
				var useRoleAttributesV:DIntData;
				useRoleAttributesV=new DIntData();
				useRoleAttributesV.readBytesSimple(stream);
				
				useRoleAttributesT[useRoleAttributesI]=useRoleAttributesV;
			}
			
			var addRoleAttributesLen:number=stream.readLen();
			this.addRoleAttributes=new Array<DIntData>(addRoleAttributesLen);
			var addRoleAttributesT:DIntData[]=this.addRoleAttributes;
			for(var addRoleAttributesI:number=0;addRoleAttributesI<addRoleAttributesLen;++addRoleAttributesI)
			{
				var addRoleAttributesV:DIntData;
				addRoleAttributesV=new DIntData();
				addRoleAttributesV.readBytesSimple(stream);
				
				addRoleAttributesT[addRoleAttributesI]=addRoleAttributesV;
			}
			
			var addActionsLen:number=stream.readLen();
			this.addActions=new Array<number[]>(addActionsLen);
			var addActionsT:number[][]=this.addActions;
			for(var addActionsI:number=0;addActionsI<addActionsLen;++addActionsI)
			{
				var addActionsV:number[];
				var addActionsVLen:number=stream.readLen();
				addActionsV=new Array<number>(addActionsVLen);
				var addActionsVT:number[]=addActionsV;
				for(var addActionsVI:number=0;addActionsVI<addActionsVLen;++addActionsVI)
				{
					var addActionsVV:number;
					addActionsVV=stream.readInt();
					
					addActionsVT[addActionsVI]=addActionsVV;
				}
				
				addActionsT[addActionsI]=addActionsV;
			}
			
			this.buildTime=stream.readInt();
			
			this.levelUpTime=stream.readInt();
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
