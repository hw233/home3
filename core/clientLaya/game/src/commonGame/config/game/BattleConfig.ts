namespace Shine
{
	/** 副本基础表(generated by shine) */
	export class BattleConfig extends BaseConfig
	{
		/** 存储集合 */
		private static _dic:SMap<number,BattleConfig>;
		
		/** 副本ID */
		public id:number;
		
		/** 副本进入阶段最长等待时间(s) */
		public enterStateTime:number;
		
		/** 副本准备阶段最长等待时间(321倒计时)(s) */
		public preStateTime:number;
		
		/** 副本过程持续时间(s) */
		public runningStateTime:number;
		
		/** 副本完成阶段时间(出结果前)(s) */
		public overStateTime:number;
		
		/** 副本结算阶段时间(s) */
		public resultStateTime:number;
		
		/** 是否独立当前属性buffCD */
		public isIndependent:boolean;
		
		/** 获取 */
		public static get(id:number):BattleConfig
		{
			return this._dic.get(id);
		}
		
		/** 设置字典 */
		public static setDic(dic:SMap<number,BattleConfig>):void
		{
			this._dic=dic;
		}
		
		/** 添加字典(热更用) */
		public static addDic(dic:SMap<number,BattleConfig>):void
		{
			this._dic.putAll(dic);
		}
		
		/** 获取全部 */
		public static getDic():SMap<number,BattleConfig>
		{
			return this._dic;
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			super.toReadBytesSimple(stream);
			
			this.id=stream.readInt();
			
			this.enterStateTime=stream.readInt();
			
			this.preStateTime=stream.readInt();
			
			this.runningStateTime=stream.readInt();
			
			this.overStateTime=stream.readInt();
			
			this.resultStateTime=stream.readInt();
			
			this.isIndependent=stream.readBoolean();
			
		}
		
		/** 读完所有表后处理 */
		public static afterReadConfigAll():void
		{
			
		}
		
	}
}
