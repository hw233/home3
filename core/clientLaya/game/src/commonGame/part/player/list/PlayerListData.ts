namespace Shine
{
	/** 玩家数据主体(generated by shine) */
	export class PlayerListData extends BaseData
	{
		/** 数据类型ID */
		public static dataID:number=PlayerListDataType.Player;
		
		/** 系统 */
		public system:SystemPartData;
		
		/** 通用功能 */
		public func:FuncPartData;
		
		/** 活动 */
		public activity:ActivityPartData;
		
		/** 玩家 */
		public role:RolePartData;
		
		/** 场景 */
		public scene:ScenePartData;
		
		/** 角色 */
		public character:CharacterPartData;
		
		/** 社交 */
		public social:SocialPartData;
		
		/** 背包 */
		public bag:BagPartData;
		
		/** 邮件 */
		public mail:MailPartData;
		
		/** 任务 */
		public quest:QuestPartData;
		
		/** 引导 */
		public guide:GuidePartData;
		
		/** 装备 */
		public equip:EquipPartData;
		
		/** 好友 */
		public friend:FriendPartData;
		
		/** 组队 */
		public team:TeamPartData;
		
		/** 工会 */
		public union:UnionPartData;
		
		/** 成就 */
		public achievement:AchievementPartData;
		
		constructor()
		{
			super();
			this._dataID=PlayerListDataType.Player;
		}
		
		/** 获取数据类名 */
		public getDataClassName():string
		{
			return "PlayerListData";
		}
		
		/** 读取字节流(简版) */
		protected toReadBytesSimple(stream:BytesReadStream):void
		{
			this.system=stream.readDataSimpleNotNull() as SystemPartData;
			
			this.func=stream.readDataSimpleNotNull() as FuncPartData;
			
			this.activity=stream.readDataSimpleNotNull() as ActivityPartData;
			
			this.role=stream.readDataSimpleNotNull() as RolePartData;
			
			this.scene=stream.readDataSimpleNotNull() as ScenePartData;
			
			this.character=stream.readDataSimpleNotNull() as CharacterPartData;
			
			this.social=stream.readDataSimpleNotNull() as SocialPartData;
			
			this.bag=stream.readDataSimpleNotNull() as BagPartData;
			
			this.mail=stream.readDataSimpleNotNull() as MailPartData;
			
			this.quest=stream.readDataSimpleNotNull() as QuestPartData;
			
			this.guide=stream.readDataSimpleNotNull() as GuidePartData;
			
			this.friend=stream.readDataSimpleNotNull() as FriendPartData;
			
			this.equip=stream.readDataSimpleNotNull() as EquipPartData;
			
			this.team=stream.readDataSimpleNotNull() as TeamPartData;
			
			this.union=stream.readDataSimpleNotNull() as UnionPartData;
			
			this.achievement=stream.readDataSimpleNotNull() as AchievementPartData;
			
		}
		
		/** 写入字节流(简版) */
		protected toWriteBytesSimple(stream:BytesWriteStream):void
		{
			stream.writeDataSimpleNotNull(this.system);
			
			stream.writeDataSimpleNotNull(this.func);
			
			stream.writeDataSimpleNotNull(this.activity);
			
			stream.writeDataSimpleNotNull(this.role);
			
			stream.writeDataSimpleNotNull(this.scene);
			
			stream.writeDataSimpleNotNull(this.character);
			
			stream.writeDataSimpleNotNull(this.social);
			
			stream.writeDataSimpleNotNull(this.bag);
			
			stream.writeDataSimpleNotNull(this.mail);
			
			stream.writeDataSimpleNotNull(this.quest);
			
			stream.writeDataSimpleNotNull(this.guide);
			
			stream.writeDataSimpleNotNull(this.friend);
			
			stream.writeDataSimpleNotNull(this.equip);
			
			stream.writeDataSimpleNotNull(this.team);
			
			stream.writeDataSimpleNotNull(this.union);
			
			stream.writeDataSimpleNotNull(this.achievement);
			
		}
		
		/** 复制(潜拷贝) */
		protected toShadowCopy(data:BaseData):void
		{
			if(!(data instanceof PlayerListData))
				return;
			
			var mData:PlayerListData=data as PlayerListData;
			
			this.system=mData.system;
			this.func=mData.func;
			this.activity=mData.activity;
			this.role=mData.role;
			this.scene=mData.scene;
			this.character=mData.character;
			this.social=mData.social;
			this.bag=mData.bag;
			this.mail=mData.mail;
			this.quest=mData.quest;
			this.guide=mData.guide;
			this.friend=mData.friend;
			this.equip=mData.equip;
			this.team=mData.team;
			this.union=mData.union;
			this.achievement=mData.achievement;
		}
		
		/** 复制(深拷贝) */
		protected toCopy(data:BaseData):void
		{
			if(!(data instanceof PlayerListData))
				return;
			
			var mData:PlayerListData=data as PlayerListData;
			
			this.system=mData.system.clone() as SystemPartData;
			
			this.func=mData.func.clone() as FuncPartData;
			
			this.activity=mData.activity.clone() as ActivityPartData;
			
			this.role=mData.role.clone() as RolePartData;
			
			this.scene=mData.scene.clone() as ScenePartData;
			
			this.character=mData.character.clone() as CharacterPartData;
			
			this.social=mData.social.clone() as SocialPartData;
			
			this.bag=mData.bag.clone() as BagPartData;
			
			this.mail=mData.mail.clone() as MailPartData;
			
			this.quest=mData.quest.clone() as QuestPartData;
			
			this.guide=mData.guide.clone() as GuidePartData;
			
			this.friend=mData.friend.clone() as FriendPartData;
			
			this.equip=mData.equip.clone() as EquipPartData;
			
			this.team=mData.team.clone() as TeamPartData;
			
			this.union=mData.union.clone() as UnionPartData;
			
			this.achievement=mData.achievement.clone() as AchievementPartData;
			
		}
		
		/** 读取字节流(完整版) */
		protected toReadBytesFull(stream:BytesReadStream):void
		{
			var position:number=BytesReadStream.getReadBytes(stream);
			
			this.system=stream.readDataFullNotNull() as SystemPartData;
			
			this.func=stream.readDataFullNotNull() as FuncPartData;
			
			this.activity=stream.readDataFullNotNull() as ActivityPartData;
			
			this.role=stream.readDataFullNotNull() as RolePartData;
			
			this.scene=stream.readDataFullNotNull() as ScenePartData;
			
			this.character=stream.readDataFullNotNull() as CharacterPartData;
			
			this.social=stream.readDataFullNotNull() as SocialPartData;
			
			this.bag=stream.readDataFullNotNull() as BagPartData;
			
			this.mail=stream.readDataFullNotNull() as MailPartData;
			
			this.quest=stream.readDataFullNotNull() as QuestPartData;
			
			this.guide=stream.readDataFullNotNull() as GuidePartData;
			
			this.friend=stream.readDataFullNotNull() as FriendPartData;
			
			this.equip=stream.readDataFullNotNull() as EquipPartData;
			
			this.team=stream.readDataFullNotNull() as TeamPartData;
			
			this.union=stream.readDataFullNotNull() as UnionPartData;
			
			this.achievement=stream.readDataFullNotNull() as AchievementPartData;
			
			BytesReadStream.disReadBytes(stream,position);
		}
		
		/** 写入字节流(完整版) */
		protected toWriteBytesFull(stream:BytesWriteStream):void
		{
			var position:number=BytesWriteStream.getWriteBytes(stream);
			
			stream.writeDataFullNotNull(this.system);
			
			stream.writeDataFullNotNull(this.func);
			
			stream.writeDataFullNotNull(this.activity);
			
			stream.writeDataFullNotNull(this.role);
			
			stream.writeDataFullNotNull(this.scene);
			
			stream.writeDataFullNotNull(this.character);
			
			stream.writeDataFullNotNull(this.social);
			
			stream.writeDataFullNotNull(this.bag);
			
			stream.writeDataFullNotNull(this.mail);
			
			stream.writeDataFullNotNull(this.quest);
			
			stream.writeDataFullNotNull(this.guide);
			
			stream.writeDataFullNotNull(this.friend);
			
			stream.writeDataFullNotNull(this.equip);
			
			stream.writeDataFullNotNull(this.team);
			
			stream.writeDataFullNotNull(this.union);
			
			stream.writeDataFullNotNull(this.achievement);
			
			BytesWriteStream.disWriteBytes(stream,position);
		}
		
		/** 是否数据一致 */
		protected toDataEquals(data:BaseData):boolean
		{
			var mData:PlayerListData=data as PlayerListData;
			if(this.system==null)
				return false;
			if(!this.system.dataEquals(mData.system))
				return false;
			
			if(this.func==null)
				return false;
			if(!this.func.dataEquals(mData.func))
				return false;
			
			if(this.activity==null)
				return false;
			if(!this.activity.dataEquals(mData.activity))
				return false;
			
			if(this.role==null)
				return false;
			if(!this.role.dataEquals(mData.role))
				return false;
			
			if(this.scene==null)
				return false;
			if(!this.scene.dataEquals(mData.scene))
				return false;
			
			if(this.character==null)
				return false;
			if(!this.character.dataEquals(mData.character))
				return false;
			
			if(this.social==null)
				return false;
			if(!this.social.dataEquals(mData.social))
				return false;
			
			if(this.bag==null)
				return false;
			if(!this.bag.dataEquals(mData.bag))
				return false;
			
			if(this.mail==null)
				return false;
			if(!this.mail.dataEquals(mData.mail))
				return false;
			
			if(this.quest==null)
				return false;
			if(!this.quest.dataEquals(mData.quest))
				return false;
			
			if(this.guide==null)
				return false;
			if(!this.guide.dataEquals(mData.guide))
				return false;
			
			if(this.friend==null)
				return false;
			if(!this.friend.dataEquals(mData.friend))
				return false;
			
			if(this.equip==null)
				return false;
			if(!this.equip.dataEquals(mData.equip))
				return false;
			
			if(this.team==null)
				return false;
			if(!this.team.dataEquals(mData.team))
				return false;
			
			if(this.union==null)
				return false;
			if(!this.union.dataEquals(mData.union))
				return false;
			
			if(this.achievement==null)
				return false;
			if(!this.achievement.dataEquals(mData.achievement))
				return false;
			
			return true;
		}
		
		/** 转文本输出 */
		protected toWriteDataString(writer:DataWriter):void
		{
			writer.writeTabs();
			writer.sb.append("system");
			writer.sb.append(':');
			this.system.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("func");
			writer.sb.append(':');
			this.func.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("activity");
			writer.sb.append(':');
			this.activity.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("role");
			writer.sb.append(':');
			this.role.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("scene");
			writer.sb.append(':');
			this.scene.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("character");
			writer.sb.append(':');
			this.character.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("social");
			writer.sb.append(':');
			this.social.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("bag");
			writer.sb.append(':');
			this.bag.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("mail");
			writer.sb.append(':');
			this.mail.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("quest");
			writer.sb.append(':');
			this.quest.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("guide");
			writer.sb.append(':');
			this.guide.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("friend");
			writer.sb.append(':');
			this.friend.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("equip");
			writer.sb.append(':');
			this.equip.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("team");
			writer.sb.append(':');
			this.team.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("union");
			writer.sb.append(':');
			this.union.writeDataString(writer);
			
			writer.writeEnter();
			writer.writeTabs();
			writer.sb.append("achievement");
			writer.sb.append(':');
			this.achievement.writeDataString(writer);
			
			writer.writeEnter();
		}
		
	}
}
